ARM GAS  /tmp/cc8nQJwG.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"cop.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/BLT/cop.c"
  20              		.section	.text.CopInit,"ax",%progbits
  21              		.align	1
  22              		.global	CopInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	CopInit:
  28              	.LFB0:
   1:Core/Src/BLT/cop.c **** /************************************************************************************//**
   2:Core/Src/BLT/cop.c **** * \file         Source/cop.c
   3:Core/Src/BLT/cop.c **** * \brief        Bootloader watchdog module source file.
   4:Core/Src/BLT/cop.c **** * \ingroup      Core
   5:Core/Src/BLT/cop.c **** * \internal
   6:Core/Src/BLT/cop.c **** *----------------------------------------------------------------------------------------
   7:Core/Src/BLT/cop.c **** *                          C O P Y R I G H T
   8:Core/Src/BLT/cop.c **** *----------------------------------------------------------------------------------------
   9:Core/Src/BLT/cop.c **** *   Copyright (c) 2011  by Feaser    http://www.feaser.com    All rights reserved
  10:Core/Src/BLT/cop.c **** *
  11:Core/Src/BLT/cop.c **** *----------------------------------------------------------------------------------------
  12:Core/Src/BLT/cop.c **** *                            L I C E N S E
  13:Core/Src/BLT/cop.c **** *----------------------------------------------------------------------------------------
  14:Core/Src/BLT/cop.c **** * This file is part of OpenBLT. OpenBLT is free software: you can redistribute it and/or
  15:Core/Src/BLT/cop.c **** * modify it under the terms of the GNU General Public License as published by the Free
  16:Core/Src/BLT/cop.c **** * Software Foundation, either version 3 of the License, or (at your option) any later
  17:Core/Src/BLT/cop.c **** * version.
  18:Core/Src/BLT/cop.c **** *
  19:Core/Src/BLT/cop.c **** * OpenBLT is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  20:Core/Src/BLT/cop.c **** * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  21:Core/Src/BLT/cop.c **** * PURPOSE. See the GNU General Public License for more details.
  22:Core/Src/BLT/cop.c **** *
  23:Core/Src/BLT/cop.c **** * You have received a copy of the GNU General Public License along with OpenBLT. It
  24:Core/Src/BLT/cop.c **** * should be located in ".\Doc\license.html". If not, contact Feaser to obtain a copy.
  25:Core/Src/BLT/cop.c **** *
  26:Core/Src/BLT/cop.c **** * \endinternal
  27:Core/Src/BLT/cop.c **** ****************************************************************************************/
  28:Core/Src/BLT/cop.c **** 
  29:Core/Src/BLT/cop.c **** /****************************************************************************************
  30:Core/Src/BLT/cop.c **** * Include files
ARM GAS  /tmp/cc8nQJwG.s 			page 2


  31:Core/Src/BLT/cop.c **** ****************************************************************************************/
  32:Core/Src/BLT/cop.c **** #include "BLT/boot.h"                                /* bootloader generic header          */
  33:Core/Src/BLT/cop.c **** 
  34:Core/Src/BLT/cop.c **** 
  35:Core/Src/BLT/cop.c **** /****************************************************************************************
  36:Core/Src/BLT/cop.c **** * Hook functions
  37:Core/Src/BLT/cop.c **** ****************************************************************************************/
  38:Core/Src/BLT/cop.c **** #if (BOOT_COP_HOOKS_ENABLE > 0)
  39:Core/Src/BLT/cop.c **** extern void CopInitHook(void);
  40:Core/Src/BLT/cop.c **** extern void CopServiceHook(void);
  41:Core/Src/BLT/cop.c **** #endif
  42:Core/Src/BLT/cop.c **** 
  43:Core/Src/BLT/cop.c **** 
  44:Core/Src/BLT/cop.c **** /************************************************************************************//**
  45:Core/Src/BLT/cop.c **** ** \brief     Watchdog initialization function.
  46:Core/Src/BLT/cop.c **** ** \return    none
  47:Core/Src/BLT/cop.c **** **
  48:Core/Src/BLT/cop.c **** ****************************************************************************************/
  49:Core/Src/BLT/cop.c **** void CopInit(void)
  50:Core/Src/BLT/cop.c **** {
  29              		.loc 1 50 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  51:Core/Src/BLT/cop.c **** #if (BOOT_COP_HOOKS_ENABLE > 0)
  52:Core/Src/BLT/cop.c ****   CopInitHook();
  53:Core/Src/BLT/cop.c **** #endif
  54:Core/Src/BLT/cop.c **** } /*** end of CopInit ***/
  34              		.loc 1 54 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE0:
  39              		.section	.text.CopService,"ax",%progbits
  40              		.align	1
  41              		.global	CopService
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	CopService:
  47              	.LFB1:
  55:Core/Src/BLT/cop.c **** 
  56:Core/Src/BLT/cop.c **** 
  57:Core/Src/BLT/cop.c **** /************************************************************************************//**
  58:Core/Src/BLT/cop.c **** ** \brief     Watchdog service function to prevent the watchdog from timing out.
  59:Core/Src/BLT/cop.c **** ** \return    none
  60:Core/Src/BLT/cop.c **** **
  61:Core/Src/BLT/cop.c **** ****************************************************************************************/
  62:Core/Src/BLT/cop.c **** void CopService(void)
  63:Core/Src/BLT/cop.c **** {
  48              		.loc 1 63 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  64:Core/Src/BLT/cop.c **** #if (BOOT_COP_HOOKS_ENABLE > 0)
  65:Core/Src/BLT/cop.c ****   CopServiceHook();
ARM GAS  /tmp/cc8nQJwG.s 			page 3


  66:Core/Src/BLT/cop.c **** #endif
  67:Core/Src/BLT/cop.c **** } /*** end of CopService ***/
  53              		.loc 1 67 1 view .LVU3
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE1:
  58              		.text
  59              	.Letext0:
ARM GAS  /tmp/cc8nQJwG.s 			page 4


DEFINED SYMBOLS
                            *ABS*:00000000 cop.c
     /tmp/cc8nQJwG.s:21     .text.CopInit:00000000 $t
     /tmp/cc8nQJwG.s:27     .text.CopInit:00000000 CopInit
     /tmp/cc8nQJwG.s:40     .text.CopService:00000000 $t
     /tmp/cc8nQJwG.s:46     .text.CopService:00000000 CopService

NO UNDEFINED SYMBOLS
