ARM GAS  /tmp/ccb89HYV.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"xcp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/BLT/xcp.c"
  20              		.section	.text.XcpProtectResources,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	XcpProtectResources:
  27              	.LFB6:
   1:Core/Src/BLT/xcp.c **** /************************************************************************************//**
   2:Core/Src/BLT/xcp.c **** * \file         Source/xcp.c
   3:Core/Src/BLT/xcp.c **** * \brief        XCP 1.0 protocol core source file.
   4:Core/Src/BLT/xcp.c **** * \ingroup      Core
   5:Core/Src/BLT/xcp.c **** * \internal
   6:Core/Src/BLT/xcp.c **** *----------------------------------------------------------------------------------------
   7:Core/Src/BLT/xcp.c **** *                          C O P Y R I G H T
   8:Core/Src/BLT/xcp.c **** *----------------------------------------------------------------------------------------
   9:Core/Src/BLT/xcp.c **** *   Copyright (c) 2011  by Feaser    http://www.feaser.com    All rights reserved
  10:Core/Src/BLT/xcp.c **** *
  11:Core/Src/BLT/xcp.c **** *----------------------------------------------------------------------------------------
  12:Core/Src/BLT/xcp.c **** *                            L I C E N S E
  13:Core/Src/BLT/xcp.c **** *----------------------------------------------------------------------------------------
  14:Core/Src/BLT/xcp.c **** * This file is part of OpenBLT. OpenBLT is free software: you can redistribute it and/or
  15:Core/Src/BLT/xcp.c **** * modify it under the terms of the GNU General Public License as published by the Free
  16:Core/Src/BLT/xcp.c **** * Software Foundation, either version 3 of the License, or (at your option) any later
  17:Core/Src/BLT/xcp.c **** * version.
  18:Core/Src/BLT/xcp.c **** *
  19:Core/Src/BLT/xcp.c **** * OpenBLT is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  20:Core/Src/BLT/xcp.c **** * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  21:Core/Src/BLT/xcp.c **** * PURPOSE. See the GNU General Public License for more details.
  22:Core/Src/BLT/xcp.c **** *
  23:Core/Src/BLT/xcp.c **** * You have received a copy of the GNU General Public License along with OpenBLT. It
  24:Core/Src/BLT/xcp.c **** * should be located in ".\Doc\license.html". If not, contact Feaser to obtain a copy.
  25:Core/Src/BLT/xcp.c **** *
  26:Core/Src/BLT/xcp.c **** * \endinternal
  27:Core/Src/BLT/xcp.c **** ****************************************************************************************/
  28:Core/Src/BLT/xcp.c **** 
  29:Core/Src/BLT/xcp.c **** /****************************************************************************************
  30:Core/Src/BLT/xcp.c **** * Include files
  31:Core/Src/BLT/xcp.c **** ****************************************************************************************/
ARM GAS  /tmp/ccb89HYV.s 			page 2


  32:Core/Src/BLT/xcp.c **** #include "BLT/boot.h"                                /* bootloader generic header          */
  33:Core/Src/BLT/xcp.c **** 
  34:Core/Src/BLT/xcp.c **** 
  35:Core/Src/BLT/xcp.c **** #if (BOOT_COM_ENABLE > 0)
  36:Core/Src/BLT/xcp.c **** /****************************************************************************************
  37:Core/Src/BLT/xcp.c **** * Type definitions
  38:Core/Src/BLT/xcp.c **** ****************************************************************************************/
  39:Core/Src/BLT/xcp.c **** /** \brief Structure type for grouping XCP internal module information. */
  40:Core/Src/BLT/xcp.c **** typedef struct
  41:Core/Src/BLT/xcp.c **** {
  42:Core/Src/BLT/xcp.c ****   blt_int8u  ctoData[BOOT_COM_RX_MAX_DATA];         /**< cto packet data buffer        */
  43:Core/Src/BLT/xcp.c ****   blt_int8u  connected;                             /**< connection established        */
  44:Core/Src/BLT/xcp.c ****   blt_int8u  protection;                            /**< protection state              */
  45:Core/Src/BLT/xcp.c ****   blt_int8u  s_n_k_resource;                        /**< for seed/key sequence         */
  46:Core/Src/BLT/xcp.c ****   blt_int8u  ctoPending;                            /**< cto transmission pending flag */
  47:Core/Src/BLT/xcp.c ****   blt_int16s ctoLen;                                /**< cto current packet length     */
  48:Core/Src/BLT/xcp.c ****   blt_int32u mta;                                   /**< memory transfer address       */
  49:Core/Src/BLT/xcp.c **** } tXcpInfo;
  50:Core/Src/BLT/xcp.c **** 
  51:Core/Src/BLT/xcp.c **** 
  52:Core/Src/BLT/xcp.c **** /****************************************************************************************
  53:Core/Src/BLT/xcp.c **** * Function prototypes
  54:Core/Src/BLT/xcp.c **** ****************************************************************************************/
  55:Core/Src/BLT/xcp.c **** /* transport layer specific functions */
  56:Core/Src/BLT/xcp.c **** static void      XcpTransmitPacket(blt_int8u *data, blt_int16s len);
  57:Core/Src/BLT/xcp.c **** 
  58:Core/Src/BLT/xcp.c **** /* application specific functions */
  59:Core/Src/BLT/xcp.c **** static blt_int8u XcpComputeChecksum(blt_int32u address, blt_int32u length,
  60:Core/Src/BLT/xcp.c ****                                     blt_int32u *checksum);
  61:Core/Src/BLT/xcp.c **** 
  62:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
  63:Core/Src/BLT/xcp.c **** static blt_int8u XcpGetSeed(blt_int8u resource, blt_int8u *seed);
  64:Core/Src/BLT/xcp.c **** static blt_int8u XcpVerifyKey(blt_int8u resource, blt_int8u *key, blt_int8u len);
  65:Core/Src/BLT/xcp.c **** #endif
  66:Core/Src/BLT/xcp.c **** 
  67:Core/Src/BLT/xcp.c **** /* general utility functions */
  68:Core/Src/BLT/xcp.c **** static void       XcpProtectResources(void);
  69:Core/Src/BLT/xcp.c **** static void       XcpSetCtoError(blt_int8u error);
  70:Core/Src/BLT/xcp.c **** static blt_int32u XcpGetOrderedLong(blt_int8u const * data);
  71:Core/Src/BLT/xcp.c **** static void       XcpSetOrderedLong(blt_int32u value, blt_int8u *data);
  72:Core/Src/BLT/xcp.c **** 
  73:Core/Src/BLT/xcp.c **** /* XCP command processors */
  74:Core/Src/BLT/xcp.c **** static void XcpCmdConnect(blt_int8u *data);
  75:Core/Src/BLT/xcp.c **** static void XcpCmdDisconnect(blt_int8u *data);
  76:Core/Src/BLT/xcp.c **** static void XcpCmdGetStatus(blt_int8u *data);
  77:Core/Src/BLT/xcp.c **** static void XcpCmdSynch(blt_int8u *data);
  78:Core/Src/BLT/xcp.c **** static void XcpCmdGetId(blt_int8u *data);
  79:Core/Src/BLT/xcp.c **** static void XcpCmdSetMta(blt_int8u *data);
  80:Core/Src/BLT/xcp.c **** static void XcpCmdUpload(blt_int8u *data);
  81:Core/Src/BLT/xcp.c **** static void XcpCmdShortUpload(blt_int8u *data);
  82:Core/Src/BLT/xcp.c **** static void XcpCmdBuildCheckSum(blt_int8u *data);
  83:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
  84:Core/Src/BLT/xcp.c **** static void XcpCmdGetSeed(blt_int8u *data);
  85:Core/Src/BLT/xcp.c **** static void XcpCmdUnlock(blt_int8u *data);
  86:Core/Src/BLT/xcp.c **** #endif
  87:Core/Src/BLT/xcp.c **** #if (XCP_RES_CALIBRATION_EN == 1)
  88:Core/Src/BLT/xcp.c **** static void XcpCmdDownload(blt_int8u *data);
ARM GAS  /tmp/ccb89HYV.s 			page 3


  89:Core/Src/BLT/xcp.c **** static void XcpCmdDownloadMax(blt_int8u *data);
  90:Core/Src/BLT/xcp.c **** #endif
  91:Core/Src/BLT/xcp.c **** #if (XCP_RES_PAGING_EN == 1)
  92:Core/Src/BLT/xcp.c **** static void XcpCmdSetCalPage(blt_int8u *data);
  93:Core/Src/BLT/xcp.c **** static void XcpCmdGetCalPage(blt_int8u *data);
  94:Core/Src/BLT/xcp.c **** #endif
  95:Core/Src/BLT/xcp.c **** #if (XCP_RES_PROGRAMMING_EN == 1)
  96:Core/Src/BLT/xcp.c **** static void XcpCmdProgramMax(blt_int8u *data);
  97:Core/Src/BLT/xcp.c **** static void XcpCmdProgram(blt_int8u *data);
  98:Core/Src/BLT/xcp.c **** static void XcpCmdProgramStart(blt_int8u *data);
  99:Core/Src/BLT/xcp.c **** static void XcpCmdProgramClear(blt_int8u *data);
 100:Core/Src/BLT/xcp.c **** static void XcpCmdProgramReset(blt_int8u *data);
 101:Core/Src/BLT/xcp.c **** static void XcpCmdProgramPrepare(blt_int8u *data);
 102:Core/Src/BLT/xcp.c **** #endif
 103:Core/Src/BLT/xcp.c **** 
 104:Core/Src/BLT/xcp.c **** 
 105:Core/Src/BLT/xcp.c **** /****************************************************************************************
 106:Core/Src/BLT/xcp.c **** * Hook functions
 107:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 108:Core/Src/BLT/xcp.c **** #if (XCP_PACKET_RECEIVED_HOOK_EN == 1)
 109:Core/Src/BLT/xcp.c **** extern blt_bool XcpPacketReceivedHook(blt_int8u *data, blt_int8u len);
 110:Core/Src/BLT/xcp.c **** #endif
 111:Core/Src/BLT/xcp.c **** 
 112:Core/Src/BLT/xcp.c **** #if (XCP_RES_PAGING_EN == 1)
 113:Core/Src/BLT/xcp.c **** extern blt_int8u XcpCalSetPageHook(blt_int8u segment, blt_int8u page);
 114:Core/Src/BLT/xcp.c **** extern blt_int8u XcpCalGetPageHook(blt_int8u segment);
 115:Core/Src/BLT/xcp.c **** #endif
 116:Core/Src/BLT/xcp.c **** 
 117:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 118:Core/Src/BLT/xcp.c **** extern blt_int8u XcpGetSeedHook(blt_int8u resource, blt_int8u *seed);
 119:Core/Src/BLT/xcp.c **** extern blt_int8u XcpVerifyKeyHook(blt_int8u resource, blt_int8u *key, blt_int8u len);
 120:Core/Src/BLT/xcp.c **** #endif
 121:Core/Src/BLT/xcp.c **** 
 122:Core/Src/BLT/xcp.c **** 
 123:Core/Src/BLT/xcp.c **** /****************************************************************************************
 124:Core/Src/BLT/xcp.c **** * External functions
 125:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 126:Core/Src/BLT/xcp.c **** #if (BOOT_COM_ENABLE == 0)
 127:Core/Src/BLT/xcp.c **** /* in case no internally supported communication interface is used, a custom
 128:Core/Src/BLT/xcp.c ****  * communication module can be added. In order to use the XCP protocol in the custom
 129:Core/Src/BLT/xcp.c ****  * communication module, this hook function needs to be implemented. If the XCP protocol
 130:Core/Src/BLT/xcp.c ****  * is not needed, then simply remove the xcp.c source from the project.
 131:Core/Src/BLT/xcp.c ****  */
 132:Core/Src/BLT/xcp.c **** extern void XcpTransmitPacketHook(blt_int8u *data, blt_int16u len);
 133:Core/Src/BLT/xcp.c **** #endif
 134:Core/Src/BLT/xcp.c **** 
 135:Core/Src/BLT/xcp.c **** 
 136:Core/Src/BLT/xcp.c **** /****************************************************************************************
 137:Core/Src/BLT/xcp.c **** * Local constants
 138:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 139:Core/Src/BLT/xcp.c **** /** \brief String buffer with station id. */
 140:Core/Src/BLT/xcp.c **** static const blt_int8s xcpStationId[] = XCP_STATION_ID_STRING;
 141:Core/Src/BLT/xcp.c **** 
 142:Core/Src/BLT/xcp.c **** 
 143:Core/Src/BLT/xcp.c **** /****************************************************************************************
 144:Core/Src/BLT/xcp.c **** * Local data definitions
 145:Core/Src/BLT/xcp.c **** ****************************************************************************************/
ARM GAS  /tmp/ccb89HYV.s 			page 4


 146:Core/Src/BLT/xcp.c **** /** \brief Local variable for storing XCP internal module info. */
 147:Core/Src/BLT/xcp.c **** static tXcpInfo xcpInfo;
 148:Core/Src/BLT/xcp.c **** 
 149:Core/Src/BLT/xcp.c **** 
 150:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 151:Core/Src/BLT/xcp.c **** ** \brief     Initializes the XCP driver. Should be called once upon system startup.
 152:Core/Src/BLT/xcp.c **** ** \return    none
 153:Core/Src/BLT/xcp.c **** **
 154:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 155:Core/Src/BLT/xcp.c **** void XcpInit(void)
 156:Core/Src/BLT/xcp.c **** {
 157:Core/Src/BLT/xcp.c ****   /* reset xcp module info */
 158:Core/Src/BLT/xcp.c ****   xcpInfo.connected = 0;
 159:Core/Src/BLT/xcp.c ****   xcpInfo.mta = 0;
 160:Core/Src/BLT/xcp.c ****   xcpInfo.ctoPending = 0;
 161:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 0;
 162:Core/Src/BLT/xcp.c ****   xcpInfo.s_n_k_resource = 0;
 163:Core/Src/BLT/xcp.c ****   xcpInfo.protection = 0;
 164:Core/Src/BLT/xcp.c **** } /*** end of XcpInit ***/
 165:Core/Src/BLT/xcp.c **** 
 166:Core/Src/BLT/xcp.c **** 
 167:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 168:Core/Src/BLT/xcp.c **** ** \brief     Obtains information about the XCP connection state.
 169:Core/Src/BLT/xcp.c **** ** \return    BLT_TRUE is an XCP connection is established, BLT_FALSE otherwise.
 170:Core/Src/BLT/xcp.c **** **
 171:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 172:Core/Src/BLT/xcp.c **** blt_bool XcpIsConnected(void)
 173:Core/Src/BLT/xcp.c **** {
 174:Core/Src/BLT/xcp.c ****   if (xcpInfo.connected == 0)
 175:Core/Src/BLT/xcp.c ****   {
 176:Core/Src/BLT/xcp.c ****     return BLT_FALSE;
 177:Core/Src/BLT/xcp.c ****   }
 178:Core/Src/BLT/xcp.c ****   return BLT_TRUE;
 179:Core/Src/BLT/xcp.c **** } /*** end of XcpIsConnected ***/
 180:Core/Src/BLT/xcp.c **** 
 181:Core/Src/BLT/xcp.c **** 
 182:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 183:Core/Src/BLT/xcp.c **** ** \brief     Informs the core that a pending packet transmission was completed by
 184:Core/Src/BLT/xcp.c **** **            the transport layer.
 185:Core/Src/BLT/xcp.c **** ** \return    none
 186:Core/Src/BLT/xcp.c **** **
 187:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 188:Core/Src/BLT/xcp.c **** void XcpPacketTransmitted(void)
 189:Core/Src/BLT/xcp.c **** {
 190:Core/Src/BLT/xcp.c ****   /* reset packet transmission pending flag */
 191:Core/Src/BLT/xcp.c ****   xcpInfo.ctoPending = 0;
 192:Core/Src/BLT/xcp.c **** } /*** end of XcpPacketTransmitted ***/
 193:Core/Src/BLT/xcp.c **** 
 194:Core/Src/BLT/xcp.c **** 
 195:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 196:Core/Src/BLT/xcp.c **** ** \brief     Informs the core that a new packet was received by the transport layer.
 197:Core/Src/BLT/xcp.c **** ** \param     data Pointer to byte buffer with packet data.
 198:Core/Src/BLT/xcp.c **** ** \param     len Number of bytes in the packet.
 199:Core/Src/BLT/xcp.c **** ** \return    none
 200:Core/Src/BLT/xcp.c **** **
 201:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 202:Core/Src/BLT/xcp.c **** void XcpPacketReceived(blt_int8u *data, blt_int8u len)
ARM GAS  /tmp/ccb89HYV.s 			page 5


 203:Core/Src/BLT/xcp.c **** {
 204:Core/Src/BLT/xcp.c **** 
 205:Core/Src/BLT/xcp.c **** #if (XCP_PACKET_RECEIVED_HOOK_EN == 0)
 206:Core/Src/BLT/xcp.c ****   /* suppress compiler warning due to unused parameter. */
 207:Core/Src/BLT/xcp.c ****   (void)len;
 208:Core/Src/BLT/xcp.c **** #else
 209:Core/Src/BLT/xcp.c ****   /* give the hook function a chance to process this packet. A return value of BLT_TRUE
 210:Core/Src/BLT/xcp.c ****    * indicates that the hook function processed the packet and that no further processing
 211:Core/Src/BLT/xcp.c ****    * is required.
 212:Core/Src/BLT/xcp.c ****    */
 213:Core/Src/BLT/xcp.c ****   if (XcpPacketReceivedHook(data, len) == BLT_TRUE)
 214:Core/Src/BLT/xcp.c ****   {
 215:Core/Src/BLT/xcp.c ****     /* packet processed by hook function so no need to continue. */
 216:Core/Src/BLT/xcp.c ****     return;
 217:Core/Src/BLT/xcp.c ****   }
 218:Core/Src/BLT/xcp.c **** #endif
 219:Core/Src/BLT/xcp.c ****   /* was this a connect command? */
 220:Core/Src/BLT/xcp.c ****   if (data[0] == XCP_CMD_CONNECT)
 221:Core/Src/BLT/xcp.c ****   {
 222:Core/Src/BLT/xcp.c ****     /* process the connect command */
 223:Core/Src/BLT/xcp.c ****     XcpCmdConnect(data);
 224:Core/Src/BLT/xcp.c ****   }
 225:Core/Src/BLT/xcp.c ****   /* only continue if connected */
 226:Core/Src/BLT/xcp.c ****   else if (xcpInfo.connected == 1)
 227:Core/Src/BLT/xcp.c ****   {
 228:Core/Src/BLT/xcp.c ****     switch (data[0])
 229:Core/Src/BLT/xcp.c ****     {
 230:Core/Src/BLT/xcp.c ****       case XCP_CMD_UPLOAD:
 231:Core/Src/BLT/xcp.c ****         XcpCmdUpload(data);
 232:Core/Src/BLT/xcp.c ****         break;
 233:Core/Src/BLT/xcp.c ****       case XCP_CMD_SHORT_UPLOAD:
 234:Core/Src/BLT/xcp.c ****         XcpCmdShortUpload(data);
 235:Core/Src/BLT/xcp.c ****         break;
 236:Core/Src/BLT/xcp.c ****       case XCP_CMD_SET_MTA:
 237:Core/Src/BLT/xcp.c ****         XcpCmdSetMta(data);
 238:Core/Src/BLT/xcp.c ****         break;
 239:Core/Src/BLT/xcp.c ****       case XCP_CMD_BUILD_CHECKSUM:
 240:Core/Src/BLT/xcp.c ****         XcpCmdBuildCheckSum(data);
 241:Core/Src/BLT/xcp.c ****         break;
 242:Core/Src/BLT/xcp.c ****       case XCP_CMD_GET_ID:
 243:Core/Src/BLT/xcp.c ****         XcpCmdGetId(data);
 244:Core/Src/BLT/xcp.c ****         break;
 245:Core/Src/BLT/xcp.c ****       case XCP_CMD_SYNCH:
 246:Core/Src/BLT/xcp.c ****         XcpCmdSynch(data);
 247:Core/Src/BLT/xcp.c ****         break;
 248:Core/Src/BLT/xcp.c ****       case XCP_CMD_GET_STATUS:
 249:Core/Src/BLT/xcp.c ****         XcpCmdGetStatus(data);
 250:Core/Src/BLT/xcp.c ****         break;
 251:Core/Src/BLT/xcp.c ****       case XCP_CMD_DISCONNECT:
 252:Core/Src/BLT/xcp.c ****         XcpCmdDisconnect(data);
 253:Core/Src/BLT/xcp.c ****         break;
 254:Core/Src/BLT/xcp.c **** #if (XCP_RES_CALIBRATION_EN == 1)
 255:Core/Src/BLT/xcp.c ****       case XCP_CMD_DOWNLOAD:
 256:Core/Src/BLT/xcp.c ****         XcpCmdDownload(data);
 257:Core/Src/BLT/xcp.c ****         break;
 258:Core/Src/BLT/xcp.c ****       case XCP_CMD_DOWLOAD_MAX:
 259:Core/Src/BLT/xcp.c ****         XcpCmdDownloadMax(data);
ARM GAS  /tmp/ccb89HYV.s 			page 6


 260:Core/Src/BLT/xcp.c ****         break;
 261:Core/Src/BLT/xcp.c **** #endif
 262:Core/Src/BLT/xcp.c **** #if (XCP_RES_PROGRAMMING_EN == 1)
 263:Core/Src/BLT/xcp.c ****       case XCP_CMD_PROGRAM_MAX:
 264:Core/Src/BLT/xcp.c ****         XcpCmdProgramMax(data);
 265:Core/Src/BLT/xcp.c ****         break;
 266:Core/Src/BLT/xcp.c ****       case XCP_CMD_PROGRAM:
 267:Core/Src/BLT/xcp.c ****         XcpCmdProgram(data);
 268:Core/Src/BLT/xcp.c ****         break;
 269:Core/Src/BLT/xcp.c ****       case XCP_CMD_PROGRAM_START:
 270:Core/Src/BLT/xcp.c ****         XcpCmdProgramStart(data);
 271:Core/Src/BLT/xcp.c ****         break;
 272:Core/Src/BLT/xcp.c ****       case XCP_CMD_PROGRAM_CLEAR:
 273:Core/Src/BLT/xcp.c ****         XcpCmdProgramClear(data);
 274:Core/Src/BLT/xcp.c ****         break;
 275:Core/Src/BLT/xcp.c ****       case XCP_CMD_PROGRAM_RESET:
 276:Core/Src/BLT/xcp.c ****         XcpCmdProgramReset(data);
 277:Core/Src/BLT/xcp.c ****         break;
 278:Core/Src/BLT/xcp.c ****       case XCP_CMD_PROGRAM_PREPARE:
 279:Core/Src/BLT/xcp.c ****         XcpCmdProgramPrepare(data);
 280:Core/Src/BLT/xcp.c ****         break;
 281:Core/Src/BLT/xcp.c **** #endif
 282:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 283:Core/Src/BLT/xcp.c ****       case XCP_CMD_GET_SEED:
 284:Core/Src/BLT/xcp.c ****         XcpCmdGetSeed(data);
 285:Core/Src/BLT/xcp.c ****         break;
 286:Core/Src/BLT/xcp.c ****       case XCP_CMD_UNLOCK:
 287:Core/Src/BLT/xcp.c ****         XcpCmdUnlock(data);
 288:Core/Src/BLT/xcp.c ****         break;
 289:Core/Src/BLT/xcp.c **** #endif
 290:Core/Src/BLT/xcp.c **** #if (XCP_RES_PAGING_EN == 1)
 291:Core/Src/BLT/xcp.c ****       case XCP_CMD_SET_CAL_PAGE:
 292:Core/Src/BLT/xcp.c ****         XcpCmdSetCalPage(data);
 293:Core/Src/BLT/xcp.c ****         break;
 294:Core/Src/BLT/xcp.c ****       case XCP_CMD_GET_CAL_PAGE:
 295:Core/Src/BLT/xcp.c ****         XcpCmdGetCalPage(data);
 296:Core/Src/BLT/xcp.c ****         break;
 297:Core/Src/BLT/xcp.c **** #endif
 298:Core/Src/BLT/xcp.c ****       default:
 299:Core/Src/BLT/xcp.c ****         XcpSetCtoError(XCP_ERR_CMD_UNKNOWN);
 300:Core/Src/BLT/xcp.c ****         break;
 301:Core/Src/BLT/xcp.c ****     }
 302:Core/Src/BLT/xcp.c ****   }
 303:Core/Src/BLT/xcp.c ****   else
 304:Core/Src/BLT/xcp.c ****   {
 305:Core/Src/BLT/xcp.c ****     /* return to make sure response packet is not send because we are not connected */
 306:Core/Src/BLT/xcp.c ****     return;
 307:Core/Src/BLT/xcp.c ****   }
 308:Core/Src/BLT/xcp.c **** 
 309:Core/Src/BLT/xcp.c ****   /* make sure the previous command was completed */
 310:Core/Src/BLT/xcp.c ****   if (xcpInfo.ctoPending == 1)
 311:Core/Src/BLT/xcp.c ****   {
 312:Core/Src/BLT/xcp.c ****     /* command overrun occurred */
 313:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_CMD_BUSY);
 314:Core/Src/BLT/xcp.c ****   }
 315:Core/Src/BLT/xcp.c **** 
 316:Core/Src/BLT/xcp.c ****   /* send the response if it contains something */
ARM GAS  /tmp/ccb89HYV.s 			page 7


 317:Core/Src/BLT/xcp.c ****   if (xcpInfo.ctoLen > 0)
 318:Core/Src/BLT/xcp.c ****   {
 319:Core/Src/BLT/xcp.c ****     /* set cto packet transmission pending flag */
 320:Core/Src/BLT/xcp.c ****     xcpInfo.ctoPending = 1;
 321:Core/Src/BLT/xcp.c **** 
 322:Core/Src/BLT/xcp.c ****     /* transmit the cto response packet */
 323:Core/Src/BLT/xcp.c ****     XcpTransmitPacket(xcpInfo.ctoData, xcpInfo.ctoLen);
 324:Core/Src/BLT/xcp.c ****   }
 325:Core/Src/BLT/xcp.c **** } /*** end of XcpPacketReceived ***/
 326:Core/Src/BLT/xcp.c **** 
 327:Core/Src/BLT/xcp.c **** 
 328:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 329:Core/Src/BLT/xcp.c **** ** \brief     Transmits the packet using the xcp transport layer.
 330:Core/Src/BLT/xcp.c **** ** \param     data Pointer to the byte buffer with packet data.
 331:Core/Src/BLT/xcp.c **** ** \param     len  Number of data bytes that need to be transmitted.
 332:Core/Src/BLT/xcp.c **** ** \return    none
 333:Core/Src/BLT/xcp.c **** **
 334:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 335:Core/Src/BLT/xcp.c **** static void XcpTransmitPacket(blt_int8u *data, blt_int16s len)
 336:Core/Src/BLT/xcp.c **** {
 337:Core/Src/BLT/xcp.c ****   /* submit packet to the communication interface for transmission */
 338:Core/Src/BLT/xcp.c **** #if (BOOT_COM_ENABLE == 0)
 339:Core/Src/BLT/xcp.c ****   XcpTransmitPacketHook(data, len);
 340:Core/Src/BLT/xcp.c **** #else
 341:Core/Src/BLT/xcp.c ****   ComTransmitPacket(data, len);
 342:Core/Src/BLT/xcp.c **** #endif
 343:Core/Src/BLT/xcp.c **** 
 344:Core/Src/BLT/xcp.c **** } /*** end of XcpTransmitPacket ***/
 345:Core/Src/BLT/xcp.c **** 
 346:Core/Src/BLT/xcp.c **** 
 347:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 348:Core/Src/BLT/xcp.c **** ** \brief     Called by the BUILD_CHECKSUM command to perform a checksum calculation
 349:Core/Src/BLT/xcp.c **** **            over the specified memory region.
 350:Core/Src/BLT/xcp.c **** ** \param     address   The start address of the memory region.
 351:Core/Src/BLT/xcp.c **** ** \param     length    Length of the memory region in bytes.
 352:Core/Src/BLT/xcp.c **** ** \param     checksum  Pointer to where the calculated checksum is to be stored.
 353:Core/Src/BLT/xcp.c **** ** \return    Checksum type that was used during the checksum calculation.
 354:Core/Src/BLT/xcp.c **** **
 355:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 356:Core/Src/BLT/xcp.c **** static blt_int8u XcpComputeChecksum(blt_int32u address, blt_int32u length,
 357:Core/Src/BLT/xcp.c ****                                     blt_int32u *checksum)
 358:Core/Src/BLT/xcp.c **** {
 359:Core/Src/BLT/xcp.c ****   blt_int8u cs = 0;
 360:Core/Src/BLT/xcp.c **** 
 361:Core/Src/BLT/xcp.c ****   /* this example computes the checksum using the add byte to byte algorithm */
 362:Core/Src/BLT/xcp.c ****   while (length-- > 0)
 363:Core/Src/BLT/xcp.c ****   {
 364:Core/Src/BLT/xcp.c ****     /* add the next byte value */
 365:Core/Src/BLT/xcp.c ****     cs += *((blt_int8u *)(blt_addr)address);
 366:Core/Src/BLT/xcp.c ****     /* increment address */
 367:Core/Src/BLT/xcp.c ****     address++;
 368:Core/Src/BLT/xcp.c ****     /* service the watchdog */
 369:Core/Src/BLT/xcp.c ****     CopService();
 370:Core/Src/BLT/xcp.c ****   }
 371:Core/Src/BLT/xcp.c ****   /* store the computed checksum value */
 372:Core/Src/BLT/xcp.c ****   *checksum = cs;
 373:Core/Src/BLT/xcp.c ****   /* inform the caller of the uses checksum computation algorithm */
ARM GAS  /tmp/ccb89HYV.s 			page 8


 374:Core/Src/BLT/xcp.c ****   return XCP_CS_ADD11;
 375:Core/Src/BLT/xcp.c **** } /*** end of XcpComputeChecksum ***/
 376:Core/Src/BLT/xcp.c **** 
 377:Core/Src/BLT/xcp.c **** 
 378:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 379:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 380:Core/Src/BLT/xcp.c **** ** \brief     Provides a seed to the XCP master that will be used for the key
 381:Core/Src/BLT/xcp.c **** **            generation when the master attempts to unlock the specified resource.
 382:Core/Src/BLT/xcp.c **** **            Called by the GET_SEED command.
 383:Core/Src/BLT/xcp.c **** ** \param     resource  Resource that the seed if requested for (XCP_RES_XXX).
 384:Core/Src/BLT/xcp.c **** ** \param     seed      Pointer to byte buffer wher the seed will be stored.
 385:Core/Src/BLT/xcp.c **** ** \return    Length of the seed in bytes.
 386:Core/Src/BLT/xcp.c **** **
 387:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 388:Core/Src/BLT/xcp.c **** static blt_int8u XcpGetSeed(blt_int8u resource, blt_int8u *seed)
 389:Core/Src/BLT/xcp.c **** {
 390:Core/Src/BLT/xcp.c ****   /* pass request on to the application through a hook function */
 391:Core/Src/BLT/xcp.c ****   return XcpGetSeedHook(resource, seed);
 392:Core/Src/BLT/xcp.c **** } /*** end of XcpGetSeed ***/
 393:Core/Src/BLT/xcp.c **** 
 394:Core/Src/BLT/xcp.c **** 
 395:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 396:Core/Src/BLT/xcp.c **** ** \brief     Called by the UNLOCK command and checks if the key to unlock the
 397:Core/Src/BLT/xcp.c **** **            specified resource was correct. If so, then the resource protection
 398:Core/Src/BLT/xcp.c **** **            will be removed.
 399:Core/Src/BLT/xcp.c **** ** \param     resource  resource to unlock (XCP_RES_XXX).
 400:Core/Src/BLT/xcp.c **** ** \param     key       pointer to the byte buffer holding the key.
 401:Core/Src/BLT/xcp.c **** ** \param     len       length of the key in bytes.
 402:Core/Src/BLT/xcp.c **** ** \return    1 if the key was correct, 0 otherwise.
 403:Core/Src/BLT/xcp.c **** **
 404:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 405:Core/Src/BLT/xcp.c **** static blt_int8u XcpVerifyKey(blt_int8u resource, blt_int8u *key, blt_int8u len)
 406:Core/Src/BLT/xcp.c **** {
 407:Core/Src/BLT/xcp.c ****   /* pass request on to the application through a hook function */
 408:Core/Src/BLT/xcp.c ****   return XcpVerifyKeyHook(resource, key, len);
 409:Core/Src/BLT/xcp.c **** } /*** end of XcpVerifyKey ***/
 410:Core/Src/BLT/xcp.c **** #endif /* XCP_SEED_KEY_PROTECTION_EN == 1 */
 411:Core/Src/BLT/xcp.c **** 
 412:Core/Src/BLT/xcp.c **** 
 413:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 414:Core/Src/BLT/xcp.c **** ** \brief     Utility function to protects all the available resources.
 415:Core/Src/BLT/xcp.c **** ** \return    none
 416:Core/Src/BLT/xcp.c **** **
 417:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 418:Core/Src/BLT/xcp.c **** static void XcpProtectResources(void)
 419:Core/Src/BLT/xcp.c **** {
  28              		.loc 1 419 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 420:Core/Src/BLT/xcp.c ****   xcpInfo.protection = 0;
  33              		.loc 1 420 3 view .LVU1
  34              		.loc 1 420 22 is_stmt 0 view .LVU2
  35 0000 024B     		ldr	r3, .L2
  36 0002 0022     		movs	r2, #0
  37 0004 83F84120 		strb	r2, [r3, #65]
ARM GAS  /tmp/ccb89HYV.s 			page 9


 421:Core/Src/BLT/xcp.c **** 
 422:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 423:Core/Src/BLT/xcp.c **** #if (XCP_RES_CALIBRATION_EN == 1)
 424:Core/Src/BLT/xcp.c ****   xcpInfo.protection |= XCP_RES_CALPAG;
 425:Core/Src/BLT/xcp.c **** #endif
 426:Core/Src/BLT/xcp.c **** 
 427:Core/Src/BLT/xcp.c **** #if (XCP_RES_PAGING_EN == 1)
 428:Core/Src/BLT/xcp.c ****   xcpInfo.protection |= XCP_RES_CALPAG;
 429:Core/Src/BLT/xcp.c **** #endif
 430:Core/Src/BLT/xcp.c **** 
 431:Core/Src/BLT/xcp.c **** #if (XCP_RES_PROGRAMMING_EN == 1)
 432:Core/Src/BLT/xcp.c ****   xcpInfo.protection |= XCP_RES_PGM;
 433:Core/Src/BLT/xcp.c **** #endif
 434:Core/Src/BLT/xcp.c **** 
 435:Core/Src/BLT/xcp.c **** #if (XCP_RES_DATA_ACQUISITION_EN == 1)
 436:Core/Src/BLT/xcp.c ****   xcpInfo.protection |= XCP_RES_DAQ;
 437:Core/Src/BLT/xcp.c **** #endif
 438:Core/Src/BLT/xcp.c **** 
 439:Core/Src/BLT/xcp.c **** #if (XCP_RES_DATA_STIMULATION_EN == 1)
 440:Core/Src/BLT/xcp.c ****   xcpInfo.protection |= XCP_RES_STIM;
 441:Core/Src/BLT/xcp.c **** #endif
 442:Core/Src/BLT/xcp.c **** #endif /* XCP_SEED_KEY_PROTECTION_EN == 1 */
 443:Core/Src/BLT/xcp.c **** } /*** end of XcpProtectResources ***/
  38              		.loc 1 443 1 view .LVU3
  39 0008 7047     		bx	lr
  40              	.L3:
  41 000a 00BF     		.align	2
  42              	.L2:
  43 000c 00000000 		.word	xcpInfo
  44              		.cfi_endproc
  45              	.LFE6:
  47              		.section	.text.XcpSetCtoError,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	XcpSetCtoError:
  54              	.LVL0:
  55              	.LFB7:
 444:Core/Src/BLT/xcp.c **** 
 445:Core/Src/BLT/xcp.c **** 
 446:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 447:Core/Src/BLT/xcp.c **** ** \brief     Prepares the cto packet data for the specified error.
 448:Core/Src/BLT/xcp.c **** ** \param     error XCP error code (XCP_ERR_XXX).
 449:Core/Src/BLT/xcp.c **** ** \return    none
 450:Core/Src/BLT/xcp.c **** **
 451:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 452:Core/Src/BLT/xcp.c **** static void XcpSetCtoError(blt_int8u error)
 453:Core/Src/BLT/xcp.c **** {
  56              		.loc 1 453 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 454:Core/Src/BLT/xcp.c ****   /* prepare the error packet */
 455:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_ERR;
  61              		.loc 1 455 3 view .LVU5
ARM GAS  /tmp/ccb89HYV.s 			page 10


  62              		.loc 1 455 22 is_stmt 0 view .LVU6
  63 0000 034B     		ldr	r3, .L5
  64 0002 FE22     		movs	r2, #254
  65 0004 1A70     		strb	r2, [r3]
 456:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = error;
  66              		.loc 1 456 3 is_stmt 1 view .LVU7
  67              		.loc 1 456 22 is_stmt 0 view .LVU8
  68 0006 5870     		strb	r0, [r3, #1]
 457:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 2;
  69              		.loc 1 457 3 is_stmt 1 view .LVU9
  70              		.loc 1 457 18 is_stmt 0 view .LVU10
  71 0008 0222     		movs	r2, #2
  72 000a A3F84420 		strh	r2, [r3, #68]	@ movhi
 458:Core/Src/BLT/xcp.c **** } /*** end of XcpSetCtoError ***/
  73              		.loc 1 458 1 view .LVU11
  74 000e 7047     		bx	lr
  75              	.L6:
  76              		.align	2
  77              	.L5:
  78 0010 00000000 		.word	xcpInfo
  79              		.cfi_endproc
  80              	.LFE7:
  82              		.section	.text.XcpGetOrderedLong,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  88              	XcpGetOrderedLong:
  89              	.LVL1:
  90              	.LFB8:
 459:Core/Src/BLT/xcp.c **** 
 460:Core/Src/BLT/xcp.c **** 
 461:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 462:Core/Src/BLT/xcp.c **** ** \brief     Obtains a 32-bit value from a byte buffer taking into account Intel
 463:Core/Src/BLT/xcp.c **** **            or Motorola byte ordering.
 464:Core/Src/BLT/xcp.c **** ** \param     data Array to the buffer with the 32-bit value stored as bytes.
 465:Core/Src/BLT/xcp.c **** ** \return    The 32-bit value.
 466:Core/Src/BLT/xcp.c **** **
 467:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 468:Core/Src/BLT/xcp.c **** static blt_int32u XcpGetOrderedLong(blt_int8u const * data)
 469:Core/Src/BLT/xcp.c **** {
  91              		.loc 1 469 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
 470:Core/Src/BLT/xcp.c ****   blt_int32u result = 0;
  96              		.loc 1 470 3 view .LVU13
 471:Core/Src/BLT/xcp.c **** 
 472:Core/Src/BLT/xcp.c **** #if (BOOT_CPU_BYTE_ORDER_MOTOROLA	== 0)
 473:Core/Src/BLT/xcp.c ****   result |= (blt_int32u) data[0];
  97              		.loc 1 473 3 view .LVU14
  98              		.loc 1 473 30 is_stmt 0 view .LVU15
  99 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 100              	.LVL2:
 474:Core/Src/BLT/xcp.c ****   result |= (blt_int32u)(data[1] << 8);
 101              		.loc 1 474 3 is_stmt 1 view .LVU16
ARM GAS  /tmp/ccb89HYV.s 			page 11


 102              		.loc 1 474 30 is_stmt 0 view .LVU17
 103 0002 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 104              		.loc 1 474 10 view .LVU18
 105 0004 43EA0223 		orr	r3, r3, r2, lsl #8
 106              	.LVL3:
 475:Core/Src/BLT/xcp.c ****   result |= (blt_int32u)(data[2] << 16);
 107              		.loc 1 475 3 is_stmt 1 view .LVU19
 108              		.loc 1 475 30 is_stmt 0 view .LVU20
 109 0008 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 110              		.loc 1 475 10 view .LVU21
 111 000a 43EA0243 		orr	r3, r3, r2, lsl #16
 112              	.LVL4:
 476:Core/Src/BLT/xcp.c ****   result |= (blt_int32u)(data[3] << 24);
 113              		.loc 1 476 3 is_stmt 1 view .LVU22
 114              		.loc 1 476 30 is_stmt 0 view .LVU23
 115 000e C078     		ldrb	r0, [r0, #3]	@ zero_extendqisi2
 116              	.LVL5:
 477:Core/Src/BLT/xcp.c **** #else	
 478:Core/Src/BLT/xcp.c ****   result |= (blt_int32u) data[3];
 479:Core/Src/BLT/xcp.c ****   result |= (blt_int32u)(data[2] << 8);
 480:Core/Src/BLT/xcp.c ****   result |= (blt_int32u)(data[1] << 16);
 481:Core/Src/BLT/xcp.c ****   result |= (blt_int32u)(data[0] << 24);
 482:Core/Src/BLT/xcp.c **** #endif
 483:Core/Src/BLT/xcp.c ****   /* Give the result back to the caller. */
 484:Core/Src/BLT/xcp.c ****   return result;
 117              		.loc 1 484 3 is_stmt 1 view .LVU24
 485:Core/Src/BLT/xcp.c **** } /*** end of XcpGetOrderedLong ***/
 118              		.loc 1 485 1 is_stmt 0 view .LVU25
 119 0010 43EA0060 		orr	r0, r3, r0, lsl #24
 120              	.LVL6:
 121              		.loc 1 485 1 view .LVU26
 122 0014 7047     		bx	lr
 123              		.cfi_endproc
 124              	.LFE8:
 126              		.section	.text.XcpSetOrderedLong,"ax",%progbits
 127              		.align	1
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 132              	XcpSetOrderedLong:
 133              	.LVL7:
 134              	.LFB9:
 486:Core/Src/BLT/xcp.c **** 
 487:Core/Src/BLT/xcp.c **** 
 488:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 489:Core/Src/BLT/xcp.c **** ** \brief     Stores a 32-bit value into a byte buffer taking into account Intel
 490:Core/Src/BLT/xcp.c **** **            or Motorola byte ordering.
 491:Core/Src/BLT/xcp.c **** ** \param     value The 32-bit value to store in the buffer.
 492:Core/Src/BLT/xcp.c **** ** \param     data Array to the buffer for storage.
 493:Core/Src/BLT/xcp.c **** **
 494:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 495:Core/Src/BLT/xcp.c **** static void XcpSetOrderedLong(blt_int32u value, blt_int8u *data)
 496:Core/Src/BLT/xcp.c **** {
 135              		.loc 1 496 1 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccb89HYV.s 			page 12


 139              		@ link register save eliminated.
 497:Core/Src/BLT/xcp.c **** #if (BOOT_CPU_BYTE_ORDER_MOTOROLA	== 0)
 498:Core/Src/BLT/xcp.c ****   data[0] = (blt_int8u) value;
 140              		.loc 1 498 3 view .LVU28
 141              		.loc 1 498 11 is_stmt 0 view .LVU29
 142 0000 0870     		strb	r0, [r1]
 499:Core/Src/BLT/xcp.c ****   data[1] = (blt_int8u)(value >>  8);
 143              		.loc 1 499 3 is_stmt 1 view .LVU30
 144              		.loc 1 499 13 is_stmt 0 view .LVU31
 145 0002 C0F30723 		ubfx	r3, r0, #8, #8
 146              		.loc 1 499 11 view .LVU32
 147 0006 4B70     		strb	r3, [r1, #1]
 500:Core/Src/BLT/xcp.c ****   data[2] = (blt_int8u)(value >> 16);
 148              		.loc 1 500 3 is_stmt 1 view .LVU33
 149              		.loc 1 500 13 is_stmt 0 view .LVU34
 150 0008 C0F30743 		ubfx	r3, r0, #16, #8
 151              		.loc 1 500 11 view .LVU35
 152 000c 8B70     		strb	r3, [r1, #2]
 501:Core/Src/BLT/xcp.c ****   data[3] = (blt_int8u)(value >> 24);
 153              		.loc 1 501 3 is_stmt 1 view .LVU36
 154              		.loc 1 501 13 is_stmt 0 view .LVU37
 155 000e 000E     		lsrs	r0, r0, #24
 156              	.LVL8:
 157              		.loc 1 501 11 view .LVU38
 158 0010 C870     		strb	r0, [r1, #3]
 502:Core/Src/BLT/xcp.c **** #else
 503:Core/Src/BLT/xcp.c ****   data[3] = (blt_int8u) value;
 504:Core/Src/BLT/xcp.c ****   data[2] = (blt_int8u)(value >>  8);
 505:Core/Src/BLT/xcp.c ****   data[1] = (blt_int8u)(value >> 16);
 506:Core/Src/BLT/xcp.c ****   data[0] = (blt_int8u)(value >> 24);
 507:Core/Src/BLT/xcp.c **** #endif
 508:Core/Src/BLT/xcp.c **** } /*** end of XcpSetOrderedLong ***/
 159              		.loc 1 508 1 view .LVU39
 160 0012 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE9:
 164              		.section	.text.XcpCmdDisconnect,"ax",%progbits
 165              		.align	1
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 170              	XcpCmdDisconnect:
 171              	.LVL9:
 172              	.LFB11:
 509:Core/Src/BLT/xcp.c **** 
 510:Core/Src/BLT/xcp.c **** 
 511:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 512:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the CONNECT command as
 513:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 514:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 515:Core/Src/BLT/xcp.c **** ** \return    none
 516:Core/Src/BLT/xcp.c **** **
 517:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 518:Core/Src/BLT/xcp.c **** static void XcpCmdConnect(blt_int8u *data)
 519:Core/Src/BLT/xcp.c **** {
 520:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
 521:Core/Src/BLT/xcp.c ****   data = data;
ARM GAS  /tmp/ccb89HYV.s 			page 13


 522:Core/Src/BLT/xcp.c **** 
 523:Core/Src/BLT/xcp.c **** #if (BOOT_FILE_SYS_ENABLE > 0)
 524:Core/Src/BLT/xcp.c ****   /* reject the connection if the file module is not idle. this means that a firmware
 525:Core/Src/BLT/xcp.c ****    * update from the locally attached storage is in progress
 526:Core/Src/BLT/xcp.c ****    */
 527:Core/Src/BLT/xcp.c ****   if (FileIsIdle() == BLT_FALSE)
 528:Core/Src/BLT/xcp.c ****   {
 529:Core/Src/BLT/xcp.c ****     /* command not processed because we are busy */
 530:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_CMD_BUSY);
 531:Core/Src/BLT/xcp.c ****     return;
 532:Core/Src/BLT/xcp.c ****   }
 533:Core/Src/BLT/xcp.c **** #endif
 534:Core/Src/BLT/xcp.c **** 
 535:Core/Src/BLT/xcp.c ****   /* enable resource protection */
 536:Core/Src/BLT/xcp.c ****   XcpProtectResources();
 537:Core/Src/BLT/xcp.c **** 
 538:Core/Src/BLT/xcp.c ****   /* indicate that the connection is established */
 539:Core/Src/BLT/xcp.c ****   xcpInfo.connected = 1;
 540:Core/Src/BLT/xcp.c **** 
 541:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
 542:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
 543:Core/Src/BLT/xcp.c **** 
 544:Core/Src/BLT/xcp.c ****   /* report available resources */
 545:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = 0;
 546:Core/Src/BLT/xcp.c **** #if (XCP_RES_CALIBRATION_EN == 1)
 547:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] |= XCP_RES_CALPAG;
 548:Core/Src/BLT/xcp.c **** #endif
 549:Core/Src/BLT/xcp.c **** 
 550:Core/Src/BLT/xcp.c **** #if (XCP_RES_PAGING_EN == 1)
 551:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] |= XCP_RES_CALPAG;
 552:Core/Src/BLT/xcp.c **** #endif
 553:Core/Src/BLT/xcp.c **** 
 554:Core/Src/BLT/xcp.c **** #if (XCP_RES_PROGRAMMING_EN == 1)
 555:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] |= XCP_RES_PGM;
 556:Core/Src/BLT/xcp.c **** #endif
 557:Core/Src/BLT/xcp.c **** 
 558:Core/Src/BLT/xcp.c **** #if (XCP_RES_DATA_ACQUISITION_EN == 1)
 559:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] |= XCP_RES_DAQ;
 560:Core/Src/BLT/xcp.c **** #endif
 561:Core/Src/BLT/xcp.c **** 
 562:Core/Src/BLT/xcp.c **** #if (XCP_RES_DATA_STIMULATION_EN == 1)
 563:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] |= XCP_RES_STIM;
 564:Core/Src/BLT/xcp.c **** #endif
 565:Core/Src/BLT/xcp.c **** 
 566:Core/Src/BLT/xcp.c ****   /* report communication mode info. only byte granularity is supported */
 567:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[2] = 0;
 568:Core/Src/BLT/xcp.c ****   /* configure for motorola or intel byte ordering */
 569:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[2] |= XCP_MOTOROLA_FORMAT;
 570:Core/Src/BLT/xcp.c **** 
 571:Core/Src/BLT/xcp.c ****   /* report max cto data length */
 572:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[3] = (blt_int8u)XCP_CTO_PACKET_LEN;
 573:Core/Src/BLT/xcp.c **** 
 574:Core/Src/BLT/xcp.c ****   /* report max dto data length */
 575:Core/Src/BLT/xcp.c **** #if (XCP_MOTOROLA_FORMAT == 0)
 576:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[4] = (blt_int8u)XCP_DTO_PACKET_LEN;
 577:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[5] = (blt_int8u)(XCP_DTO_PACKET_LEN >> 8);
 578:Core/Src/BLT/xcp.c **** #else
ARM GAS  /tmp/ccb89HYV.s 			page 14


 579:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[4] = (blt_int8u)(XCP_DTO_PACKET_LEN >> 8);
 580:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[5] = (blt_int8u)XCP_DTO_PACKET_LEN;
 581:Core/Src/BLT/xcp.c **** #endif
 582:Core/Src/BLT/xcp.c **** 
 583:Core/Src/BLT/xcp.c ****   /* report msb of protocol layer version number */
 584:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[6] = XCP_VERSION_PROTOCOL_LAYER >> 8;
 585:Core/Src/BLT/xcp.c **** 
 586:Core/Src/BLT/xcp.c ****   /* report msb of transport layer version number */
 587:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[7] = XCP_VERSION_TRANSPORT_LAYER >> 8;
 588:Core/Src/BLT/xcp.c **** 
 589:Core/Src/BLT/xcp.c ****   /* set packet length */
 590:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 8;
 591:Core/Src/BLT/xcp.c **** 
 592:Core/Src/BLT/xcp.c ****   /* reinit the NVM driver because a new firmware update is about the start */
 593:Core/Src/BLT/xcp.c ****   NvmInit();
 594:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdConnect ***/
 595:Core/Src/BLT/xcp.c **** 
 596:Core/Src/BLT/xcp.c **** 
 597:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 598:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the DISCONNECT command as
 599:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 600:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 601:Core/Src/BLT/xcp.c **** ** \return    none
 602:Core/Src/BLT/xcp.c **** **
 603:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 604:Core/Src/BLT/xcp.c **** static void XcpCmdDisconnect(blt_int8u *data)
 605:Core/Src/BLT/xcp.c **** {
 173              		.loc 1 605 1 is_stmt 1 view -0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		.loc 1 605 1 is_stmt 0 view .LVU41
 178 0000 10B5     		push	{r4, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 4, -8
 181              		.cfi_offset 14, -4
 606:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
 607:Core/Src/BLT/xcp.c ****   data = data;
 182              		.loc 1 607 3 is_stmt 1 view .LVU42
 608:Core/Src/BLT/xcp.c **** 
 609:Core/Src/BLT/xcp.c ****   /* indicate that the xcp connection is disconnected */
 610:Core/Src/BLT/xcp.c ****   xcpInfo.connected = 0;
 183              		.loc 1 610 3 view .LVU43
 184              		.loc 1 610 21 is_stmt 0 view .LVU44
 185 0002 064C     		ldr	r4, .L11
 186 0004 0023     		movs	r3, #0
 187 0006 84F84030 		strb	r3, [r4, #64]
 611:Core/Src/BLT/xcp.c **** 
 612:Core/Src/BLT/xcp.c ****   /* enable resource protection */
 613:Core/Src/BLT/xcp.c ****   XcpProtectResources();
 188              		.loc 1 613 3 is_stmt 1 view .LVU45
 189 000a FFF7FEFF 		bl	XcpProtectResources
 190              	.LVL10:
 614:Core/Src/BLT/xcp.c **** 
 615:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
 616:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
 191              		.loc 1 616 3 view .LVU46
ARM GAS  /tmp/ccb89HYV.s 			page 15


 192              		.loc 1 616 22 is_stmt 0 view .LVU47
 193 000e FF23     		movs	r3, #255
 194 0010 2370     		strb	r3, [r4]
 617:Core/Src/BLT/xcp.c **** 
 618:Core/Src/BLT/xcp.c ****   /* set packet length */
 619:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 1;
 195              		.loc 1 619 3 is_stmt 1 view .LVU48
 196              		.loc 1 619 18 is_stmt 0 view .LVU49
 197 0012 0123     		movs	r3, #1
 198 0014 A4F84430 		strh	r3, [r4, #68]	@ movhi
 620:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdDisconnect ***/
 199              		.loc 1 620 1 view .LVU50
 200 0018 10BD     		pop	{r4, pc}
 201              	.L12:
 202 001a 00BF     		.align	2
 203              	.L11:
 204 001c 00000000 		.word	xcpInfo
 205              		.cfi_endproc
 206              	.LFE11:
 208              		.section	.text.XcpCmdGetStatus,"ax",%progbits
 209              		.align	1
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 214              	XcpCmdGetStatus:
 215              	.LVL11:
 216              	.LFB12:
 621:Core/Src/BLT/xcp.c **** 
 622:Core/Src/BLT/xcp.c **** 
 623:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 624:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the GET_STATUS command as
 625:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 626:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 627:Core/Src/BLT/xcp.c **** ** \return    none
 628:Core/Src/BLT/xcp.c **** **
 629:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 630:Core/Src/BLT/xcp.c **** static void XcpCmdGetStatus(blt_int8u *data)
 631:Core/Src/BLT/xcp.c **** {
 217              		.loc 1 631 1 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 632:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
 633:Core/Src/BLT/xcp.c ****   data = data;
 222              		.loc 1 633 3 view .LVU52
 634:Core/Src/BLT/xcp.c **** 
 635:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
 636:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
 223              		.loc 1 636 3 view .LVU53
 224              		.loc 1 636 22 is_stmt 0 view .LVU54
 225 0000 074B     		ldr	r3, .L14
 226 0002 FF22     		movs	r2, #255
 227 0004 1A70     		strb	r2, [r3]
 637:Core/Src/BLT/xcp.c **** 
 638:Core/Src/BLT/xcp.c ****   /* report session status */
 639:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = 0;
ARM GAS  /tmp/ccb89HYV.s 			page 16


 228              		.loc 1 639 3 is_stmt 1 view .LVU55
 229              		.loc 1 639 22 is_stmt 0 view .LVU56
 230 0006 0022     		movs	r2, #0
 231 0008 5A70     		strb	r2, [r3, #1]
 640:Core/Src/BLT/xcp.c **** 
 641:Core/Src/BLT/xcp.c ****   /* report current resource protection status */
 642:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[2] = xcpInfo.protection;
 232              		.loc 1 642 3 is_stmt 1 view .LVU57
 233              		.loc 1 642 31 is_stmt 0 view .LVU58
 234 000a 93F84110 		ldrb	r1, [r3, #65]	@ zero_extendqisi2
 235              		.loc 1 642 22 view .LVU59
 236 000e 9970     		strb	r1, [r3, #2]
 643:Core/Src/BLT/xcp.c **** 
 644:Core/Src/BLT/xcp.c ****   /* reset reserved and session configuration id values */
 645:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[3] = 0;
 237              		.loc 1 645 3 is_stmt 1 view .LVU60
 238              		.loc 1 645 22 is_stmt 0 view .LVU61
 239 0010 DA70     		strb	r2, [r3, #3]
 646:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[4] = 0;
 240              		.loc 1 646 3 is_stmt 1 view .LVU62
 241              		.loc 1 646 22 is_stmt 0 view .LVU63
 242 0012 1A71     		strb	r2, [r3, #4]
 647:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[5] = 0;
 243              		.loc 1 647 3 is_stmt 1 view .LVU64
 244              		.loc 1 647 22 is_stmt 0 view .LVU65
 245 0014 5A71     		strb	r2, [r3, #5]
 648:Core/Src/BLT/xcp.c **** 
 649:Core/Src/BLT/xcp.c ****   /* set packet length */
 650:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 6;
 246              		.loc 1 650 3 is_stmt 1 view .LVU66
 247              		.loc 1 650 18 is_stmt 0 view .LVU67
 248 0016 0622     		movs	r2, #6
 249 0018 A3F84420 		strh	r2, [r3, #68]	@ movhi
 651:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdGetStatus ***/
 250              		.loc 1 651 1 view .LVU68
 251 001c 7047     		bx	lr
 252              	.L15:
 253 001e 00BF     		.align	2
 254              	.L14:
 255 0020 00000000 		.word	xcpInfo
 256              		.cfi_endproc
 257              	.LFE12:
 259              		.section	.text.XcpCmdSynch,"ax",%progbits
 260              		.align	1
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	XcpCmdSynch:
 266              	.LVL12:
 267              	.LFB13:
 652:Core/Src/BLT/xcp.c **** 
 653:Core/Src/BLT/xcp.c **** 
 654:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 655:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the SYNCH command as
 656:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 657:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 658:Core/Src/BLT/xcp.c **** ** \return    none
ARM GAS  /tmp/ccb89HYV.s 			page 17


 659:Core/Src/BLT/xcp.c **** **
 660:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 661:Core/Src/BLT/xcp.c **** static void XcpCmdSynch(blt_int8u *data)
 662:Core/Src/BLT/xcp.c **** {
 268              		.loc 1 662 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		.loc 1 662 1 is_stmt 0 view .LVU70
 273 0000 08B5     		push	{r3, lr}
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 3, -8
 276              		.cfi_offset 14, -4
 663:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
 664:Core/Src/BLT/xcp.c ****   data = data;
 277              		.loc 1 664 3 is_stmt 1 view .LVU71
 665:Core/Src/BLT/xcp.c **** 
 666:Core/Src/BLT/xcp.c ****   /* synch requires a negative response */
 667:Core/Src/BLT/xcp.c ****   XcpSetCtoError(XCP_ERR_CMD_SYNCH);
 278              		.loc 1 667 3 view .LVU72
 279 0002 0020     		movs	r0, #0
 280              	.LVL13:
 281              		.loc 1 667 3 is_stmt 0 view .LVU73
 282 0004 FFF7FEFF 		bl	XcpSetCtoError
 283              	.LVL14:
 668:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdSynch ***/
 284              		.loc 1 668 1 view .LVU74
 285 0008 08BD     		pop	{r3, pc}
 286              		.cfi_endproc
 287              	.LFE13:
 289              		.section	.text.XcpCmdGetId,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	XcpCmdGetId:
 296              	.LVL15:
 297              	.LFB14:
 669:Core/Src/BLT/xcp.c **** 
 670:Core/Src/BLT/xcp.c **** 
 671:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 672:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the GET_ID command as
 673:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 674:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 675:Core/Src/BLT/xcp.c **** ** \return    none
 676:Core/Src/BLT/xcp.c **** **
 677:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 678:Core/Src/BLT/xcp.c **** static void XcpCmdGetId(blt_int8u *data)
 679:Core/Src/BLT/xcp.c **** {
 298              		.loc 1 679 1 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		.loc 1 679 1 is_stmt 0 view .LVU76
 303 0000 10B5     		push	{r4, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
ARM GAS  /tmp/ccb89HYV.s 			page 18


 306              		.cfi_offset 14, -4
 680:Core/Src/BLT/xcp.c ****   blt_int32u stationIdLen;
 307              		.loc 1 680 3 is_stmt 1 view .LVU77
 681:Core/Src/BLT/xcp.c ****   
 682:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
 683:Core/Src/BLT/xcp.c ****   data = data;
 308              		.loc 1 683 3 view .LVU78
 684:Core/Src/BLT/xcp.c **** 
 685:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
 686:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
 309              		.loc 1 686 3 view .LVU79
 310              		.loc 1 686 22 is_stmt 0 view .LVU80
 311 0002 084C     		ldr	r4, .L20
 312 0004 FF23     		movs	r3, #255
 313 0006 2370     		strb	r3, [r4]
 687:Core/Src/BLT/xcp.c **** 
 688:Core/Src/BLT/xcp.c ****   /* point mta to start of station id string */
 689:Core/Src/BLT/xcp.c ****   xcpInfo.mta = (blt_int32u)&xcpStationId[0];
 314              		.loc 1 689 3 is_stmt 1 view .LVU81
 315              		.loc 1 689 17 is_stmt 0 view .LVU82
 316 0008 074B     		ldr	r3, .L20+4
 317              		.loc 1 689 15 view .LVU83
 318 000a A364     		str	r3, [r4, #72]
 690:Core/Src/BLT/xcp.c **** 
 691:Core/Src/BLT/xcp.c ****   /* set station id mode to 0 */
 692:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = 0;
 319              		.loc 1 692 3 is_stmt 1 view .LVU84
 320              		.loc 1 692 22 is_stmt 0 view .LVU85
 321 000c 0023     		movs	r3, #0
 322 000e 6370     		strb	r3, [r4, #1]
 693:Core/Src/BLT/xcp.c **** 
 694:Core/Src/BLT/xcp.c ****   /* reset reserved values */
 695:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[2] = 0;
 323              		.loc 1 695 3 is_stmt 1 view .LVU86
 324              		.loc 1 695 22 is_stmt 0 view .LVU87
 325 0010 A370     		strb	r3, [r4, #2]
 696:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[3] = 0;
 326              		.loc 1 696 3 is_stmt 1 view .LVU88
 327              		.loc 1 696 22 is_stmt 0 view .LVU89
 328 0012 E370     		strb	r3, [r4, #3]
 697:Core/Src/BLT/xcp.c **** 
 698:Core/Src/BLT/xcp.c ****   /* store station id length (excl. null termination) for response packet */
 699:Core/Src/BLT/xcp.c ****   stationIdLen = (sizeof(xcpStationId)/sizeof(xcpStationId[0])) - 1;
 329              		.loc 1 699 3 is_stmt 1 view .LVU90
 330              	.LVL16:
 700:Core/Src/BLT/xcp.c ****   XcpSetOrderedLong(stationIdLen, &xcpInfo.ctoData[4]);
 331              		.loc 1 700 3 view .LVU91
 332 0014 211D     		adds	r1, r4, #4
 333 0016 0720     		movs	r0, #7
 334              	.LVL17:
 335              		.loc 1 700 3 is_stmt 0 view .LVU92
 336 0018 FFF7FEFF 		bl	XcpSetOrderedLong
 337              	.LVL18:
 701:Core/Src/BLT/xcp.c **** 
 702:Core/Src/BLT/xcp.c ****   /* set packet length */
 703:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 8;
 338              		.loc 1 703 3 is_stmt 1 view .LVU93
ARM GAS  /tmp/ccb89HYV.s 			page 19


 339              		.loc 1 703 18 is_stmt 0 view .LVU94
 340 001c 0823     		movs	r3, #8
 341 001e A4F84430 		strh	r3, [r4, #68]	@ movhi
 704:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdGetId ***/
 342              		.loc 1 704 1 view .LVU95
 343 0022 10BD     		pop	{r4, pc}
 344              	.L21:
 345              		.align	2
 346              	.L20:
 347 0024 00000000 		.word	xcpInfo
 348 0028 00000000 		.word	xcpStationId
 349              		.cfi_endproc
 350              	.LFE14:
 352              		.section	.text.XcpCmdSetMta,"ax",%progbits
 353              		.align	1
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 358              	XcpCmdSetMta:
 359              	.LVL19:
 360              	.LFB15:
 705:Core/Src/BLT/xcp.c **** 
 706:Core/Src/BLT/xcp.c **** 
 707:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 708:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the SET_MTA command as
 709:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 710:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 711:Core/Src/BLT/xcp.c **** ** \return    none
 712:Core/Src/BLT/xcp.c **** **
 713:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 714:Core/Src/BLT/xcp.c **** static void XcpCmdSetMta(blt_int8u *data)
 715:Core/Src/BLT/xcp.c **** {
 361              		.loc 1 715 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		.loc 1 715 1 is_stmt 0 view .LVU97
 366 0000 10B5     		push	{r4, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 4, -8
 369              		.cfi_offset 14, -4
 716:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
 717:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
 370              		.loc 1 717 3 is_stmt 1 view .LVU98
 371              		.loc 1 717 22 is_stmt 0 view .LVU99
 372 0002 054C     		ldr	r4, .L24
 373 0004 FF23     		movs	r3, #255
 374 0006 2370     		strb	r3, [r4]
 718:Core/Src/BLT/xcp.c **** 
 719:Core/Src/BLT/xcp.c ****   /* update mta. current implementation ignores address extension */
 720:Core/Src/BLT/xcp.c ****   xcpInfo.mta = XcpGetOrderedLong(&data[4]);
 375              		.loc 1 720 3 is_stmt 1 view .LVU100
 376              		.loc 1 720 17 is_stmt 0 view .LVU101
 377 0008 0430     		adds	r0, r0, #4
 378              	.LVL20:
 379              		.loc 1 720 17 view .LVU102
 380 000a FFF7FEFF 		bl	XcpGetOrderedLong
ARM GAS  /tmp/ccb89HYV.s 			page 20


 381              	.LVL21:
 382              		.loc 1 720 15 view .LVU103
 383 000e A064     		str	r0, [r4, #72]
 721:Core/Src/BLT/xcp.c **** 
 722:Core/Src/BLT/xcp.c ****   /* set packet length */
 723:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 1;
 384              		.loc 1 723 3 is_stmt 1 view .LVU104
 385              		.loc 1 723 18 is_stmt 0 view .LVU105
 386 0010 0123     		movs	r3, #1
 387 0012 A4F84430 		strh	r3, [r4, #68]	@ movhi
 724:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdSetMta ***/
 388              		.loc 1 724 1 view .LVU106
 389 0016 10BD     		pop	{r4, pc}
 390              	.L25:
 391              		.align	2
 392              	.L24:
 393 0018 00000000 		.word	xcpInfo
 394              		.cfi_endproc
 395              	.LFE15:
 397              		.section	.text.XcpCmdProgramPrepare,"ax",%progbits
 398              		.align	1
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 403              	XcpCmdProgramPrepare:
 404              	.LVL22:
 405              	.LFB24:
 725:Core/Src/BLT/xcp.c **** 
 726:Core/Src/BLT/xcp.c **** 
 727:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 728:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the UPLOAD command as
 729:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 730:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 731:Core/Src/BLT/xcp.c **** ** \return    none
 732:Core/Src/BLT/xcp.c **** **
 733:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 734:Core/Src/BLT/xcp.c **** static void XcpCmdUpload(blt_int8u *data)
 735:Core/Src/BLT/xcp.c **** {
 736:Core/Src/BLT/xcp.c ****   blt_int16u len;
 737:Core/Src/BLT/xcp.c ****   blt_int8u *destPtr;
 738:Core/Src/BLT/xcp.c **** 
 739:Core/Src/BLT/xcp.c ****   /* validate length of upload request */
 740:Core/Src/BLT/xcp.c ****   if (data[1] > (XCP_CTO_PACKET_LEN-1))
 741:Core/Src/BLT/xcp.c ****   {
 742:Core/Src/BLT/xcp.c ****     /* requested data length is too long */
 743:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_OUT_OF_RANGE);
 744:Core/Src/BLT/xcp.c ****     return;
 745:Core/Src/BLT/xcp.c ****   }
 746:Core/Src/BLT/xcp.c **** 
 747:Core/Src/BLT/xcp.c ****   /* read out the length of the requested upload operation */
 748:Core/Src/BLT/xcp.c ****   len = data[1];
 749:Core/Src/BLT/xcp.c ****   /* set the destination pointer */
 750:Core/Src/BLT/xcp.c ****   destPtr = (blt_int8u *)((blt_addr)(blt_int32u)&xcpInfo.ctoData[1]);
 751:Core/Src/BLT/xcp.c **** 
 752:Core/Src/BLT/xcp.c **** #if (XCP_UPLOAD_EN == 1)
 753:Core/Src/BLT/xcp.c ****   /* according to the XCP specification memory read/upload functionality is always
 754:Core/Src/BLT/xcp.c ****    * available. This behavior is unwanted in the case of a bootloader that has the
ARM GAS  /tmp/ccb89HYV.s 			page 21


 755:Core/Src/BLT/xcp.c ****    * seed/key security feature enabled. The default XCP behavior is deviated in this
 756:Core/Src/BLT/xcp.c ****    * situation. The deviation is such that all zero values are returned if the seed/key
 757:Core/Src/BLT/xcp.c ****    * security feature is enabled and the programming resource is not yet unlocked.
 758:Core/Src/BLT/xcp.c ****    */
 759:Core/Src/BLT/xcp.c ****   #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 760:Core/Src/BLT/xcp.c ****   /* check if PGM resource is unlocked */
 761:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_PGM) == XCP_RES_PGM)
 762:Core/Src/BLT/xcp.c ****   {
 763:Core/Src/BLT/xcp.c ****     /* resource is locked so memory read access is denied. zero values are returned
 764:Core/Src/BLT/xcp.c ****      * instead.
 765:Core/Src/BLT/xcp.c ****      */
 766:Core/Src/BLT/xcp.c ****     CpuMemSet((blt_addr)destPtr, 0, len);
 767:Core/Src/BLT/xcp.c ****   }
 768:Core/Src/BLT/xcp.c ****   else
 769:Core/Src/BLT/xcp.c ****   {
 770:Core/Src/BLT/xcp.c ****     /* copy the data from memory to the data packet */
 771:Core/Src/BLT/xcp.c ****     CpuMemCopy((blt_addr)destPtr,(blt_addr)xcpInfo.mta, len);
 772:Core/Src/BLT/xcp.c ****   }
 773:Core/Src/BLT/xcp.c ****   #else
 774:Core/Src/BLT/xcp.c ****   /* copy the data from memory to the data packet */
 775:Core/Src/BLT/xcp.c ****   CpuMemCopy((blt_addr)destPtr,(blt_addr)xcpInfo.mta, len);
 776:Core/Src/BLT/xcp.c ****   #endif /* XCP_SEED_KEY_PROTECTION_EN == 1 */
 777:Core/Src/BLT/xcp.c **** #else
 778:Core/Src/BLT/xcp.c ****   /* uploads are disabled, so return zero values for memory read operations */
 779:Core/Src/BLT/xcp.c ****   CpuMemSet((blt_addr)destPtr, 0, len);
 780:Core/Src/BLT/xcp.c **** #endif /* XCP_UPLOAD_EN == 1 */
 781:Core/Src/BLT/xcp.c **** 
 782:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
 783:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
 784:Core/Src/BLT/xcp.c **** 
 785:Core/Src/BLT/xcp.c ****   /* post increment the mta */
 786:Core/Src/BLT/xcp.c ****   xcpInfo.mta += data[1];
 787:Core/Src/BLT/xcp.c **** 
 788:Core/Src/BLT/xcp.c ****   /* set packet length */
 789:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = data[1]+1;
 790:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdUpload ***/
 791:Core/Src/BLT/xcp.c **** 
 792:Core/Src/BLT/xcp.c **** 
 793:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 794:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the SHORT_UPLOAD command as
 795:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 796:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 797:Core/Src/BLT/xcp.c **** ** \return    none
 798:Core/Src/BLT/xcp.c **** **
 799:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 800:Core/Src/BLT/xcp.c **** static void XcpCmdShortUpload(blt_int8u *data)
 801:Core/Src/BLT/xcp.c **** {
 802:Core/Src/BLT/xcp.c ****   blt_int16u len;
 803:Core/Src/BLT/xcp.c ****   blt_int8u *destPtr;
 804:Core/Src/BLT/xcp.c **** 
 805:Core/Src/BLT/xcp.c ****   /* validate length of upload request */
 806:Core/Src/BLT/xcp.c ****   if (data[1] > (XCP_CTO_PACKET_LEN-1))
 807:Core/Src/BLT/xcp.c ****   {
 808:Core/Src/BLT/xcp.c ****     /* requested data length is too long */
 809:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_OUT_OF_RANGE);
 810:Core/Src/BLT/xcp.c ****     return;
 811:Core/Src/BLT/xcp.c ****   }
ARM GAS  /tmp/ccb89HYV.s 			page 22


 812:Core/Src/BLT/xcp.c **** 
 813:Core/Src/BLT/xcp.c ****   /* update mta. current implementation ignores address extension */
 814:Core/Src/BLT/xcp.c ****   xcpInfo.mta = XcpGetOrderedLong(&data[4]);
 815:Core/Src/BLT/xcp.c ****   /* read out the length of the requested upload operation */
 816:Core/Src/BLT/xcp.c ****   len = data[1];
 817:Core/Src/BLT/xcp.c ****   /* set the destination pointer */
 818:Core/Src/BLT/xcp.c ****   destPtr = (blt_int8u *)((blt_addr)(blt_int32u)&xcpInfo.ctoData[1]);
 819:Core/Src/BLT/xcp.c **** 
 820:Core/Src/BLT/xcp.c **** #if (XCP_UPLOAD_EN == 1)
 821:Core/Src/BLT/xcp.c ****   /* according to the XCP specification memory read/upload functionality is always
 822:Core/Src/BLT/xcp.c ****    * available. This behavior is unwanted in the case of a bootloader that has the
 823:Core/Src/BLT/xcp.c ****    * seed/key security feature enabled. The default XCP behavior is deviated in this
 824:Core/Src/BLT/xcp.c ****    * situation. The deviation is such that all zero values are returned if the seed/key
 825:Core/Src/BLT/xcp.c ****    * security feature is enabled and the programming resource is not yet unlocked.
 826:Core/Src/BLT/xcp.c ****    */
 827:Core/Src/BLT/xcp.c ****   #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 828:Core/Src/BLT/xcp.c ****   /* check if PGM resource is unlocked */
 829:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_PGM) == XCP_RES_PGM)
 830:Core/Src/BLT/xcp.c ****   {
 831:Core/Src/BLT/xcp.c ****     /* resource is locked so memory read access is denied. zero values are returned
 832:Core/Src/BLT/xcp.c ****      * instead.
 833:Core/Src/BLT/xcp.c ****      */
 834:Core/Src/BLT/xcp.c ****     CpuMemSet((blt_addr)destPtr, 0, len);
 835:Core/Src/BLT/xcp.c ****   }
 836:Core/Src/BLT/xcp.c ****   else
 837:Core/Src/BLT/xcp.c ****   {
 838:Core/Src/BLT/xcp.c ****     /* copy the data from memory to the data packet */
 839:Core/Src/BLT/xcp.c ****     CpuMemCopy((blt_addr)destPtr,(blt_addr)xcpInfo.mta, len);
 840:Core/Src/BLT/xcp.c ****   }
 841:Core/Src/BLT/xcp.c ****   #else
 842:Core/Src/BLT/xcp.c ****   /* copy the data from memory to the data packet */
 843:Core/Src/BLT/xcp.c ****   CpuMemCopy((blt_addr)destPtr,(blt_addr)xcpInfo.mta, len);
 844:Core/Src/BLT/xcp.c ****   #endif /* XCP_SEED_KEY_PROTECTION_EN == 1 */
 845:Core/Src/BLT/xcp.c **** #else
 846:Core/Src/BLT/xcp.c ****   /* uploads are disabled, so return zero values for memory read operations */
 847:Core/Src/BLT/xcp.c ****   CpuMemSet((blt_addr)destPtr, 0, len);
 848:Core/Src/BLT/xcp.c **** #endif /* XCP_UPLOAD_EN == 1 */
 849:Core/Src/BLT/xcp.c **** 
 850:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
 851:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
 852:Core/Src/BLT/xcp.c **** 
 853:Core/Src/BLT/xcp.c ****   /* post increment the mta */
 854:Core/Src/BLT/xcp.c ****   xcpInfo.mta += data[1];
 855:Core/Src/BLT/xcp.c **** 
 856:Core/Src/BLT/xcp.c ****   /* set packet length */
 857:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = data[1]+1;
 858:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdShortUpload ***/
 859:Core/Src/BLT/xcp.c **** 
 860:Core/Src/BLT/xcp.c **** 
 861:Core/Src/BLT/xcp.c **** #if (XCP_RES_CALIBRATION_EN == 1)
 862:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 863:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the DOWNLOAD command as
 864:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 865:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 866:Core/Src/BLT/xcp.c **** ** \return    none
 867:Core/Src/BLT/xcp.c **** **
 868:Core/Src/BLT/xcp.c **** ****************************************************************************************/
ARM GAS  /tmp/ccb89HYV.s 			page 23


 869:Core/Src/BLT/xcp.c **** static void XcpCmdDownload(blt_int8u *data)
 870:Core/Src/BLT/xcp.c **** {
 871:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 872:Core/Src/BLT/xcp.c ****   /* check if CAL_PAG resource is unlocked */
 873:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_CALPAG) != 0)
 874:Core/Src/BLT/xcp.c ****   {
 875:Core/Src/BLT/xcp.c ****     /* resource is locked. use seed/key sequence to unlock */
 876:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_ACCESS_LOCKED);
 877:Core/Src/BLT/xcp.c ****     return;
 878:Core/Src/BLT/xcp.c ****   }
 879:Core/Src/BLT/xcp.c **** #endif
 880:Core/Src/BLT/xcp.c **** 
 881:Core/Src/BLT/xcp.c ****   /* validate length of download request */
 882:Core/Src/BLT/xcp.c ****   if (data[1] > (XCP_CTO_PACKET_LEN-2))
 883:Core/Src/BLT/xcp.c ****   {
 884:Core/Src/BLT/xcp.c ****     /* requested data length is too long */
 885:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_OUT_OF_RANGE);
 886:Core/Src/BLT/xcp.c ****     return;
 887:Core/Src/BLT/xcp.c ****   }
 888:Core/Src/BLT/xcp.c **** 
 889:Core/Src/BLT/xcp.c ****   /* copy the data from the data packet to memory */
 890:Core/Src/BLT/xcp.c ****   CpuMemCopy((blt_addr)xcpInfo.mta, (blt_addr)((blt_int32u)&data[2]), data[1]);
 891:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
 892:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
 893:Core/Src/BLT/xcp.c **** 
 894:Core/Src/BLT/xcp.c ****   /* post increment the mta */
 895:Core/Src/BLT/xcp.c ****   xcpInfo.mta += data[1];
 896:Core/Src/BLT/xcp.c **** 
 897:Core/Src/BLT/xcp.c ****   /* set packet length */
 898:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 1;
 899:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdDownload ***/
 900:Core/Src/BLT/xcp.c **** 
 901:Core/Src/BLT/xcp.c **** 
 902:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 903:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the DOWNLOAD_MAX command as
 904:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 905:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 906:Core/Src/BLT/xcp.c **** ** \return    none
 907:Core/Src/BLT/xcp.c **** **
 908:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 909:Core/Src/BLT/xcp.c **** static void XcpCmdDownloadMax(blt_int8u *data)
 910:Core/Src/BLT/xcp.c **** {
 911:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 912:Core/Src/BLT/xcp.c ****   /* check if CAL_PAG resource is unlocked */
 913:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_CALPAG) != 0)
 914:Core/Src/BLT/xcp.c ****   {
 915:Core/Src/BLT/xcp.c ****     /* resource is locked. use seed/key sequence to unlock */
 916:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_ACCESS_LOCKED);
 917:Core/Src/BLT/xcp.c ****     return;
 918:Core/Src/BLT/xcp.c ****   }
 919:Core/Src/BLT/xcp.c **** #endif
 920:Core/Src/BLT/xcp.c **** 
 921:Core/Src/BLT/xcp.c ****   /* copy the data from the data packet to memory */
 922:Core/Src/BLT/xcp.c ****   CpuMemCopy((blt_addr)xcpInfo.mta, (blt_addr)((blt_int32u)&data[1]), \
 923:Core/Src/BLT/xcp.c ****              XCP_CTO_PACKET_LEN-1);
 924:Core/Src/BLT/xcp.c **** 
 925:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
ARM GAS  /tmp/ccb89HYV.s 			page 24


 926:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
 927:Core/Src/BLT/xcp.c **** 
 928:Core/Src/BLT/xcp.c ****   /* post increment the mta */
 929:Core/Src/BLT/xcp.c ****   xcpInfo.mta += XCP_CTO_PACKET_LEN-1;
 930:Core/Src/BLT/xcp.c **** 
 931:Core/Src/BLT/xcp.c ****   /* set packet length */
 932:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 1;
 933:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdDownloadMax ***/
 934:Core/Src/BLT/xcp.c **** #endif /* XCP_RES_CALIBRATION_EN == 1 */
 935:Core/Src/BLT/xcp.c **** 
 936:Core/Src/BLT/xcp.c **** 
 937:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 938:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the BUILD_CHECKSUM command as
 939:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 940:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 941:Core/Src/BLT/xcp.c **** ** \return    none
 942:Core/Src/BLT/xcp.c **** **
 943:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 944:Core/Src/BLT/xcp.c **** static void XcpCmdBuildCheckSum(blt_int8u *data)
 945:Core/Src/BLT/xcp.c **** {
 946:Core/Src/BLT/xcp.c ****   blt_int32u checksumLen;
 947:Core/Src/BLT/xcp.c ****   blt_int32u checksumVal = 0;
 948:Core/Src/BLT/xcp.c ****   blt_int8u  checksumType;
 949:Core/Src/BLT/xcp.c ****   
 950:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
 951:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
 952:Core/Src/BLT/xcp.c **** 
 953:Core/Src/BLT/xcp.c ****   /* obtain checksum and checksum type */
 954:Core/Src/BLT/xcp.c ****   checksumLen = XcpGetOrderedLong(&data[4]);
 955:Core/Src/BLT/xcp.c ****   checksumType = XcpComputeChecksum(xcpInfo.mta, checksumLen, &checksumVal);
 956:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = checksumType;
 957:Core/Src/BLT/xcp.c ****   XcpSetOrderedLong(checksumVal, &xcpInfo.ctoData[4]);
 958:Core/Src/BLT/xcp.c **** 
 959:Core/Src/BLT/xcp.c ****   /* initialize reserved parameters */
 960:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[2] = 0;
 961:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[3] = 0;
 962:Core/Src/BLT/xcp.c **** 
 963:Core/Src/BLT/xcp.c ****   /* set packet length */
 964:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 8;
 965:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdBuildCheckSum ***/
 966:Core/Src/BLT/xcp.c **** 
 967:Core/Src/BLT/xcp.c **** 
 968:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 969:Core/Src/BLT/xcp.c **** /************************************************************************************//**
 970:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the GET_SEED command as
 971:Core/Src/BLT/xcp.c **** **            defined by the protocol.
 972:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
 973:Core/Src/BLT/xcp.c **** ** \return    none
 974:Core/Src/BLT/xcp.c **** **
 975:Core/Src/BLT/xcp.c **** ****************************************************************************************/
 976:Core/Src/BLT/xcp.c **** static void XcpCmdGetSeed(blt_int8u *data)
 977:Core/Src/BLT/xcp.c **** {
 978:Core/Src/BLT/xcp.c ****   blt_int8u resourceOK;
 979:Core/Src/BLT/xcp.c ****   /* made seed buffer static to lower stack load */
 980:Core/Src/BLT/xcp.c ****   static blt_int8u seedBuffer[XCP_SEED_MAX_LEN];
 981:Core/Src/BLT/xcp.c ****   static blt_int8u seedRemainderLen = 0;
 982:Core/Src/BLT/xcp.c ****   static blt_int8u *seedCurrentPtr;
ARM GAS  /tmp/ccb89HYV.s 			page 25


 983:Core/Src/BLT/xcp.c ****   static blt_bool sequenceInProgress = BLT_FALSE;
 984:Core/Src/BLT/xcp.c ****   blt_int8u seedCurrentLen;
 985:Core/Src/BLT/xcp.c **** 
 986:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
 987:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
 988:Core/Src/BLT/xcp.c **** 
 989:Core/Src/BLT/xcp.c ****   /* validate requested resource in case the mode flag equals 0 */
 990:Core/Src/BLT/xcp.c ****   if (data[1] == 0)
 991:Core/Src/BLT/xcp.c ****   {
 992:Core/Src/BLT/xcp.c ****     /* init resource check variable as if an illegal resource is requested */
 993:Core/Src/BLT/xcp.c ****     resourceOK = 0;
 994:Core/Src/BLT/xcp.c **** 
 995:Core/Src/BLT/xcp.c ****     /* check if calibration/paging resource is requested for seed/key and make
 996:Core/Src/BLT/xcp.c ****      * sure this is the only requested resource
 997:Core/Src/BLT/xcp.c ****      */
 998:Core/Src/BLT/xcp.c ****     if (((data[2] & XCP_RES_CALPAG) > 0) && ((data[2] & ~XCP_RES_CALPAG) == 0))
 999:Core/Src/BLT/xcp.c ****     {
1000:Core/Src/BLT/xcp.c ****       resourceOK = 1;
1001:Core/Src/BLT/xcp.c ****     }
1002:Core/Src/BLT/xcp.c **** 
1003:Core/Src/BLT/xcp.c ****     /* check if programming resource is requested for seed/key and make
1004:Core/Src/BLT/xcp.c ****      * sure this is the only requested resource
1005:Core/Src/BLT/xcp.c ****      */
1006:Core/Src/BLT/xcp.c ****     if (((data[2] & XCP_RES_PGM) > 0) && ((data[2] & ~XCP_RES_PGM) == 0))
1007:Core/Src/BLT/xcp.c ****     {
1008:Core/Src/BLT/xcp.c ****       resourceOK = 1;
1009:Core/Src/BLT/xcp.c ****     }
1010:Core/Src/BLT/xcp.c **** 
1011:Core/Src/BLT/xcp.c ****     /* check if data acquisition resource is requested for seed/key and make
1012:Core/Src/BLT/xcp.c ****      * sure this is the only requested resource
1013:Core/Src/BLT/xcp.c ****      */
1014:Core/Src/BLT/xcp.c ****     if (((data[2] & XCP_RES_DAQ) > 0) && ((data[2] & ~XCP_RES_DAQ) == 0))
1015:Core/Src/BLT/xcp.c ****     {
1016:Core/Src/BLT/xcp.c ****       resourceOK = 1;
1017:Core/Src/BLT/xcp.c ****     }
1018:Core/Src/BLT/xcp.c **** 
1019:Core/Src/BLT/xcp.c ****     /* check if data stimulation resource is requested for seed/key and make
1020:Core/Src/BLT/xcp.c ****      * sure this is the only requested resource
1021:Core/Src/BLT/xcp.c ****      */
1022:Core/Src/BLT/xcp.c ****     if (((data[2] & XCP_RES_STIM) > 0) && ((data[2] & ~XCP_RES_STIM) == 0))
1023:Core/Src/BLT/xcp.c ****     {
1024:Core/Src/BLT/xcp.c ****       resourceOK = 1;
1025:Core/Src/BLT/xcp.c ****     }
1026:Core/Src/BLT/xcp.c **** 
1027:Core/Src/BLT/xcp.c ****     /* now process the resource validation */
1028:Core/Src/BLT/xcp.c ****     if (resourceOK == 0)
1029:Core/Src/BLT/xcp.c ****     {
1030:Core/Src/BLT/xcp.c ****       XcpSetCtoError(XCP_ERR_OUT_OF_RANGE);
1031:Core/Src/BLT/xcp.c ****       return;
1032:Core/Src/BLT/xcp.c ****     }
1033:Core/Src/BLT/xcp.c **** 
1034:Core/Src/BLT/xcp.c ****     /* check if the resource is already unlocked */
1035:Core/Src/BLT/xcp.c ****     if ((xcpInfo.protection & data[2]) == 0)
1036:Core/Src/BLT/xcp.c ****     {
1037:Core/Src/BLT/xcp.c ****       /* set the seed length to 0 to indicate that the resource is already unlocked */
1038:Core/Src/BLT/xcp.c ****       xcpInfo.ctoData[1] = 0;
1039:Core/Src/BLT/xcp.c ****       /* set packet length */
ARM GAS  /tmp/ccb89HYV.s 			page 26


1040:Core/Src/BLT/xcp.c ****       xcpInfo.ctoLen = 2;
1041:Core/Src/BLT/xcp.c ****       /* no need to continue processing */
1042:Core/Src/BLT/xcp.c ****       return;
1043:Core/Src/BLT/xcp.c ****     }
1044:Core/Src/BLT/xcp.c **** 
1045:Core/Src/BLT/xcp.c ****     /* store resource for which the seed/key sequence is started */
1046:Core/Src/BLT/xcp.c ****     xcpInfo.s_n_k_resource = data[2];
1047:Core/Src/BLT/xcp.c ****   }
1048:Core/Src/BLT/xcp.c **** 
1049:Core/Src/BLT/xcp.c ****   /* process the mode flag. 0 is first part of the seed, 1 is remainder of the seed */
1050:Core/Src/BLT/xcp.c ****   if (data[1] == 0)
1051:Core/Src/BLT/xcp.c ****   {
1052:Core/Src/BLT/xcp.c ****     /* set flag that a seed reading sequence is now in progress */
1053:Core/Src/BLT/xcp.c ****     sequenceInProgress = BLT_TRUE;
1054:Core/Src/BLT/xcp.c ****     /* obtain the seed and store it in the buffer */
1055:Core/Src/BLT/xcp.c ****     seedRemainderLen = XcpGetSeed(xcpInfo.s_n_k_resource, seedBuffer);
1056:Core/Src/BLT/xcp.c ****     /* protect against buffer overrun */
1057:Core/Src/BLT/xcp.c ****     ASSERT_RT(seedRemainderLen <= XCP_SEED_MAX_LEN);
1058:Core/Src/BLT/xcp.c ****     /* set seed pointer */
1059:Core/Src/BLT/xcp.c ****     seedCurrentPtr = &seedBuffer[0];
1060:Core/Src/BLT/xcp.c ****   }
1061:Core/Src/BLT/xcp.c ****   /* seed remainder is requested */
1062:Core/Src/BLT/xcp.c ****   else
1063:Core/Src/BLT/xcp.c ****   {
1064:Core/Src/BLT/xcp.c ****     /* this is only allowed if a sequence is in progress */
1065:Core/Src/BLT/xcp.c ****     if (sequenceInProgress == BLT_FALSE)
1066:Core/Src/BLT/xcp.c ****     {
1067:Core/Src/BLT/xcp.c ****       /* invalid sequence */
1068:Core/Src/BLT/xcp.c ****       XcpSetCtoError(XCP_ERR_SEQUENCE);
1069:Core/Src/BLT/xcp.c ****       /* reset seed/key resource variable for possible next unlock */
1070:Core/Src/BLT/xcp.c ****       xcpInfo.s_n_k_resource = 0;
1071:Core/Src/BLT/xcp.c ****       return;
1072:Core/Src/BLT/xcp.c ****     }
1073:Core/Src/BLT/xcp.c ****   }
1074:Core/Src/BLT/xcp.c ****   /* determine number of seed bytes that fit in the first response */
1075:Core/Src/BLT/xcp.c ****   seedCurrentLen = seedRemainderLen;
1076:Core/Src/BLT/xcp.c ****   if (seedCurrentLen > (XCP_DTO_PACKET_LEN-2))
1077:Core/Src/BLT/xcp.c ****   {
1078:Core/Src/BLT/xcp.c ****     seedCurrentLen = XCP_DTO_PACKET_LEN-2;
1079:Core/Src/BLT/xcp.c ****   }
1080:Core/Src/BLT/xcp.c ****   /* store the first part of the seed in the response */
1081:Core/Src/BLT/xcp.c ****   CpuMemCopy((blt_addr)(&xcpInfo.ctoData[2]), (blt_addr)seedCurrentPtr, seedCurrentLen);
1082:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = seedRemainderLen;
1083:Core/Src/BLT/xcp.c ****   /* update control variables */
1084:Core/Src/BLT/xcp.c ****   seedRemainderLen -= seedCurrentLen;
1085:Core/Src/BLT/xcp.c ****   seedCurrentPtr += seedCurrentLen;
1086:Core/Src/BLT/xcp.c ****   /* reset sequence flag at the end of the sequence */
1087:Core/Src/BLT/xcp.c ****   if (seedRemainderLen == 0)
1088:Core/Src/BLT/xcp.c ****   {
1089:Core/Src/BLT/xcp.c ****     sequenceInProgress = BLT_FALSE;
1090:Core/Src/BLT/xcp.c ****   }
1091:Core/Src/BLT/xcp.c ****   /* set packet length */
1092:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = seedCurrentLen + 2;
1093:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdGetSeed ***/
1094:Core/Src/BLT/xcp.c **** 
1095:Core/Src/BLT/xcp.c **** 
1096:Core/Src/BLT/xcp.c **** /************************************************************************************//**
ARM GAS  /tmp/ccb89HYV.s 			page 27


1097:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the UNLOCK command as
1098:Core/Src/BLT/xcp.c **** **            defined by the protocol.
1099:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
1100:Core/Src/BLT/xcp.c **** ** \return    none
1101:Core/Src/BLT/xcp.c **** **
1102:Core/Src/BLT/xcp.c **** ****************************************************************************************/
1103:Core/Src/BLT/xcp.c **** static void XcpCmdUnlock(blt_int8u *data)
1104:Core/Src/BLT/xcp.c **** {
1105:Core/Src/BLT/xcp.c ****   /* made key buffer static to lower stack load */
1106:Core/Src/BLT/xcp.c ****   static blt_int8u keyBuffer[XCP_KEY_MAX_LEN];
1107:Core/Src/BLT/xcp.c ****   static blt_int8u keyPreviousRemainder = 0;
1108:Core/Src/BLT/xcp.c ****   static blt_int8u keyTotalLen = 0;
1109:Core/Src/BLT/xcp.c ****   static blt_int8u *keyCurrentPtr;
1110:Core/Src/BLT/xcp.c ****   static blt_int8u keyReceivedLen = 0;
1111:Core/Src/BLT/xcp.c ****   blt_int8u keyCurrentLen;
1112:Core/Src/BLT/xcp.c **** 
1113:Core/Src/BLT/xcp.c ****   /* verify that the key will actually fit in the buffer */
1114:Core/Src/BLT/xcp.c ****   if (data[1] > XCP_KEY_MAX_LEN)
1115:Core/Src/BLT/xcp.c ****   {
1116:Core/Src/BLT/xcp.c ****     /* reset previous remainder for the next loop iteration */
1117:Core/Src/BLT/xcp.c ****     keyPreviousRemainder = 0;
1118:Core/Src/BLT/xcp.c ****     /* key is too long */
1119:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_OUT_OF_RANGE);
1120:Core/Src/BLT/xcp.c ****     /* reset seed/key resource variable for possible next unlock */
1121:Core/Src/BLT/xcp.c ****     xcpInfo.s_n_k_resource = 0;
1122:Core/Src/BLT/xcp.c ****     return;
1123:Core/Src/BLT/xcp.c ****   }
1124:Core/Src/BLT/xcp.c **** 
1125:Core/Src/BLT/xcp.c ****   /* is this the start of a key reception? the first unlock message contains the total
1126:Core/Src/BLT/xcp.c ****    * length of the key and subsequent messages the remainder length. if the received
1127:Core/Src/BLT/xcp.c ****    * length is >= than the previously received remainder, it must be the reception
1128:Core/Src/BLT/xcp.c ****    * start of a new key.
1129:Core/Src/BLT/xcp.c ****    */
1130:Core/Src/BLT/xcp.c ****   if (data[1] >= keyPreviousRemainder)
1131:Core/Src/BLT/xcp.c ****   {
1132:Core/Src/BLT/xcp.c ****     /* store the total length of the key */
1133:Core/Src/BLT/xcp.c ****     keyTotalLen = data[1];
1134:Core/Src/BLT/xcp.c ****     /* initialize pointer to key reception buffer */
1135:Core/Src/BLT/xcp.c ****     keyCurrentPtr = &keyBuffer[0];
1136:Core/Src/BLT/xcp.c ****     /* reset number of received key bytes */
1137:Core/Src/BLT/xcp.c ****     keyReceivedLen = 0;
1138:Core/Src/BLT/xcp.c **** 
1139:Core/Src/BLT/xcp.c ****   }
1140:Core/Src/BLT/xcp.c ****   /* store length / remainder for checking during the next iteration */
1141:Core/Src/BLT/xcp.c ****   keyPreviousRemainder = data[1];
1142:Core/Src/BLT/xcp.c ****   /* determine how many key bytes were received */
1143:Core/Src/BLT/xcp.c ****   keyCurrentLen = data[1];
1144:Core/Src/BLT/xcp.c ****   if (keyCurrentLen > (XCP_CTO_PACKET_LEN-2))
1145:Core/Src/BLT/xcp.c ****   {
1146:Core/Src/BLT/xcp.c ****     keyCurrentLen = XCP_CTO_PACKET_LEN-2;
1147:Core/Src/BLT/xcp.c ****   }
1148:Core/Src/BLT/xcp.c ****   /* store the received key bytes to the buffer */
1149:Core/Src/BLT/xcp.c ****   CpuMemCopy((blt_addr)keyCurrentPtr, (blt_addr)(&data[2]), keyCurrentLen);
1150:Core/Src/BLT/xcp.c ****   /* update control variables */
1151:Core/Src/BLT/xcp.c ****   keyCurrentPtr += keyCurrentLen;
1152:Core/Src/BLT/xcp.c ****   keyReceivedLen += keyCurrentLen;
1153:Core/Src/BLT/xcp.c ****   /* check if the entire key was received */
ARM GAS  /tmp/ccb89HYV.s 			page 28


1154:Core/Src/BLT/xcp.c ****   if (keyReceivedLen >= keyTotalLen)
1155:Core/Src/BLT/xcp.c ****   {
1156:Core/Src/BLT/xcp.c ****     /* reset previous remainder for the next loop iteration */
1157:Core/Src/BLT/xcp.c ****     keyPreviousRemainder = 0;
1158:Core/Src/BLT/xcp.c ****     /* verify the key */
1159:Core/Src/BLT/xcp.c ****     if (XcpVerifyKey(xcpInfo.s_n_k_resource, keyBuffer, keyTotalLen) == 0)
1160:Core/Src/BLT/xcp.c ****     {
1161:Core/Src/BLT/xcp.c ****       /* invalid key so inform the master and do a disconnect */
1162:Core/Src/BLT/xcp.c ****       XcpSetCtoError(XCP_ERR_ACCESS_LOCKED);
1163:Core/Src/BLT/xcp.c ****       /* indicate that the xcp connection is disconnected */
1164:Core/Src/BLT/xcp.c ****       xcpInfo.connected = 0;
1165:Core/Src/BLT/xcp.c ****       /* reset seed/key resource variable for possible next unlock */
1166:Core/Src/BLT/xcp.c ****       xcpInfo.s_n_k_resource = 0;
1167:Core/Src/BLT/xcp.c ****       /* enable resource protection */
1168:Core/Src/BLT/xcp.c ****       XcpProtectResources();
1169:Core/Src/BLT/xcp.c ****       return;
1170:Core/Src/BLT/xcp.c ****     }
1171:Core/Src/BLT/xcp.c ****     /* key correct so unlock the resource */
1172:Core/Src/BLT/xcp.c ****     xcpInfo.protection &= ~xcpInfo.s_n_k_resource;
1173:Core/Src/BLT/xcp.c ****     /* reset seed/key resource variable for possible next unlock */
1174:Core/Src/BLT/xcp.c ****     xcpInfo.s_n_k_resource = 0;
1175:Core/Src/BLT/xcp.c ****   }
1176:Core/Src/BLT/xcp.c **** 
1177:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
1178:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
1179:Core/Src/BLT/xcp.c ****   /* report the current resource protection */
1180:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = xcpInfo.protection;
1181:Core/Src/BLT/xcp.c ****   /* set packet length */
1182:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 2;
1183:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdUnlock ***/
1184:Core/Src/BLT/xcp.c **** #endif /* XCP_SEED_KEY_PROTECTION_EN == 1 */
1185:Core/Src/BLT/xcp.c **** 
1186:Core/Src/BLT/xcp.c **** 
1187:Core/Src/BLT/xcp.c **** #if (XCP_RES_PAGING_EN == 1)
1188:Core/Src/BLT/xcp.c **** /************************************************************************************//**
1189:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the SET_CAL_PAGE command as
1190:Core/Src/BLT/xcp.c **** **            defined by the protocol.
1191:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
1192:Core/Src/BLT/xcp.c **** ** \return    none
1193:Core/Src/BLT/xcp.c **** **
1194:Core/Src/BLT/xcp.c **** ****************************************************************************************/
1195:Core/Src/BLT/xcp.c **** static void XcpCmdSetCalPage(blt_int8u *data)
1196:Core/Src/BLT/xcp.c **** {
1197:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
1198:Core/Src/BLT/xcp.c ****   /* check if CAL_PAG resource is unlocked */
1199:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_CALPAG) == XCP_RES_CALPAG)
1200:Core/Src/BLT/xcp.c ****   {
1201:Core/Src/BLT/xcp.c ****     /* resource is locked. use seed/key sequence to unlock */
1202:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_ACCESS_LOCKED);
1203:Core/Src/BLT/xcp.c ****     return;
1204:Core/Src/BLT/xcp.c ****   }
1205:Core/Src/BLT/xcp.c **** #endif
1206:Core/Src/BLT/xcp.c **** 
1207:Core/Src/BLT/xcp.c ****   /* select the page. note that the mode parameter is ignored */
1208:Core/Src/BLT/xcp.c ****   if (XcpCalSetPageHook(data[2], data[3]) == 0)
1209:Core/Src/BLT/xcp.c ****   {
1210:Core/Src/BLT/xcp.c ****     /* calibration page could not be selected */
ARM GAS  /tmp/ccb89HYV.s 			page 29


1211:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_PAGE_NOT_VALID);
1212:Core/Src/BLT/xcp.c ****     return;
1213:Core/Src/BLT/xcp.c ****   }
1214:Core/Src/BLT/xcp.c **** 
1215:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
1216:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
1217:Core/Src/BLT/xcp.c **** 
1218:Core/Src/BLT/xcp.c ****   /* set packet length */
1219:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 1;
1220:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdSetCalPage ***/
1221:Core/Src/BLT/xcp.c **** 
1222:Core/Src/BLT/xcp.c **** 
1223:Core/Src/BLT/xcp.c **** /************************************************************************************//**
1224:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the GET_CAL_PAGE command as
1225:Core/Src/BLT/xcp.c **** **            defined by the protocol.
1226:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
1227:Core/Src/BLT/xcp.c **** ** \return    none
1228:Core/Src/BLT/xcp.c **** **
1229:Core/Src/BLT/xcp.c **** ****************************************************************************************/
1230:Core/Src/BLT/xcp.c **** static void XcpCmdGetCalPage(blt_int8u *data)
1231:Core/Src/BLT/xcp.c **** {
1232:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
1233:Core/Src/BLT/xcp.c ****   /* check if CAL_PAG resource is unlocked */
1234:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_CALPAG) == XCP_RES_CALPAG)
1235:Core/Src/BLT/xcp.c ****   {
1236:Core/Src/BLT/xcp.c ****     /* resource is locked. use seed/key sequence to unlock */
1237:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_ACCESS_LOCKED);
1238:Core/Src/BLT/xcp.c ****     return;
1239:Core/Src/BLT/xcp.c ****   }
1240:Core/Src/BLT/xcp.c **** #endif
1241:Core/Src/BLT/xcp.c **** 
1242:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
1243:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
1244:Core/Src/BLT/xcp.c **** 
1245:Core/Src/BLT/xcp.c ****   /* initialize reserved parameters */
1246:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = 0;
1247:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[2] = 0;
1248:Core/Src/BLT/xcp.c **** 
1249:Core/Src/BLT/xcp.c ****   /* store the calibration page */
1250:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[3] = XcpCalGetPageHook(data[2]);
1251:Core/Src/BLT/xcp.c **** 
1252:Core/Src/BLT/xcp.c ****   /* set packet length */
1253:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 4;
1254:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdGetCalPage ***/
1255:Core/Src/BLT/xcp.c **** #endif /* XCP_RES_PAGING_EN == 1 */
1256:Core/Src/BLT/xcp.c **** 
1257:Core/Src/BLT/xcp.c **** 
1258:Core/Src/BLT/xcp.c **** #if (XCP_RES_PROGRAMMING_EN == 1)
1259:Core/Src/BLT/xcp.c **** /************************************************************************************//**
1260:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the PROGRAM_START command as
1261:Core/Src/BLT/xcp.c **** **            defined by the protocol.
1262:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
1263:Core/Src/BLT/xcp.c **** ** \return    none
1264:Core/Src/BLT/xcp.c **** **
1265:Core/Src/BLT/xcp.c **** ****************************************************************************************/
1266:Core/Src/BLT/xcp.c **** static void XcpCmdProgramStart(blt_int8u *data)
1267:Core/Src/BLT/xcp.c **** {
ARM GAS  /tmp/ccb89HYV.s 			page 30


1268:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
1269:Core/Src/BLT/xcp.c ****   data = data;
1270:Core/Src/BLT/xcp.c **** 
1271:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
1272:Core/Src/BLT/xcp.c ****   /* check if PGM resource is unlocked */
1273:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_PGM) == XCP_RES_PGM)
1274:Core/Src/BLT/xcp.c ****   {
1275:Core/Src/BLT/xcp.c ****     /* resource is locked. use seed/key sequence to unlock */
1276:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_ACCESS_LOCKED);
1277:Core/Src/BLT/xcp.c ****     return;
1278:Core/Src/BLT/xcp.c ****   }
1279:Core/Src/BLT/xcp.c **** #endif
1280:Core/Src/BLT/xcp.c **** 
1281:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
1282:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
1283:Core/Src/BLT/xcp.c **** 
1284:Core/Src/BLT/xcp.c ****   /* initialize reserved parameter */
1285:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = 0;
1286:Core/Src/BLT/xcp.c **** 
1287:Core/Src/BLT/xcp.c ****   /* no special communication mode supported during programming */
1288:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[2] = 0;
1289:Core/Src/BLT/xcp.c **** 
1290:Core/Src/BLT/xcp.c ****   /* cto packet length stays the same during programming */
1291:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[3] = (blt_int8u)XCP_CTO_PACKET_LEN;
1292:Core/Src/BLT/xcp.c **** 
1293:Core/Src/BLT/xcp.c ****   /* no block size, st-min time, or queue size supported */
1294:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[4] = 0;
1295:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[5] = 0;
1296:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[6] = 0;
1297:Core/Src/BLT/xcp.c **** 
1298:Core/Src/BLT/xcp.c ****   /* set packet length */
1299:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 7;
1300:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramStart ***/
1301:Core/Src/BLT/xcp.c **** 
1302:Core/Src/BLT/xcp.c **** 
1303:Core/Src/BLT/xcp.c **** /************************************************************************************//**
1304:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the PROGRAM_MAX command as
1305:Core/Src/BLT/xcp.c **** **            defined by the protocol.
1306:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
1307:Core/Src/BLT/xcp.c **** ** \return    none
1308:Core/Src/BLT/xcp.c **** **
1309:Core/Src/BLT/xcp.c **** ****************************************************************************************/
1310:Core/Src/BLT/xcp.c **** static void XcpCmdProgramMax(blt_int8u *data)
1311:Core/Src/BLT/xcp.c **** {
1312:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
1313:Core/Src/BLT/xcp.c ****   /* check if PGM resource is unlocked */
1314:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_PGM) == XCP_RES_PGM)
1315:Core/Src/BLT/xcp.c ****   {
1316:Core/Src/BLT/xcp.c ****     /* resource is locked. use seed/key sequence to unlock */
1317:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_ACCESS_LOCKED);
1318:Core/Src/BLT/xcp.c ****     return;
1319:Core/Src/BLT/xcp.c ****   }
1320:Core/Src/BLT/xcp.c **** #endif
1321:Core/Src/BLT/xcp.c **** 
1322:Core/Src/BLT/xcp.c ****   /* program the data */
1323:Core/Src/BLT/xcp.c ****   if (NvmWrite((blt_addr)xcpInfo.mta, XCP_CTO_PACKET_LEN-1, &data[1]) == BLT_FALSE)
1324:Core/Src/BLT/xcp.c ****   {
ARM GAS  /tmp/ccb89HYV.s 			page 31


1325:Core/Src/BLT/xcp.c ****     /* error occurred during programming */
1326:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_GENERIC);
1327:Core/Src/BLT/xcp.c ****     return;
1328:Core/Src/BLT/xcp.c ****   }
1329:Core/Src/BLT/xcp.c **** 
1330:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
1331:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
1332:Core/Src/BLT/xcp.c **** 
1333:Core/Src/BLT/xcp.c ****   /* post increment the mta */
1334:Core/Src/BLT/xcp.c ****   xcpInfo.mta += XCP_CTO_PACKET_LEN-1;
1335:Core/Src/BLT/xcp.c **** 
1336:Core/Src/BLT/xcp.c ****   /* set packet length */
1337:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 1;
1338:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramMax ***/
1339:Core/Src/BLT/xcp.c **** 
1340:Core/Src/BLT/xcp.c **** 
1341:Core/Src/BLT/xcp.c **** /************************************************************************************//**
1342:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the PROGRAM command as
1343:Core/Src/BLT/xcp.c **** **            defined by the protocol.
1344:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
1345:Core/Src/BLT/xcp.c **** ** \return    none
1346:Core/Src/BLT/xcp.c **** **
1347:Core/Src/BLT/xcp.c **** ****************************************************************************************/
1348:Core/Src/BLT/xcp.c **** static void XcpCmdProgram(blt_int8u *data)
1349:Core/Src/BLT/xcp.c **** {
1350:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
1351:Core/Src/BLT/xcp.c ****   /* check if PGM resource is unlocked */
1352:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_PGM) == XCP_RES_PGM)
1353:Core/Src/BLT/xcp.c ****   {
1354:Core/Src/BLT/xcp.c ****     /* resource is locked. use seed/key sequence to unlock */
1355:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_ACCESS_LOCKED);
1356:Core/Src/BLT/xcp.c ****     return;
1357:Core/Src/BLT/xcp.c ****   }
1358:Core/Src/BLT/xcp.c **** #endif
1359:Core/Src/BLT/xcp.c **** 
1360:Core/Src/BLT/xcp.c ****   /* validate length of download request */
1361:Core/Src/BLT/xcp.c ****   if (data[1] > (XCP_CTO_PACKET_LEN-2))
1362:Core/Src/BLT/xcp.c ****   {
1363:Core/Src/BLT/xcp.c ****     /* requested data length is too long */
1364:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_OUT_OF_RANGE);
1365:Core/Src/BLT/xcp.c ****     return;
1366:Core/Src/BLT/xcp.c ****   }
1367:Core/Src/BLT/xcp.c **** 
1368:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
1369:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
1370:Core/Src/BLT/xcp.c **** 
1371:Core/Src/BLT/xcp.c ****   /* set packet length */
1372:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 1;
1373:Core/Src/BLT/xcp.c **** 
1374:Core/Src/BLT/xcp.c ****   /* end of programming sequence (datasize is 0)? */
1375:Core/Src/BLT/xcp.c ****   if (data[1] == 0)
1376:Core/Src/BLT/xcp.c ****   {
1377:Core/Src/BLT/xcp.c ****     /* call erase/programming cleanup routine */
1378:Core/Src/BLT/xcp.c ****     if (NvmDone() == BLT_FALSE)
1379:Core/Src/BLT/xcp.c ****     {
1380:Core/Src/BLT/xcp.c ****       /* error occurred while finishing up programming */
1381:Core/Src/BLT/xcp.c ****       XcpSetCtoError(XCP_ERR_GENERIC);
ARM GAS  /tmp/ccb89HYV.s 			page 32


1382:Core/Src/BLT/xcp.c ****     }
1383:Core/Src/BLT/xcp.c ****     return;
1384:Core/Src/BLT/xcp.c ****   }
1385:Core/Src/BLT/xcp.c ****   /* program the data */
1386:Core/Src/BLT/xcp.c ****   if (NvmWrite((blt_addr)xcpInfo.mta, data[1], &data[2]) == BLT_FALSE)
1387:Core/Src/BLT/xcp.c ****   {
1388:Core/Src/BLT/xcp.c ****     /* error occurred during programming */
1389:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_GENERIC);
1390:Core/Src/BLT/xcp.c ****     return;
1391:Core/Src/BLT/xcp.c ****   }
1392:Core/Src/BLT/xcp.c **** 
1393:Core/Src/BLT/xcp.c ****   /* post increment the mta */
1394:Core/Src/BLT/xcp.c ****   xcpInfo.mta += data[1];
1395:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgram ***/
1396:Core/Src/BLT/xcp.c **** 
1397:Core/Src/BLT/xcp.c **** 
1398:Core/Src/BLT/xcp.c **** /************************************************************************************//**
1399:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the PROGRAM_CLEAR command as
1400:Core/Src/BLT/xcp.c **** **            defined by the protocol.
1401:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
1402:Core/Src/BLT/xcp.c **** ** \return    none
1403:Core/Src/BLT/xcp.c **** **
1404:Core/Src/BLT/xcp.c **** ****************************************************************************************/
1405:Core/Src/BLT/xcp.c **** static void XcpCmdProgramClear(blt_int8u *data)
1406:Core/Src/BLT/xcp.c **** {
1407:Core/Src/BLT/xcp.c ****   blt_int32u eraseLen;
1408:Core/Src/BLT/xcp.c ****   blt_addr   eraseAddr;
1409:Core/Src/BLT/xcp.c ****   
1410:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
1411:Core/Src/BLT/xcp.c ****   /* check if PGM resource is unlocked */
1412:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_PGM) == XCP_RES_PGM)
1413:Core/Src/BLT/xcp.c ****   {
1414:Core/Src/BLT/xcp.c ****     /* resource is locked. use seed/key sequence to unlock */
1415:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_ACCESS_LOCKED);
1416:Core/Src/BLT/xcp.c ****     return;
1417:Core/Src/BLT/xcp.c ****   }
1418:Core/Src/BLT/xcp.c **** #endif
1419:Core/Src/BLT/xcp.c **** 
1420:Core/Src/BLT/xcp.c ****   /* erase the memory */
1421:Core/Src/BLT/xcp.c ****   eraseAddr = xcpInfo.mta;
1422:Core/Src/BLT/xcp.c ****   eraseLen = XcpGetOrderedLong(&data[4]);
1423:Core/Src/BLT/xcp.c ****   if (NvmErase(eraseAddr, eraseLen) == BLT_FALSE)
1424:Core/Src/BLT/xcp.c ****   {
1425:Core/Src/BLT/xcp.c ****     /* error occurred during erasure */
1426:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_GENERIC);
1427:Core/Src/BLT/xcp.c ****     return;
1428:Core/Src/BLT/xcp.c ****   }
1429:Core/Src/BLT/xcp.c **** 
1430:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
1431:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
1432:Core/Src/BLT/xcp.c **** 
1433:Core/Src/BLT/xcp.c ****   /* set packet length */
1434:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 1;
1435:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramClear ***/
1436:Core/Src/BLT/xcp.c **** 
1437:Core/Src/BLT/xcp.c **** 
1438:Core/Src/BLT/xcp.c **** /************************************************************************************//**
ARM GAS  /tmp/ccb89HYV.s 			page 33


1439:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the PROGRAM_RESET command as
1440:Core/Src/BLT/xcp.c **** **            defined by the protocol.
1441:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
1442:Core/Src/BLT/xcp.c **** ** \return    none
1443:Core/Src/BLT/xcp.c **** **
1444:Core/Src/BLT/xcp.c **** ****************************************************************************************/
1445:Core/Src/BLT/xcp.c **** static void XcpCmdProgramReset(blt_int8u *data)
1446:Core/Src/BLT/xcp.c **** {
1447:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
1448:Core/Src/BLT/xcp.c ****   data = data;
1449:Core/Src/BLT/xcp.c **** 
1450:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
1451:Core/Src/BLT/xcp.c ****   /* check if PGM resource is unlocked */
1452:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_PGM) == XCP_RES_PGM)
1453:Core/Src/BLT/xcp.c ****   {
1454:Core/Src/BLT/xcp.c ****     /* resource is locked. use seed/key sequence to unlock */
1455:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_ACCESS_LOCKED);
1456:Core/Src/BLT/xcp.c ****     return;
1457:Core/Src/BLT/xcp.c ****   }
1458:Core/Src/BLT/xcp.c **** #endif
1459:Core/Src/BLT/xcp.c **** 
1460:Core/Src/BLT/xcp.c ****   /* reset the ecu after programming is done. so basically, just start the newly programmed
1461:Core/Src/BLT/xcp.c ****    * firmware. it is okay if the code does not return here. 
1462:Core/Src/BLT/xcp.c ****    */
1463:Core/Src/BLT/xcp.c ****   CpuStartUserProgram();
1464:Core/Src/BLT/xcp.c **** 
1465:Core/Src/BLT/xcp.c ****   /* set packet id to command response packet */
1466:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[0] = XCP_PID_RES;
1467:Core/Src/BLT/xcp.c **** 
1468:Core/Src/BLT/xcp.c ****   /* set packet length */
1469:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 1;
1470:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramReset ***/
1471:Core/Src/BLT/xcp.c **** 
1472:Core/Src/BLT/xcp.c **** 
1473:Core/Src/BLT/xcp.c **** /************************************************************************************//**
1474:Core/Src/BLT/xcp.c **** ** \brief     XCP command processor function which handles the PROGRAM_PREPARE command as
1475:Core/Src/BLT/xcp.c **** **            defined by the protocol.
1476:Core/Src/BLT/xcp.c **** ** \param     data Pointer to a byte buffer with the packet data.
1477:Core/Src/BLT/xcp.c **** ** \return    none
1478:Core/Src/BLT/xcp.c **** **
1479:Core/Src/BLT/xcp.c **** ****************************************************************************************/
1480:Core/Src/BLT/xcp.c **** static void XcpCmdProgramPrepare(blt_int8u *data)
1481:Core/Src/BLT/xcp.c **** {
 406              		.loc 1 1481 1 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              		.loc 1 1481 1 is_stmt 0 view .LVU108
 411 0000 08B5     		push	{r3, lr}
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
1482:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
1483:Core/Src/BLT/xcp.c ****   /* check if PGM resource is unlocked */
1484:Core/Src/BLT/xcp.c ****   if ((xcpInfo.protection & XCP_RES_PGM) == XCP_RES_PGM)
1485:Core/Src/BLT/xcp.c ****   {
1486:Core/Src/BLT/xcp.c ****     /* resource is locked. use seed/key sequence to unlock */
ARM GAS  /tmp/ccb89HYV.s 			page 34


1487:Core/Src/BLT/xcp.c ****     XcpSetCtoError(XCP_ERR_ACCESS_LOCKED);
1488:Core/Src/BLT/xcp.c ****     return;
1489:Core/Src/BLT/xcp.c ****   }
1490:Core/Src/BLT/xcp.c **** #endif
1491:Core/Src/BLT/xcp.c **** 
1492:Core/Src/BLT/xcp.c ****   /* programming with kernel currently not needed and therefore not supported */
1493:Core/Src/BLT/xcp.c ****   XcpSetCtoError(XCP_ERR_GENERIC);
 415              		.loc 1 1493 3 is_stmt 1 view .LVU109
 416 0002 3120     		movs	r0, #49
 417              	.LVL23:
 418              		.loc 1 1493 3 is_stmt 0 view .LVU110
 419 0004 FFF7FEFF 		bl	XcpSetCtoError
 420              	.LVL24:
1494:Core/Src/BLT/xcp.c ****   return;
 421              		.loc 1 1494 3 is_stmt 1 view .LVU111
1495:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramPrepare ***/
 422              		.loc 1 1495 1 is_stmt 0 view .LVU112
 423 0008 08BD     		pop	{r3, pc}
 424              		.cfi_endproc
 425              	.LFE24:
 427              		.section	.text.XcpCmdProgramStart,"ax",%progbits
 428              		.align	1
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 433              	XcpCmdProgramStart:
 434              	.LVL25:
 435              	.LFB19:
1267:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
 436              		.loc 1 1267 1 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
1267:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
 440              		.loc 1 1267 1 is_stmt 0 view .LVU114
 441 0000 38B5     		push	{r3, r4, r5, lr}
 442              		.cfi_def_cfa_offset 16
 443              		.cfi_offset 3, -16
 444              		.cfi_offset 4, -12
 445              		.cfi_offset 5, -8
 446              		.cfi_offset 14, -4
1269:Core/Src/BLT/xcp.c **** 
 447              		.loc 1 1269 3 is_stmt 1 view .LVU115
1282:Core/Src/BLT/xcp.c **** 
 448              		.loc 1 1282 3 view .LVU116
1282:Core/Src/BLT/xcp.c **** 
 449              		.loc 1 1282 22 is_stmt 0 view .LVU117
 450 0002 084C     		ldr	r4, .L30
 451 0004 FF23     		movs	r3, #255
 452 0006 2370     		strb	r3, [r4]
1285:Core/Src/BLT/xcp.c **** 
 453              		.loc 1 1285 3 is_stmt 1 view .LVU118
1285:Core/Src/BLT/xcp.c **** 
 454              		.loc 1 1285 22 is_stmt 0 view .LVU119
 455 0008 0025     		movs	r5, #0
 456 000a 6570     		strb	r5, [r4, #1]
1288:Core/Src/BLT/xcp.c **** 
ARM GAS  /tmp/ccb89HYV.s 			page 35


 457              		.loc 1 1288 3 is_stmt 1 view .LVU120
1288:Core/Src/BLT/xcp.c **** 
 458              		.loc 1 1288 22 is_stmt 0 view .LVU121
 459 000c A570     		strb	r5, [r4, #2]
1291:Core/Src/BLT/xcp.c **** 
 460              		.loc 1 1291 3 is_stmt 1 view .LVU122
1291:Core/Src/BLT/xcp.c **** 
 461              		.loc 1 1291 35 is_stmt 0 view .LVU123
 462 000e FFF7FEFF 		bl	ComGetActiveInterfaceMaxRxLen
 463              	.LVL26:
1291:Core/Src/BLT/xcp.c **** 
 464              		.loc 1 1291 22 view .LVU124
 465 0012 E070     		strb	r0, [r4, #3]
1294:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[5] = 0;
 466              		.loc 1 1294 3 is_stmt 1 view .LVU125
1294:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[5] = 0;
 467              		.loc 1 1294 22 is_stmt 0 view .LVU126
 468 0014 2571     		strb	r5, [r4, #4]
1295:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[6] = 0;
 469              		.loc 1 1295 3 is_stmt 1 view .LVU127
1295:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[6] = 0;
 470              		.loc 1 1295 22 is_stmt 0 view .LVU128
 471 0016 6571     		strb	r5, [r4, #5]
1296:Core/Src/BLT/xcp.c **** 
 472              		.loc 1 1296 3 is_stmt 1 view .LVU129
1296:Core/Src/BLT/xcp.c **** 
 473              		.loc 1 1296 22 is_stmt 0 view .LVU130
 474 0018 A571     		strb	r5, [r4, #6]
1299:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramStart ***/
 475              		.loc 1 1299 3 is_stmt 1 view .LVU131
1299:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramStart ***/
 476              		.loc 1 1299 18 is_stmt 0 view .LVU132
 477 001a 0723     		movs	r3, #7
 478 001c A4F84430 		strh	r3, [r4, #68]	@ movhi
1300:Core/Src/BLT/xcp.c **** 
 479              		.loc 1 1300 1 view .LVU133
 480 0020 38BD     		pop	{r3, r4, r5, pc}
 481              	.L31:
 482 0022 00BF     		.align	2
 483              	.L30:
 484 0024 00000000 		.word	xcpInfo
 485              		.cfi_endproc
 486              	.LFE19:
 488              		.section	.text.XcpCmdConnect,"ax",%progbits
 489              		.align	1
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 494              	XcpCmdConnect:
 495              	.LVL27:
 496              	.LFB10:
 519:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
 497              		.loc 1 519 1 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 519:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
ARM GAS  /tmp/ccb89HYV.s 			page 36


 501              		.loc 1 519 1 is_stmt 0 view .LVU135
 502 0000 38B5     		push	{r3, r4, r5, lr}
 503              		.cfi_def_cfa_offset 16
 504              		.cfi_offset 3, -16
 505              		.cfi_offset 4, -12
 506              		.cfi_offset 5, -8
 507              		.cfi_offset 14, -4
 521:Core/Src/BLT/xcp.c **** 
 508              		.loc 1 521 3 is_stmt 1 view .LVU136
 536:Core/Src/BLT/xcp.c **** 
 509              		.loc 1 536 3 view .LVU137
 510 0002 FFF7FEFF 		bl	XcpProtectResources
 511              	.LVL28:
 539:Core/Src/BLT/xcp.c **** 
 512              		.loc 1 539 3 view .LVU138
 539:Core/Src/BLT/xcp.c **** 
 513              		.loc 1 539 21 is_stmt 0 view .LVU139
 514 0006 0F4C     		ldr	r4, .L34
 515 0008 0125     		movs	r5, #1
 516 000a 84F84050 		strb	r5, [r4, #64]
 542:Core/Src/BLT/xcp.c **** 
 517              		.loc 1 542 3 is_stmt 1 view .LVU140
 542:Core/Src/BLT/xcp.c **** 
 518              		.loc 1 542 22 is_stmt 0 view .LVU141
 519 000e FF23     		movs	r3, #255
 520 0010 2370     		strb	r3, [r4]
 545:Core/Src/BLT/xcp.c **** #if (XCP_RES_CALIBRATION_EN == 1)
 521              		.loc 1 545 3 is_stmt 1 view .LVU142
 545:Core/Src/BLT/xcp.c **** #if (XCP_RES_CALIBRATION_EN == 1)
 522              		.loc 1 545 22 is_stmt 0 view .LVU143
 523 0012 0023     		movs	r3, #0
 524 0014 6370     		strb	r3, [r4, #1]
 555:Core/Src/BLT/xcp.c **** #endif
 525              		.loc 1 555 3 is_stmt 1 view .LVU144
 555:Core/Src/BLT/xcp.c **** #endif
 526              		.loc 1 555 22 is_stmt 0 view .LVU145
 527 0016 1022     		movs	r2, #16
 528 0018 6270     		strb	r2, [r4, #1]
 567:Core/Src/BLT/xcp.c ****   /* configure for motorola or intel byte ordering */
 529              		.loc 1 567 3 is_stmt 1 view .LVU146
 567:Core/Src/BLT/xcp.c ****   /* configure for motorola or intel byte ordering */
 530              		.loc 1 567 22 is_stmt 0 view .LVU147
 531 001a A370     		strb	r3, [r4, #2]
 569:Core/Src/BLT/xcp.c **** 
 532              		.loc 1 569 3 is_stmt 1 view .LVU148
 572:Core/Src/BLT/xcp.c **** 
 533              		.loc 1 572 3 view .LVU149
 572:Core/Src/BLT/xcp.c **** 
 534              		.loc 1 572 35 is_stmt 0 view .LVU150
 535 001c FFF7FEFF 		bl	ComGetActiveInterfaceMaxRxLen
 536              	.LVL29:
 572:Core/Src/BLT/xcp.c **** 
 537              		.loc 1 572 22 view .LVU151
 538 0020 E070     		strb	r0, [r4, #3]
 576:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[5] = (blt_int8u)(XCP_DTO_PACKET_LEN >> 8);
 539              		.loc 1 576 3 is_stmt 1 view .LVU152
 576:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[5] = (blt_int8u)(XCP_DTO_PACKET_LEN >> 8);
ARM GAS  /tmp/ccb89HYV.s 			page 37


 540              		.loc 1 576 35 is_stmt 0 view .LVU153
 541 0022 FFF7FEFF 		bl	ComGetActiveInterfaceMaxTxLen
 542              	.LVL30:
 576:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[5] = (blt_int8u)(XCP_DTO_PACKET_LEN >> 8);
 543              		.loc 1 576 22 view .LVU154
 544 0026 2071     		strb	r0, [r4, #4]
 577:Core/Src/BLT/xcp.c **** #else
 545              		.loc 1 577 3 is_stmt 1 view .LVU155
 577:Core/Src/BLT/xcp.c **** #else
 546              		.loc 1 577 36 is_stmt 0 view .LVU156
 547 0028 FFF7FEFF 		bl	ComGetActiveInterfaceMaxTxLen
 548              	.LVL31:
 577:Core/Src/BLT/xcp.c **** #else
 549              		.loc 1 577 24 view .LVU157
 550 002c C0F30720 		ubfx	r0, r0, #8, #8
 577:Core/Src/BLT/xcp.c **** #else
 551              		.loc 1 577 22 view .LVU158
 552 0030 6071     		strb	r0, [r4, #5]
 584:Core/Src/BLT/xcp.c **** 
 553              		.loc 1 584 3 is_stmt 1 view .LVU159
 584:Core/Src/BLT/xcp.c **** 
 554              		.loc 1 584 22 is_stmt 0 view .LVU160
 555 0032 A571     		strb	r5, [r4, #6]
 587:Core/Src/BLT/xcp.c **** 
 556              		.loc 1 587 3 is_stmt 1 view .LVU161
 587:Core/Src/BLT/xcp.c **** 
 557              		.loc 1 587 22 is_stmt 0 view .LVU162
 558 0034 E571     		strb	r5, [r4, #7]
 590:Core/Src/BLT/xcp.c **** 
 559              		.loc 1 590 3 is_stmt 1 view .LVU163
 590:Core/Src/BLT/xcp.c **** 
 560              		.loc 1 590 18 is_stmt 0 view .LVU164
 561 0036 0823     		movs	r3, #8
 562 0038 A4F84430 		strh	r3, [r4, #68]	@ movhi
 593:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdConnect ***/
 563              		.loc 1 593 3 is_stmt 1 view .LVU165
 564 003c FFF7FEFF 		bl	NvmInit
 565              	.LVL32:
 594:Core/Src/BLT/xcp.c **** 
 566              		.loc 1 594 1 is_stmt 0 view .LVU166
 567 0040 38BD     		pop	{r3, r4, r5, pc}
 568              	.L35:
 569 0042 00BF     		.align	2
 570              	.L34:
 571 0044 00000000 		.word	xcpInfo
 572              		.cfi_endproc
 573              	.LFE10:
 575              		.section	.text.XcpCmdUpload,"ax",%progbits
 576              		.align	1
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 581              	XcpCmdUpload:
 582              	.LVL33:
 583              	.LFB16:
 735:Core/Src/BLT/xcp.c ****   blt_int16u len;
 584              		.loc 1 735 1 is_stmt 1 view -0
ARM GAS  /tmp/ccb89HYV.s 			page 38


 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 735:Core/Src/BLT/xcp.c ****   blt_int16u len;
 588              		.loc 1 735 1 is_stmt 0 view .LVU168
 589 0000 38B5     		push	{r3, r4, r5, lr}
 590              		.cfi_def_cfa_offset 16
 591              		.cfi_offset 3, -16
 592              		.cfi_offset 4, -12
 593              		.cfi_offset 5, -8
 594              		.cfi_offset 14, -4
 595 0002 0446     		mov	r4, r0
 736:Core/Src/BLT/xcp.c ****   blt_int8u *destPtr;
 596              		.loc 1 736 3 is_stmt 1 view .LVU169
 737:Core/Src/BLT/xcp.c **** 
 597              		.loc 1 737 3 view .LVU170
 740:Core/Src/BLT/xcp.c ****   {
 598              		.loc 1 740 3 view .LVU171
 740:Core/Src/BLT/xcp.c ****   {
 599              		.loc 1 740 18 is_stmt 0 view .LVU172
 600 0004 FFF7FEFF 		bl	ComGetActiveInterfaceMaxRxLen
 601              	.LVL34:
 740:Core/Src/BLT/xcp.c ****   {
 602              		.loc 1 740 11 view .LVU173
 603 0008 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 740:Core/Src/BLT/xcp.c ****   {
 604              		.loc 1 740 6 view .LVU174
 605 000a 9042     		cmp	r0, r2
 606 000c 0FD9     		bls	.L40
 748:Core/Src/BLT/xcp.c ****   /* set the destination pointer */
 607              		.loc 1 748 3 is_stmt 1 view .LVU175
 608              	.LVL35:
 750:Core/Src/BLT/xcp.c **** 
 609              		.loc 1 750 3 view .LVU176
 775:Core/Src/BLT/xcp.c ****   #endif /* XCP_SEED_KEY_PROTECTION_EN == 1 */
 610              		.loc 1 775 3 view .LVU177
 775:Core/Src/BLT/xcp.c ****   #endif /* XCP_SEED_KEY_PROTECTION_EN == 1 */
 611              		.loc 1 775 49 is_stmt 0 view .LVU178
 612 000e 0A4D     		ldr	r5, .L41
 775:Core/Src/BLT/xcp.c ****   #endif /* XCP_SEED_KEY_PROTECTION_EN == 1 */
 613              		.loc 1 775 3 view .LVU179
 614 0010 A96C     		ldr	r1, [r5, #72]
 615 0012 681C     		adds	r0, r5, #1
 616 0014 FFF7FEFF 		bl	CpuMemCopy
 617              	.LVL36:
 783:Core/Src/BLT/xcp.c **** 
 618              		.loc 1 783 3 is_stmt 1 view .LVU180
 783:Core/Src/BLT/xcp.c **** 
 619              		.loc 1 783 22 is_stmt 0 view .LVU181
 620 0018 FF23     		movs	r3, #255
 621 001a 2B70     		strb	r3, [r5]
 786:Core/Src/BLT/xcp.c **** 
 622              		.loc 1 786 3 is_stmt 1 view .LVU182
 786:Core/Src/BLT/xcp.c **** 
 623              		.loc 1 786 10 is_stmt 0 view .LVU183
 624 001c AB6C     		ldr	r3, [r5, #72]
 786:Core/Src/BLT/xcp.c **** 
ARM GAS  /tmp/ccb89HYV.s 			page 39


 625              		.loc 1 786 22 view .LVU184
 626 001e 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 786:Core/Src/BLT/xcp.c **** 
 627              		.loc 1 786 15 view .LVU185
 628 0020 1344     		add	r3, r3, r2
 629 0022 AB64     		str	r3, [r5, #72]
 789:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdUpload ***/
 630              		.loc 1 789 3 is_stmt 1 view .LVU186
 789:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdUpload ***/
 631              		.loc 1 789 24 is_stmt 0 view .LVU187
 632 0024 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 789:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdUpload ***/
 633              		.loc 1 789 27 view .LVU188
 634 0026 0133     		adds	r3, r3, #1
 789:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdUpload ***/
 635              		.loc 1 789 18 view .LVU189
 636 0028 A5F84430 		strh	r3, [r5, #68]	@ movhi
 637              	.LVL37:
 638              	.L36:
 790:Core/Src/BLT/xcp.c **** 
 639              		.loc 1 790 1 view .LVU190
 640 002c 38BD     		pop	{r3, r4, r5, pc}
 641              	.LVL38:
 642              	.L40:
 743:Core/Src/BLT/xcp.c ****     return;
 643              		.loc 1 743 5 is_stmt 1 view .LVU191
 644 002e 2220     		movs	r0, #34
 645 0030 FFF7FEFF 		bl	XcpSetCtoError
 646              	.LVL39:
 744:Core/Src/BLT/xcp.c ****   }
 647              		.loc 1 744 5 view .LVU192
 648 0034 FAE7     		b	.L36
 649              	.L42:
 650 0036 00BF     		.align	2
 651              	.L41:
 652 0038 00000000 		.word	xcpInfo
 653              		.cfi_endproc
 654              	.LFE16:
 656              		.section	.text.XcpCmdShortUpload,"ax",%progbits
 657              		.align	1
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 662              	XcpCmdShortUpload:
 663              	.LVL40:
 664              	.LFB17:
 801:Core/Src/BLT/xcp.c ****   blt_int16u len;
 665              		.loc 1 801 1 view -0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 801:Core/Src/BLT/xcp.c ****   blt_int16u len;
 669              		.loc 1 801 1 is_stmt 0 view .LVU194
 670 0000 38B5     		push	{r3, r4, r5, lr}
 671              		.cfi_def_cfa_offset 16
 672              		.cfi_offset 3, -16
 673              		.cfi_offset 4, -12
ARM GAS  /tmp/ccb89HYV.s 			page 40


 674              		.cfi_offset 5, -8
 675              		.cfi_offset 14, -4
 676 0002 0446     		mov	r4, r0
 802:Core/Src/BLT/xcp.c ****   blt_int8u *destPtr;
 677              		.loc 1 802 3 is_stmt 1 view .LVU195
 803:Core/Src/BLT/xcp.c **** 
 678              		.loc 1 803 3 view .LVU196
 806:Core/Src/BLT/xcp.c ****   {
 679              		.loc 1 806 3 view .LVU197
 806:Core/Src/BLT/xcp.c ****   {
 680              		.loc 1 806 18 is_stmt 0 view .LVU198
 681 0004 FFF7FEFF 		bl	ComGetActiveInterfaceMaxRxLen
 682              	.LVL41:
 806:Core/Src/BLT/xcp.c ****   {
 683              		.loc 1 806 11 view .LVU199
 684 0008 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 806:Core/Src/BLT/xcp.c ****   {
 685              		.loc 1 806 6 view .LVU200
 686 000a 9842     		cmp	r0, r3
 687 000c 14D9     		bls	.L47
 814:Core/Src/BLT/xcp.c ****   /* read out the length of the requested upload operation */
 688              		.loc 1 814 3 is_stmt 1 view .LVU201
 814:Core/Src/BLT/xcp.c ****   /* read out the length of the requested upload operation */
 689              		.loc 1 814 17 is_stmt 0 view .LVU202
 690 000e 201D     		adds	r0, r4, #4
 691 0010 FFF7FEFF 		bl	XcpGetOrderedLong
 692              	.LVL42:
 693 0014 0146     		mov	r1, r0
 814:Core/Src/BLT/xcp.c ****   /* read out the length of the requested upload operation */
 694              		.loc 1 814 15 view .LVU203
 695 0016 0A4D     		ldr	r5, .L48
 696 0018 A864     		str	r0, [r5, #72]
 816:Core/Src/BLT/xcp.c ****   /* set the destination pointer */
 697              		.loc 1 816 3 is_stmt 1 view .LVU204
 698              	.LVL43:
 818:Core/Src/BLT/xcp.c **** 
 699              		.loc 1 818 3 view .LVU205
 843:Core/Src/BLT/xcp.c ****   #endif /* XCP_SEED_KEY_PROTECTION_EN == 1 */
 700              		.loc 1 843 3 view .LVU206
 701 001a 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 702 001c 681C     		adds	r0, r5, #1
 703 001e FFF7FEFF 		bl	CpuMemCopy
 704              	.LVL44:
 851:Core/Src/BLT/xcp.c **** 
 705              		.loc 1 851 3 view .LVU207
 851:Core/Src/BLT/xcp.c **** 
 706              		.loc 1 851 22 is_stmt 0 view .LVU208
 707 0022 FF23     		movs	r3, #255
 708 0024 2B70     		strb	r3, [r5]
 854:Core/Src/BLT/xcp.c **** 
 709              		.loc 1 854 3 is_stmt 1 view .LVU209
 854:Core/Src/BLT/xcp.c **** 
 710              		.loc 1 854 10 is_stmt 0 view .LVU210
 711 0026 AB6C     		ldr	r3, [r5, #72]
 854:Core/Src/BLT/xcp.c **** 
 712              		.loc 1 854 22 view .LVU211
 713 0028 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccb89HYV.s 			page 41


 854:Core/Src/BLT/xcp.c **** 
 714              		.loc 1 854 15 view .LVU212
 715 002a 1344     		add	r3, r3, r2
 716 002c AB64     		str	r3, [r5, #72]
 857:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdShortUpload ***/
 717              		.loc 1 857 3 is_stmt 1 view .LVU213
 857:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdShortUpload ***/
 718              		.loc 1 857 24 is_stmt 0 view .LVU214
 719 002e 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 857:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdShortUpload ***/
 720              		.loc 1 857 27 view .LVU215
 721 0030 0133     		adds	r3, r3, #1
 857:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdShortUpload ***/
 722              		.loc 1 857 18 view .LVU216
 723 0032 A5F84430 		strh	r3, [r5, #68]	@ movhi
 724              	.LVL45:
 725              	.L43:
 858:Core/Src/BLT/xcp.c **** 
 726              		.loc 1 858 1 view .LVU217
 727 0036 38BD     		pop	{r3, r4, r5, pc}
 728              	.LVL46:
 729              	.L47:
 809:Core/Src/BLT/xcp.c ****     return;
 730              		.loc 1 809 5 is_stmt 1 view .LVU218
 731 0038 2220     		movs	r0, #34
 732 003a FFF7FEFF 		bl	XcpSetCtoError
 733              	.LVL47:
 810:Core/Src/BLT/xcp.c ****   }
 734              		.loc 1 810 5 view .LVU219
 735 003e FAE7     		b	.L43
 736              	.L49:
 737              		.align	2
 738              	.L48:
 739 0040 00000000 		.word	xcpInfo
 740              		.cfi_endproc
 741              	.LFE17:
 743              		.section	.text.XcpComputeChecksum,"ax",%progbits
 744              		.align	1
 745              		.syntax unified
 746              		.thumb
 747              		.thumb_func
 749              	XcpComputeChecksum:
 750              	.LVL48:
 751              	.LFB5:
 358:Core/Src/BLT/xcp.c ****   blt_int8u cs = 0;
 752              		.loc 1 358 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 358:Core/Src/BLT/xcp.c ****   blt_int8u cs = 0;
 756              		.loc 1 358 1 is_stmt 0 view .LVU221
 757 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 758              		.cfi_def_cfa_offset 24
 759              		.cfi_offset 3, -24
 760              		.cfi_offset 4, -20
 761              		.cfi_offset 5, -16
 762              		.cfi_offset 6, -12
ARM GAS  /tmp/ccb89HYV.s 			page 42


 763              		.cfi_offset 7, -8
 764              		.cfi_offset 14, -4
 765 0002 0546     		mov	r5, r0
 766 0004 1746     		mov	r7, r2
 359:Core/Src/BLT/xcp.c **** 
 767              		.loc 1 359 3 is_stmt 1 view .LVU222
 768              	.LVL49:
 362:Core/Src/BLT/xcp.c ****   {
 769              		.loc 1 362 3 view .LVU223
 359:Core/Src/BLT/xcp.c **** 
 770              		.loc 1 359 13 is_stmt 0 view .LVU224
 771 0006 0024     		movs	r4, #0
 362:Core/Src/BLT/xcp.c ****   {
 772              		.loc 1 362 9 view .LVU225
 773 0008 06E0     		b	.L51
 774              	.LVL50:
 775              	.L52:
 365:Core/Src/BLT/xcp.c ****     /* increment address */
 776              		.loc 1 365 5 is_stmt 1 view .LVU226
 365:Core/Src/BLT/xcp.c ****     /* increment address */
 777              		.loc 1 365 11 is_stmt 0 view .LVU227
 778 000a 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
 779              	.LVL51:
 365:Core/Src/BLT/xcp.c ****     /* increment address */
 780              		.loc 1 365 8 view .LVU228
 781 000e 1C44     		add	r4, r4, r3
 782              	.LVL52:
 365:Core/Src/BLT/xcp.c ****     /* increment address */
 783              		.loc 1 365 8 view .LVU229
 784 0010 E4B2     		uxtb	r4, r4
 785              	.LVL53:
 367:Core/Src/BLT/xcp.c ****     /* service the watchdog */
 786              		.loc 1 367 5 is_stmt 1 view .LVU230
 369:Core/Src/BLT/xcp.c ****   }
 787              		.loc 1 369 5 view .LVU231
 788 0012 FFF7FEFF 		bl	CopService
 789              	.LVL54:
 362:Core/Src/BLT/xcp.c ****   {
 790              		.loc 1 362 16 is_stmt 0 view .LVU232
 791 0016 3146     		mov	r1, r6
 792              	.LVL55:
 793              	.L51:
 362:Core/Src/BLT/xcp.c ****   {
 794              		.loc 1 362 19 is_stmt 1 view .LVU233
 362:Core/Src/BLT/xcp.c ****   {
 795              		.loc 1 362 16 is_stmt 0 view .LVU234
 796 0018 4E1E     		subs	r6, r1, #1
 797              	.LVL56:
 362:Core/Src/BLT/xcp.c ****   {
 798              		.loc 1 362 19 view .LVU235
 799 001a 0029     		cmp	r1, #0
 800 001c F5D1     		bne	.L52
 372:Core/Src/BLT/xcp.c ****   /* inform the caller of the uses checksum computation algorithm */
 801              		.loc 1 372 3 is_stmt 1 view .LVU236
 372:Core/Src/BLT/xcp.c ****   /* inform the caller of the uses checksum computation algorithm */
 802              		.loc 1 372 13 is_stmt 0 view .LVU237
 803 001e 3C60     		str	r4, [r7]
ARM GAS  /tmp/ccb89HYV.s 			page 43


 374:Core/Src/BLT/xcp.c **** } /*** end of XcpComputeChecksum ***/
 804              		.loc 1 374 3 is_stmt 1 view .LVU238
 375:Core/Src/BLT/xcp.c **** 
 805              		.loc 1 375 1 is_stmt 0 view .LVU239
 806 0020 0120     		movs	r0, #1
 807 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 375:Core/Src/BLT/xcp.c **** 
 808              		.loc 1 375 1 view .LVU240
 809              		.cfi_endproc
 810              	.LFE5:
 812              		.section	.text.XcpCmdBuildCheckSum,"ax",%progbits
 813              		.align	1
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 818              	XcpCmdBuildCheckSum:
 819              	.LVL57:
 820              	.LFB18:
 945:Core/Src/BLT/xcp.c ****   blt_int32u checksumLen;
 821              		.loc 1 945 1 is_stmt 1 view -0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 8
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 945:Core/Src/BLT/xcp.c ****   blt_int32u checksumLen;
 825              		.loc 1 945 1 is_stmt 0 view .LVU242
 826 0000 30B5     		push	{r4, r5, lr}
 827              		.cfi_def_cfa_offset 12
 828              		.cfi_offset 4, -12
 829              		.cfi_offset 5, -8
 830              		.cfi_offset 14, -4
 831 0002 83B0     		sub	sp, sp, #12
 832              		.cfi_def_cfa_offset 24
 946:Core/Src/BLT/xcp.c ****   blt_int32u checksumVal = 0;
 833              		.loc 1 946 3 is_stmt 1 view .LVU243
 947:Core/Src/BLT/xcp.c ****   blt_int8u  checksumType;
 834              		.loc 1 947 3 view .LVU244
 947:Core/Src/BLT/xcp.c ****   blt_int8u  checksumType;
 835              		.loc 1 947 14 is_stmt 0 view .LVU245
 836 0004 0025     		movs	r5, #0
 837 0006 0195     		str	r5, [sp, #4]
 948:Core/Src/BLT/xcp.c ****   
 838              		.loc 1 948 3 is_stmt 1 view .LVU246
 951:Core/Src/BLT/xcp.c **** 
 839              		.loc 1 951 3 view .LVU247
 951:Core/Src/BLT/xcp.c **** 
 840              		.loc 1 951 22 is_stmt 0 view .LVU248
 841 0008 0B4C     		ldr	r4, .L56
 842 000a FF23     		movs	r3, #255
 843 000c 2370     		strb	r3, [r4]
 954:Core/Src/BLT/xcp.c ****   checksumType = XcpComputeChecksum(xcpInfo.mta, checksumLen, &checksumVal);
 844              		.loc 1 954 3 is_stmt 1 view .LVU249
 954:Core/Src/BLT/xcp.c ****   checksumType = XcpComputeChecksum(xcpInfo.mta, checksumLen, &checksumVal);
 845              		.loc 1 954 17 is_stmt 0 view .LVU250
 846 000e 0430     		adds	r0, r0, #4
 847              	.LVL58:
 954:Core/Src/BLT/xcp.c ****   checksumType = XcpComputeChecksum(xcpInfo.mta, checksumLen, &checksumVal);
 848              		.loc 1 954 17 view .LVU251
ARM GAS  /tmp/ccb89HYV.s 			page 44


 849 0010 FFF7FEFF 		bl	XcpGetOrderedLong
 850              	.LVL59:
 954:Core/Src/BLT/xcp.c ****   checksumType = XcpComputeChecksum(xcpInfo.mta, checksumLen, &checksumVal);
 851              		.loc 1 954 17 view .LVU252
 852 0014 0146     		mov	r1, r0
 853              	.LVL60:
 955:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = checksumType;
 854              		.loc 1 955 3 is_stmt 1 view .LVU253
 955:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = checksumType;
 855              		.loc 1 955 18 is_stmt 0 view .LVU254
 856 0016 01AA     		add	r2, sp, #4
 857 0018 A06C     		ldr	r0, [r4, #72]
 858              	.LVL61:
 955:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[1] = checksumType;
 859              		.loc 1 955 18 view .LVU255
 860 001a FFF7FEFF 		bl	XcpComputeChecksum
 861              	.LVL62:
 956:Core/Src/BLT/xcp.c ****   XcpSetOrderedLong(checksumVal, &xcpInfo.ctoData[4]);
 862              		.loc 1 956 3 is_stmt 1 view .LVU256
 956:Core/Src/BLT/xcp.c ****   XcpSetOrderedLong(checksumVal, &xcpInfo.ctoData[4]);
 863              		.loc 1 956 22 is_stmt 0 view .LVU257
 864 001e 6070     		strb	r0, [r4, #1]
 957:Core/Src/BLT/xcp.c **** 
 865              		.loc 1 957 3 is_stmt 1 view .LVU258
 866 0020 211D     		adds	r1, r4, #4
 867 0022 0198     		ldr	r0, [sp, #4]
 868              	.LVL63:
 957:Core/Src/BLT/xcp.c **** 
 869              		.loc 1 957 3 is_stmt 0 view .LVU259
 870 0024 FFF7FEFF 		bl	XcpSetOrderedLong
 871              	.LVL64:
 960:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[3] = 0;
 872              		.loc 1 960 3 is_stmt 1 view .LVU260
 960:Core/Src/BLT/xcp.c ****   xcpInfo.ctoData[3] = 0;
 873              		.loc 1 960 22 is_stmt 0 view .LVU261
 874 0028 A570     		strb	r5, [r4, #2]
 961:Core/Src/BLT/xcp.c **** 
 875              		.loc 1 961 3 is_stmt 1 view .LVU262
 961:Core/Src/BLT/xcp.c **** 
 876              		.loc 1 961 22 is_stmt 0 view .LVU263
 877 002a E570     		strb	r5, [r4, #3]
 964:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdBuildCheckSum ***/
 878              		.loc 1 964 3 is_stmt 1 view .LVU264
 964:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdBuildCheckSum ***/
 879              		.loc 1 964 18 is_stmt 0 view .LVU265
 880 002c 0823     		movs	r3, #8
 881 002e A4F84430 		strh	r3, [r4, #68]	@ movhi
 965:Core/Src/BLT/xcp.c **** 
 882              		.loc 1 965 1 view .LVU266
 883 0032 03B0     		add	sp, sp, #12
 884              		.cfi_def_cfa_offset 12
 885              		@ sp needed
 886 0034 30BD     		pop	{r4, r5, pc}
 887              	.L57:
 888 0036 00BF     		.align	2
 889              	.L56:
 890 0038 00000000 		.word	xcpInfo
ARM GAS  /tmp/ccb89HYV.s 			page 45


 891              		.cfi_endproc
 892              	.LFE18:
 894              		.section	.text.XcpCmdProgramMax,"ax",%progbits
 895              		.align	1
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
 900              	XcpCmdProgramMax:
 901              	.LVL65:
 902              	.LFB20:
1311:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 903              		.loc 1 1311 1 is_stmt 1 view -0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
1311:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 907              		.loc 1 1311 1 is_stmt 0 view .LVU268
 908 0000 38B5     		push	{r3, r4, r5, lr}
 909              		.cfi_def_cfa_offset 16
 910              		.cfi_offset 3, -16
 911              		.cfi_offset 4, -12
 912              		.cfi_offset 5, -8
 913              		.cfi_offset 14, -4
 914 0002 0446     		mov	r4, r0
1323:Core/Src/BLT/xcp.c ****   {
 915              		.loc 1 1323 3 is_stmt 1 view .LVU269
1323:Core/Src/BLT/xcp.c ****   {
 916              		.loc 1 1323 33 is_stmt 0 view .LVU270
 917 0004 0D4B     		ldr	r3, .L63
 918 0006 9D6C     		ldr	r5, [r3, #72]
1323:Core/Src/BLT/xcp.c ****   {
 919              		.loc 1 1323 39 view .LVU271
 920 0008 FFF7FEFF 		bl	ComGetActiveInterfaceMaxRxLen
 921              	.LVL66:
1323:Core/Src/BLT/xcp.c ****   {
 922              		.loc 1 1323 7 view .LVU272
 923 000c 621C     		adds	r2, r4, #1
 924 000e 411E     		subs	r1, r0, #1
 925 0010 2846     		mov	r0, r5
 926 0012 FFF7FEFF 		bl	NvmWrite
 927              	.LVL67:
1323:Core/Src/BLT/xcp.c ****   {
 928              		.loc 1 1323 6 view .LVU273
 929 0016 60B1     		cbz	r0, .L62
1331:Core/Src/BLT/xcp.c **** 
 930              		.loc 1 1331 3 is_stmt 1 view .LVU274
1331:Core/Src/BLT/xcp.c **** 
 931              		.loc 1 1331 22 is_stmt 0 view .LVU275
 932 0018 084C     		ldr	r4, .L63
 933              	.LVL68:
1331:Core/Src/BLT/xcp.c **** 
 934              		.loc 1 1331 22 view .LVU276
 935 001a FF23     		movs	r3, #255
 936 001c 2370     		strb	r3, [r4]
1334:Core/Src/BLT/xcp.c **** 
 937              		.loc 1 1334 3 is_stmt 1 view .LVU277
1334:Core/Src/BLT/xcp.c **** 
ARM GAS  /tmp/ccb89HYV.s 			page 46


 938              		.loc 1 1334 18 is_stmt 0 view .LVU278
 939 001e FFF7FEFF 		bl	ComGetActiveInterfaceMaxRxLen
 940              	.LVL69:
1334:Core/Src/BLT/xcp.c **** 
 941              		.loc 1 1334 10 view .LVU279
 942 0022 A36C     		ldr	r3, [r4, #72]
1334:Core/Src/BLT/xcp.c **** 
 943              		.loc 1 1334 36 view .LVU280
 944 0024 0138     		subs	r0, r0, #1
1334:Core/Src/BLT/xcp.c **** 
 945              		.loc 1 1334 15 view .LVU281
 946 0026 0344     		add	r3, r3, r0
 947 0028 A364     		str	r3, [r4, #72]
1337:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramMax ***/
 948              		.loc 1 1337 3 is_stmt 1 view .LVU282
1337:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramMax ***/
 949              		.loc 1 1337 18 is_stmt 0 view .LVU283
 950 002a 0123     		movs	r3, #1
 951 002c A4F84430 		strh	r3, [r4, #68]	@ movhi
 952              	.L58:
1338:Core/Src/BLT/xcp.c **** 
 953              		.loc 1 1338 1 view .LVU284
 954 0030 38BD     		pop	{r3, r4, r5, pc}
 955              	.LVL70:
 956              	.L62:
1326:Core/Src/BLT/xcp.c ****     return;
 957              		.loc 1 1326 5 is_stmt 1 view .LVU285
 958 0032 3120     		movs	r0, #49
 959 0034 FFF7FEFF 		bl	XcpSetCtoError
 960              	.LVL71:
1327:Core/Src/BLT/xcp.c ****   }
 961              		.loc 1 1327 5 view .LVU286
 962 0038 FAE7     		b	.L58
 963              	.L64:
 964 003a 00BF     		.align	2
 965              	.L63:
 966 003c 00000000 		.word	xcpInfo
 967              		.cfi_endproc
 968              	.LFE20:
 970              		.section	.text.XcpCmdProgram,"ax",%progbits
 971              		.align	1
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 976              	XcpCmdProgram:
 977              	.LVL72:
 978              	.LFB21:
1349:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 979              		.loc 1 1349 1 view -0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
1349:Core/Src/BLT/xcp.c **** #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 983              		.loc 1 1349 1 is_stmt 0 view .LVU288
 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
ARM GAS  /tmp/ccb89HYV.s 			page 47


 987              		.cfi_offset 14, -4
 988 0002 0446     		mov	r4, r0
1361:Core/Src/BLT/xcp.c ****   {
 989              		.loc 1 1361 3 is_stmt 1 view .LVU289
1361:Core/Src/BLT/xcp.c ****   {
 990              		.loc 1 1361 18 is_stmt 0 view .LVU290
 991 0004 FFF7FEFF 		bl	ComGetActiveInterfaceMaxRxLen
 992              	.LVL73:
1361:Core/Src/BLT/xcp.c ****   {
 993              		.loc 1 1361 15 view .LVU291
 994 0008 0138     		subs	r0, r0, #1
1361:Core/Src/BLT/xcp.c ****   {
 995              		.loc 1 1361 11 view .LVU292
 996 000a 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
1361:Core/Src/BLT/xcp.c ****   {
 997              		.loc 1 1361 6 view .LVU293
 998 000c 9842     		cmp	r0, r3
 999 000e 13DD     		ble	.L72
1369:Core/Src/BLT/xcp.c **** 
 1000              		.loc 1 1369 3 is_stmt 1 view .LVU294
1369:Core/Src/BLT/xcp.c **** 
 1001              		.loc 1 1369 22 is_stmt 0 view .LVU295
 1002 0010 114B     		ldr	r3, .L75
 1003 0012 FF22     		movs	r2, #255
 1004 0014 1A70     		strb	r2, [r3]
1372:Core/Src/BLT/xcp.c **** 
 1005              		.loc 1 1372 3 is_stmt 1 view .LVU296
1372:Core/Src/BLT/xcp.c **** 
 1006              		.loc 1 1372 18 is_stmt 0 view .LVU297
 1007 0016 0122     		movs	r2, #1
 1008 0018 A3F84420 		strh	r2, [r3, #68]	@ movhi
1375:Core/Src/BLT/xcp.c ****   {
 1009              		.loc 1 1375 3 is_stmt 1 view .LVU298
1375:Core/Src/BLT/xcp.c ****   {
 1010              		.loc 1 1375 11 is_stmt 0 view .LVU299
 1011 001c 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
1375:Core/Src/BLT/xcp.c ****   {
 1012              		.loc 1 1375 6 view .LVU300
 1013 001e 79B1     		cbz	r1, .L73
1386:Core/Src/BLT/xcp.c ****   {
 1014              		.loc 1 1386 3 is_stmt 1 view .LVU301
1386:Core/Src/BLT/xcp.c ****   {
 1015              		.loc 1 1386 7 is_stmt 0 view .LVU302
 1016 0020 A21C     		adds	r2, r4, #2
 1017 0022 0D4B     		ldr	r3, .L75
 1018 0024 986C     		ldr	r0, [r3, #72]
 1019 0026 FFF7FEFF 		bl	NvmWrite
 1020              	.LVL74:
1386:Core/Src/BLT/xcp.c ****   {
 1021              		.loc 1 1386 6 view .LVU303
 1022 002a 88B1     		cbz	r0, .L74
1394:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgram ***/
 1023              		.loc 1 1394 3 is_stmt 1 view .LVU304
1394:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgram ***/
 1024              		.loc 1 1394 10 is_stmt 0 view .LVU305
 1025 002c 0A4A     		ldr	r2, .L75
 1026 002e 936C     		ldr	r3, [r2, #72]
ARM GAS  /tmp/ccb89HYV.s 			page 48


1394:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgram ***/
 1027              		.loc 1 1394 22 view .LVU306
 1028 0030 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
1394:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgram ***/
 1029              		.loc 1 1394 15 view .LVU307
 1030 0032 0B44     		add	r3, r3, r1
 1031 0034 9364     		str	r3, [r2, #72]
 1032              	.L65:
1395:Core/Src/BLT/xcp.c **** 
 1033              		.loc 1 1395 1 view .LVU308
 1034 0036 10BD     		pop	{r4, pc}
 1035              	.LVL75:
 1036              	.L72:
1364:Core/Src/BLT/xcp.c ****     return;
 1037              		.loc 1 1364 5 is_stmt 1 view .LVU309
 1038 0038 2220     		movs	r0, #34
 1039 003a FFF7FEFF 		bl	XcpSetCtoError
 1040              	.LVL76:
1365:Core/Src/BLT/xcp.c ****   }
 1041              		.loc 1 1365 5 view .LVU310
 1042 003e FAE7     		b	.L65
 1043              	.L73:
1378:Core/Src/BLT/xcp.c ****     {
 1044              		.loc 1 1378 5 view .LVU311
1378:Core/Src/BLT/xcp.c ****     {
 1045              		.loc 1 1378 9 is_stmt 0 view .LVU312
 1046 0040 FFF7FEFF 		bl	NvmDone
 1047              	.LVL77:
1378:Core/Src/BLT/xcp.c ****     {
 1048              		.loc 1 1378 8 view .LVU313
 1049 0044 0028     		cmp	r0, #0
 1050 0046 F6D1     		bne	.L65
1381:Core/Src/BLT/xcp.c ****     }
 1051              		.loc 1 1381 7 is_stmt 1 view .LVU314
 1052 0048 3120     		movs	r0, #49
 1053 004a FFF7FEFF 		bl	XcpSetCtoError
 1054              	.LVL78:
1383:Core/Src/BLT/xcp.c ****   }
 1055              		.loc 1 1383 5 view .LVU315
 1056 004e F2E7     		b	.L65
 1057              	.L74:
1389:Core/Src/BLT/xcp.c ****     return;
 1058              		.loc 1 1389 5 view .LVU316
 1059 0050 3120     		movs	r0, #49
 1060 0052 FFF7FEFF 		bl	XcpSetCtoError
 1061              	.LVL79:
1390:Core/Src/BLT/xcp.c ****   }
 1062              		.loc 1 1390 5 view .LVU317
 1063 0056 EEE7     		b	.L65
 1064              	.L76:
 1065              		.align	2
 1066              	.L75:
 1067 0058 00000000 		.word	xcpInfo
 1068              		.cfi_endproc
 1069              	.LFE21:
 1071              		.section	.text.XcpCmdProgramClear,"ax",%progbits
 1072              		.align	1
ARM GAS  /tmp/ccb89HYV.s 			page 49


 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1077              	XcpCmdProgramClear:
 1078              	.LVL80:
 1079              	.LFB22:
1406:Core/Src/BLT/xcp.c ****   blt_int32u eraseLen;
 1080              		.loc 1 1406 1 view -0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 0
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
1406:Core/Src/BLT/xcp.c ****   blt_int32u eraseLen;
 1084              		.loc 1 1406 1 is_stmt 0 view .LVU319
 1085 0000 10B5     		push	{r4, lr}
 1086              		.cfi_def_cfa_offset 8
 1087              		.cfi_offset 4, -8
 1088              		.cfi_offset 14, -4
1407:Core/Src/BLT/xcp.c ****   blt_addr   eraseAddr;
 1089              		.loc 1 1407 3 is_stmt 1 view .LVU320
1408:Core/Src/BLT/xcp.c ****   
 1090              		.loc 1 1408 3 view .LVU321
1421:Core/Src/BLT/xcp.c ****   eraseLen = XcpGetOrderedLong(&data[4]);
 1091              		.loc 1 1421 3 view .LVU322
1421:Core/Src/BLT/xcp.c ****   eraseLen = XcpGetOrderedLong(&data[4]);
 1092              		.loc 1 1421 13 is_stmt 0 view .LVU323
 1093 0002 0A4B     		ldr	r3, .L82
 1094 0004 9C6C     		ldr	r4, [r3, #72]
 1095              	.LVL81:
1422:Core/Src/BLT/xcp.c ****   if (NvmErase(eraseAddr, eraseLen) == BLT_FALSE)
 1096              		.loc 1 1422 3 is_stmt 1 view .LVU324
1422:Core/Src/BLT/xcp.c ****   if (NvmErase(eraseAddr, eraseLen) == BLT_FALSE)
 1097              		.loc 1 1422 14 is_stmt 0 view .LVU325
 1098 0006 0430     		adds	r0, r0, #4
 1099              	.LVL82:
1422:Core/Src/BLT/xcp.c ****   if (NvmErase(eraseAddr, eraseLen) == BLT_FALSE)
 1100              		.loc 1 1422 14 view .LVU326
 1101 0008 FFF7FEFF 		bl	XcpGetOrderedLong
 1102              	.LVL83:
1422:Core/Src/BLT/xcp.c ****   if (NvmErase(eraseAddr, eraseLen) == BLT_FALSE)
 1103              		.loc 1 1422 14 view .LVU327
 1104 000c 0146     		mov	r1, r0
 1105              	.LVL84:
1423:Core/Src/BLT/xcp.c ****   {
 1106              		.loc 1 1423 3 is_stmt 1 view .LVU328
1423:Core/Src/BLT/xcp.c ****   {
 1107              		.loc 1 1423 7 is_stmt 0 view .LVU329
 1108 000e 2046     		mov	r0, r4
 1109              	.LVL85:
1423:Core/Src/BLT/xcp.c ****   {
 1110              		.loc 1 1423 7 view .LVU330
 1111 0010 FFF7FEFF 		bl	NvmErase
 1112              	.LVL86:
1423:Core/Src/BLT/xcp.c ****   {
 1113              		.loc 1 1423 6 view .LVU331
 1114 0014 30B1     		cbz	r0, .L81
1431:Core/Src/BLT/xcp.c **** 
 1115              		.loc 1 1431 3 is_stmt 1 view .LVU332
ARM GAS  /tmp/ccb89HYV.s 			page 50


1431:Core/Src/BLT/xcp.c **** 
 1116              		.loc 1 1431 22 is_stmt 0 view .LVU333
 1117 0016 054B     		ldr	r3, .L82
 1118 0018 FF22     		movs	r2, #255
 1119 001a 1A70     		strb	r2, [r3]
1434:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramClear ***/
 1120              		.loc 1 1434 3 is_stmt 1 view .LVU334
1434:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramClear ***/
 1121              		.loc 1 1434 18 is_stmt 0 view .LVU335
 1122 001c 0122     		movs	r2, #1
 1123 001e A3F84420 		strh	r2, [r3, #68]	@ movhi
 1124              	.L77:
1435:Core/Src/BLT/xcp.c **** 
 1125              		.loc 1 1435 1 view .LVU336
 1126 0022 10BD     		pop	{r4, pc}
 1127              	.LVL87:
 1128              	.L81:
1426:Core/Src/BLT/xcp.c ****     return;
 1129              		.loc 1 1426 5 is_stmt 1 view .LVU337
 1130 0024 3120     		movs	r0, #49
 1131 0026 FFF7FEFF 		bl	XcpSetCtoError
 1132              	.LVL88:
1427:Core/Src/BLT/xcp.c ****   }
 1133              		.loc 1 1427 5 view .LVU338
 1134 002a FAE7     		b	.L77
 1135              	.L83:
 1136              		.align	2
 1137              	.L82:
 1138 002c 00000000 		.word	xcpInfo
 1139              		.cfi_endproc
 1140              	.LFE22:
 1142              		.section	.text.XcpCmdProgramReset,"ax",%progbits
 1143              		.align	1
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1148              	XcpCmdProgramReset:
 1149              	.LVL89:
 1150              	.LFB23:
1446:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
 1151              		.loc 1 1446 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 0
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
1446:Core/Src/BLT/xcp.c ****   /* suppress compiler warning for unused parameter */
 1155              		.loc 1 1446 1 is_stmt 0 view .LVU340
 1156 0000 08B5     		push	{r3, lr}
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 3, -8
 1159              		.cfi_offset 14, -4
1448:Core/Src/BLT/xcp.c **** 
 1160              		.loc 1 1448 3 is_stmt 1 view .LVU341
1463:Core/Src/BLT/xcp.c **** 
 1161              		.loc 1 1463 3 view .LVU342
 1162 0002 FFF7FEFF 		bl	CpuStartUserProgram
 1163              	.LVL90:
1466:Core/Src/BLT/xcp.c **** 
ARM GAS  /tmp/ccb89HYV.s 			page 51


 1164              		.loc 1 1466 3 view .LVU343
1466:Core/Src/BLT/xcp.c **** 
 1165              		.loc 1 1466 22 is_stmt 0 view .LVU344
 1166 0006 034B     		ldr	r3, .L86
 1167 0008 FF22     		movs	r2, #255
 1168 000a 1A70     		strb	r2, [r3]
1469:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramReset ***/
 1169              		.loc 1 1469 3 is_stmt 1 view .LVU345
1469:Core/Src/BLT/xcp.c **** } /*** end of XcpCmdProgramReset ***/
 1170              		.loc 1 1469 18 is_stmt 0 view .LVU346
 1171 000c 0122     		movs	r2, #1
 1172 000e A3F84420 		strh	r2, [r3, #68]	@ movhi
1470:Core/Src/BLT/xcp.c **** 
 1173              		.loc 1 1470 1 view .LVU347
 1174 0012 08BD     		pop	{r3, pc}
 1175              	.L87:
 1176              		.align	2
 1177              	.L86:
 1178 0014 00000000 		.word	xcpInfo
 1179              		.cfi_endproc
 1180              	.LFE23:
 1182              		.section	.text.XcpTransmitPacket,"ax",%progbits
 1183              		.align	1
 1184              		.syntax unified
 1185              		.thumb
 1186              		.thumb_func
 1188              	XcpTransmitPacket:
 1189              	.LVL91:
 1190              	.LFB4:
 336:Core/Src/BLT/xcp.c ****   /* submit packet to the communication interface for transmission */
 1191              		.loc 1 336 1 is_stmt 1 view -0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 336:Core/Src/BLT/xcp.c ****   /* submit packet to the communication interface for transmission */
 1195              		.loc 1 336 1 is_stmt 0 view .LVU349
 1196 0000 08B5     		push	{r3, lr}
 1197              		.cfi_def_cfa_offset 8
 1198              		.cfi_offset 3, -8
 1199              		.cfi_offset 14, -4
 341:Core/Src/BLT/xcp.c **** #endif
 1200              		.loc 1 341 3 is_stmt 1 view .LVU350
 1201 0002 89B2     		uxth	r1, r1
 341:Core/Src/BLT/xcp.c **** #endif
 1202              		.loc 1 341 3 is_stmt 0 view .LVU351
 1203 0004 FFF7FEFF 		bl	ComTransmitPacket
 1204              	.LVL92:
 344:Core/Src/BLT/xcp.c **** 
 1205              		.loc 1 344 1 view .LVU352
 1206 0008 08BD     		pop	{r3, pc}
 1207              		.cfi_endproc
 1208              	.LFE4:
 1210              		.section	.text.XcpInit,"ax",%progbits
 1211              		.align	1
 1212              		.global	XcpInit
 1213              		.syntax unified
 1214              		.thumb
ARM GAS  /tmp/ccb89HYV.s 			page 52


 1215              		.thumb_func
 1217              	XcpInit:
 1218              	.LFB0:
 156:Core/Src/BLT/xcp.c ****   /* reset xcp module info */
 1219              		.loc 1 156 1 is_stmt 1 view -0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 1223              		@ link register save eliminated.
 158:Core/Src/BLT/xcp.c ****   xcpInfo.mta = 0;
 1224              		.loc 1 158 3 view .LVU354
 158:Core/Src/BLT/xcp.c ****   xcpInfo.mta = 0;
 1225              		.loc 1 158 21 is_stmt 0 view .LVU355
 1226 0000 064B     		ldr	r3, .L91
 1227 0002 0022     		movs	r2, #0
 1228 0004 83F84020 		strb	r2, [r3, #64]
 159:Core/Src/BLT/xcp.c ****   xcpInfo.ctoPending = 0;
 1229              		.loc 1 159 3 is_stmt 1 view .LVU356
 159:Core/Src/BLT/xcp.c ****   xcpInfo.ctoPending = 0;
 1230              		.loc 1 159 15 is_stmt 0 view .LVU357
 1231 0008 9A64     		str	r2, [r3, #72]
 160:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 0;
 1232              		.loc 1 160 3 is_stmt 1 view .LVU358
 160:Core/Src/BLT/xcp.c ****   xcpInfo.ctoLen = 0;
 1233              		.loc 1 160 22 is_stmt 0 view .LVU359
 1234 000a 83F84320 		strb	r2, [r3, #67]
 161:Core/Src/BLT/xcp.c ****   xcpInfo.s_n_k_resource = 0;
 1235              		.loc 1 161 3 is_stmt 1 view .LVU360
 161:Core/Src/BLT/xcp.c ****   xcpInfo.s_n_k_resource = 0;
 1236              		.loc 1 161 18 is_stmt 0 view .LVU361
 1237 000e A3F84420 		strh	r2, [r3, #68]	@ movhi
 162:Core/Src/BLT/xcp.c ****   xcpInfo.protection = 0;
 1238              		.loc 1 162 3 is_stmt 1 view .LVU362
 162:Core/Src/BLT/xcp.c ****   xcpInfo.protection = 0;
 1239              		.loc 1 162 26 is_stmt 0 view .LVU363
 1240 0012 83F84220 		strb	r2, [r3, #66]
 163:Core/Src/BLT/xcp.c **** } /*** end of XcpInit ***/
 1241              		.loc 1 163 3 is_stmt 1 view .LVU364
 163:Core/Src/BLT/xcp.c **** } /*** end of XcpInit ***/
 1242              		.loc 1 163 22 is_stmt 0 view .LVU365
 1243 0016 83F84120 		strb	r2, [r3, #65]
 164:Core/Src/BLT/xcp.c **** 
 1244              		.loc 1 164 1 view .LVU366
 1245 001a 7047     		bx	lr
 1246              	.L92:
 1247              		.align	2
 1248              	.L91:
 1249 001c 00000000 		.word	xcpInfo
 1250              		.cfi_endproc
 1251              	.LFE0:
 1253              		.section	.text.XcpIsConnected,"ax",%progbits
 1254              		.align	1
 1255              		.global	XcpIsConnected
 1256              		.syntax unified
 1257              		.thumb
 1258              		.thumb_func
 1260              	XcpIsConnected:
ARM GAS  /tmp/ccb89HYV.s 			page 53


 1261              	.LFB1:
 173:Core/Src/BLT/xcp.c ****   if (xcpInfo.connected == 0)
 1262              		.loc 1 173 1 is_stmt 1 view -0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 0, uses_anonymous_args = 0
 1266              		@ link register save eliminated.
 174:Core/Src/BLT/xcp.c ****   {
 1267              		.loc 1 174 3 view .LVU368
 174:Core/Src/BLT/xcp.c ****   {
 1268              		.loc 1 174 14 is_stmt 0 view .LVU369
 1269 0000 024B     		ldr	r3, .L95
 1270 0002 93F84000 		ldrb	r0, [r3, #64]	@ zero_extendqisi2
 174:Core/Src/BLT/xcp.c ****   {
 1271              		.loc 1 174 6 view .LVU370
 1272 0006 00B1     		cbz	r0, .L94
 178:Core/Src/BLT/xcp.c **** } /*** end of XcpIsConnected ***/
 1273              		.loc 1 178 10 view .LVU371
 1274 0008 0120     		movs	r0, #1
 1275              	.L94:
 179:Core/Src/BLT/xcp.c **** 
 1276              		.loc 1 179 1 view .LVU372
 1277 000a 7047     		bx	lr
 1278              	.L96:
 1279              		.align	2
 1280              	.L95:
 1281 000c 00000000 		.word	xcpInfo
 1282              		.cfi_endproc
 1283              	.LFE1:
 1285              		.section	.text.XcpPacketTransmitted,"ax",%progbits
 1286              		.align	1
 1287              		.global	XcpPacketTransmitted
 1288              		.syntax unified
 1289              		.thumb
 1290              		.thumb_func
 1292              	XcpPacketTransmitted:
 1293              	.LFB2:
 189:Core/Src/BLT/xcp.c ****   /* reset packet transmission pending flag */
 1294              		.loc 1 189 1 is_stmt 1 view -0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 1298              		@ link register save eliminated.
 191:Core/Src/BLT/xcp.c **** } /*** end of XcpPacketTransmitted ***/
 1299              		.loc 1 191 3 view .LVU374
 191:Core/Src/BLT/xcp.c **** } /*** end of XcpPacketTransmitted ***/
 1300              		.loc 1 191 22 is_stmt 0 view .LVU375
 1301 0000 024B     		ldr	r3, .L98
 1302 0002 0022     		movs	r2, #0
 1303 0004 83F84320 		strb	r2, [r3, #67]
 192:Core/Src/BLT/xcp.c **** 
 1304              		.loc 1 192 1 view .LVU376
 1305 0008 7047     		bx	lr
 1306              	.L99:
 1307 000a 00BF     		.align	2
 1308              	.L98:
 1309 000c 00000000 		.word	xcpInfo
ARM GAS  /tmp/ccb89HYV.s 			page 54


 1310              		.cfi_endproc
 1311              	.LFE2:
 1313              		.section	.text.XcpPacketReceived,"ax",%progbits
 1314              		.align	1
 1315              		.global	XcpPacketReceived
 1316              		.syntax unified
 1317              		.thumb
 1318              		.thumb_func
 1320              	XcpPacketReceived:
 1321              	.LVL93:
 1322              	.LFB3:
 203:Core/Src/BLT/xcp.c **** 
 1323              		.loc 1 203 1 is_stmt 1 view -0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 203:Core/Src/BLT/xcp.c **** 
 1327              		.loc 1 203 1 is_stmt 0 view .LVU378
 1328 0000 08B5     		push	{r3, lr}
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 3, -8
 1331              		.cfi_offset 14, -4
 207:Core/Src/BLT/xcp.c **** #else
 1332              		.loc 1 207 3 is_stmt 1 view .LVU379
 220:Core/Src/BLT/xcp.c ****   {
 1333              		.loc 1 220 3 view .LVU380
 220:Core/Src/BLT/xcp.c ****   {
 1334              		.loc 1 220 11 is_stmt 0 view .LVU381
 1335 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 220:Core/Src/BLT/xcp.c ****   {
 1336              		.loc 1 220 6 view .LVU382
 1337 0004 FF2B     		cmp	r3, #255
 1338 0006 24D0     		beq	.L122
 226:Core/Src/BLT/xcp.c ****   {
 1339              		.loc 1 226 8 is_stmt 1 view .LVU383
 226:Core/Src/BLT/xcp.c ****   {
 1340              		.loc 1 226 19 is_stmt 0 view .LVU384
 1341 0008 354A     		ldr	r2, .L125
 1342 000a 92F84020 		ldrb	r2, [r2, #64]	@ zero_extendqisi2
 226:Core/Src/BLT/xcp.c ****   {
 1343              		.loc 1 226 11 view .LVU385
 1344 000e 012A     		cmp	r2, #1
 1345 0010 2BD1     		bne	.L100
 228:Core/Src/BLT/xcp.c ****     {
 1346              		.loc 1 228 5 is_stmt 1 view .LVU386
 1347 0012 C93B     		subs	r3, r3, #201
 1348 0014 352B     		cmp	r3, #53
 1349 0016 53D8     		bhi	.L104
 1350 0018 DFE803F0 		tbb	[pc, r3]
 1351              	.L106:
 1352 001c 40       		.byte	(.L119-.L106)/2
 1353 001d 52       		.byte	(.L104-.L106)/2
 1354 001e 52       		.byte	(.L104-.L106)/2
 1355 001f 4F       		.byte	(.L118-.L106)/2
 1356 0020 52       		.byte	(.L104-.L106)/2
 1357 0021 52       		.byte	(.L104-.L106)/2
 1358 0022 4C       		.byte	(.L117-.L106)/2
ARM GAS  /tmp/ccb89HYV.s 			page 55


 1359 0023 43       		.byte	(.L116-.L106)/2
 1360 0024 49       		.byte	(.L115-.L106)/2
 1361 0025 46       		.byte	(.L114-.L106)/2
 1362 0026 52       		.byte	(.L104-.L106)/2
 1363 0027 52       		.byte	(.L104-.L106)/2
 1364 0028 52       		.byte	(.L104-.L106)/2
 1365 0029 52       		.byte	(.L104-.L106)/2
 1366 002a 52       		.byte	(.L104-.L106)/2
 1367 002b 52       		.byte	(.L104-.L106)/2
 1368 002c 52       		.byte	(.L104-.L106)/2
 1369 002d 52       		.byte	(.L104-.L106)/2
 1370 002e 52       		.byte	(.L104-.L106)/2
 1371 002f 52       		.byte	(.L104-.L106)/2
 1372 0030 52       		.byte	(.L104-.L106)/2
 1373 0031 52       		.byte	(.L104-.L106)/2
 1374 0032 52       		.byte	(.L104-.L106)/2
 1375 0033 52       		.byte	(.L104-.L106)/2
 1376 0034 52       		.byte	(.L104-.L106)/2
 1377 0035 52       		.byte	(.L104-.L106)/2
 1378 0036 52       		.byte	(.L104-.L106)/2
 1379 0037 52       		.byte	(.L104-.L106)/2
 1380 0038 52       		.byte	(.L104-.L106)/2
 1381 0039 52       		.byte	(.L104-.L106)/2
 1382 003a 52       		.byte	(.L104-.L106)/2
 1383 003b 52       		.byte	(.L104-.L106)/2
 1384 003c 52       		.byte	(.L104-.L106)/2
 1385 003d 52       		.byte	(.L104-.L106)/2
 1386 003e 52       		.byte	(.L104-.L106)/2
 1387 003f 52       		.byte	(.L104-.L106)/2
 1388 0040 52       		.byte	(.L104-.L106)/2
 1389 0041 52       		.byte	(.L104-.L106)/2
 1390 0042 52       		.byte	(.L104-.L106)/2
 1391 0043 52       		.byte	(.L104-.L106)/2
 1392 0044 52       		.byte	(.L104-.L106)/2
 1393 0045 52       		.byte	(.L104-.L106)/2
 1394 0046 31       		.byte	(.L113-.L106)/2
 1395 0047 2B       		.byte	(.L112-.L106)/2
 1396 0048 28       		.byte	(.L111-.L106)/2
 1397 0049 2E       		.byte	(.L110-.L106)/2
 1398 004a 52       		.byte	(.L104-.L106)/2
 1399 004b 52       		.byte	(.L104-.L106)/2
 1400 004c 52       		.byte	(.L104-.L106)/2
 1401 004d 34       		.byte	(.L109-.L106)/2
 1402 004e 52       		.byte	(.L104-.L106)/2
 1403 004f 37       		.byte	(.L108-.L106)/2
 1404 0050 3A       		.byte	(.L107-.L106)/2
 1405 0051 3D       		.byte	(.L105-.L106)/2
 1406              		.p2align 1
 1407              	.L122:
 223:Core/Src/BLT/xcp.c ****   }
 1408              		.loc 1 223 5 view .LVU387
 1409 0052 FFF7FEFF 		bl	XcpCmdConnect
 1410              	.LVL94:
 1411              	.L102:
 310:Core/Src/BLT/xcp.c ****   {
 1412              		.loc 1 310 3 view .LVU388
 310:Core/Src/BLT/xcp.c ****   {
ARM GAS  /tmp/ccb89HYV.s 			page 56


 1413              		.loc 1 310 14 is_stmt 0 view .LVU389
 1414 0056 224B     		ldr	r3, .L125
 1415 0058 93F84330 		ldrb	r3, [r3, #67]	@ zero_extendqisi2
 310:Core/Src/BLT/xcp.c ****   {
 1416              		.loc 1 310 6 view .LVU390
 1417 005c 012B     		cmp	r3, #1
 1418 005e 33D0     		beq	.L123
 1419              	.L120:
 317:Core/Src/BLT/xcp.c ****   {
 1420              		.loc 1 317 3 is_stmt 1 view .LVU391
 317:Core/Src/BLT/xcp.c ****   {
 1421              		.loc 1 317 14 is_stmt 0 view .LVU392
 1422 0060 1F4B     		ldr	r3, .L125
 1423 0062 B3F94410 		ldrsh	r1, [r3, #68]
 317:Core/Src/BLT/xcp.c ****   {
 1424              		.loc 1 317 6 view .LVU393
 1425 0066 0029     		cmp	r1, #0
 1426 0068 32DC     		bgt	.L124
 1427              	.L100:
 325:Core/Src/BLT/xcp.c **** 
 1428              		.loc 1 325 1 view .LVU394
 1429 006a 08BD     		pop	{r3, pc}
 1430              	.LVL95:
 1431              	.L111:
 231:Core/Src/BLT/xcp.c ****         break;
 1432              		.loc 1 231 9 is_stmt 1 view .LVU395
 1433 006c FFF7FEFF 		bl	XcpCmdUpload
 1434              	.LVL96:
 232:Core/Src/BLT/xcp.c ****       case XCP_CMD_SHORT_UPLOAD:
 1435              		.loc 1 232 9 view .LVU396
 1436 0070 F1E7     		b	.L102
 1437              	.LVL97:
 1438              	.L112:
 234:Core/Src/BLT/xcp.c ****         break;
 1439              		.loc 1 234 9 view .LVU397
 1440 0072 FFF7FEFF 		bl	XcpCmdShortUpload
 1441              	.LVL98:
 235:Core/Src/BLT/xcp.c ****       case XCP_CMD_SET_MTA:
 1442              		.loc 1 235 9 view .LVU398
 1443 0076 EEE7     		b	.L102
 1444              	.LVL99:
 1445              	.L110:
 237:Core/Src/BLT/xcp.c ****         break;
 1446              		.loc 1 237 9 view .LVU399
 1447 0078 FFF7FEFF 		bl	XcpCmdSetMta
 1448              	.LVL100:
 238:Core/Src/BLT/xcp.c ****       case XCP_CMD_BUILD_CHECKSUM:
 1449              		.loc 1 238 9 view .LVU400
 1450 007c EBE7     		b	.L102
 1451              	.LVL101:
 1452              	.L113:
 240:Core/Src/BLT/xcp.c ****         break;
 1453              		.loc 1 240 9 view .LVU401
 1454 007e FFF7FEFF 		bl	XcpCmdBuildCheckSum
 1455              	.LVL102:
 241:Core/Src/BLT/xcp.c ****       case XCP_CMD_GET_ID:
 1456              		.loc 1 241 9 view .LVU402
ARM GAS  /tmp/ccb89HYV.s 			page 57


 1457 0082 E8E7     		b	.L102
 1458              	.LVL103:
 1459              	.L109:
 243:Core/Src/BLT/xcp.c ****         break;
 1460              		.loc 1 243 9 view .LVU403
 1461 0084 FFF7FEFF 		bl	XcpCmdGetId
 1462              	.LVL104:
 244:Core/Src/BLT/xcp.c ****       case XCP_CMD_SYNCH:
 1463              		.loc 1 244 9 view .LVU404
 1464 0088 E5E7     		b	.L102
 1465              	.LVL105:
 1466              	.L108:
 246:Core/Src/BLT/xcp.c ****         break;
 1467              		.loc 1 246 9 view .LVU405
 1468 008a FFF7FEFF 		bl	XcpCmdSynch
 1469              	.LVL106:
 247:Core/Src/BLT/xcp.c ****       case XCP_CMD_GET_STATUS:
 1470              		.loc 1 247 9 view .LVU406
 1471 008e E2E7     		b	.L102
 1472              	.LVL107:
 1473              	.L107:
 249:Core/Src/BLT/xcp.c ****         break;
 1474              		.loc 1 249 9 view .LVU407
 1475 0090 FFF7FEFF 		bl	XcpCmdGetStatus
 1476              	.LVL108:
 250:Core/Src/BLT/xcp.c ****       case XCP_CMD_DISCONNECT:
 1477              		.loc 1 250 9 view .LVU408
 1478 0094 DFE7     		b	.L102
 1479              	.LVL109:
 1480              	.L105:
 252:Core/Src/BLT/xcp.c ****         break;
 1481              		.loc 1 252 9 view .LVU409
 1482 0096 FFF7FEFF 		bl	XcpCmdDisconnect
 1483              	.LVL110:
 253:Core/Src/BLT/xcp.c **** #if (XCP_RES_CALIBRATION_EN == 1)
 1484              		.loc 1 253 9 view .LVU410
 1485 009a DCE7     		b	.L102
 1486              	.LVL111:
 1487              	.L119:
 264:Core/Src/BLT/xcp.c ****         break;
 1488              		.loc 1 264 9 view .LVU411
 1489 009c FFF7FEFF 		bl	XcpCmdProgramMax
 1490              	.LVL112:
 265:Core/Src/BLT/xcp.c ****       case XCP_CMD_PROGRAM:
 1491              		.loc 1 265 9 view .LVU412
 1492 00a0 D9E7     		b	.L102
 1493              	.LVL113:
 1494              	.L116:
 267:Core/Src/BLT/xcp.c ****         break;
 1495              		.loc 1 267 9 view .LVU413
 1496 00a2 FFF7FEFF 		bl	XcpCmdProgram
 1497              	.LVL114:
 268:Core/Src/BLT/xcp.c ****       case XCP_CMD_PROGRAM_START:
 1498              		.loc 1 268 9 view .LVU414
 1499 00a6 D6E7     		b	.L102
 1500              	.LVL115:
 1501              	.L114:
ARM GAS  /tmp/ccb89HYV.s 			page 58


 270:Core/Src/BLT/xcp.c ****         break;
 1502              		.loc 1 270 9 view .LVU415
 1503 00a8 FFF7FEFF 		bl	XcpCmdProgramStart
 1504              	.LVL116:
 271:Core/Src/BLT/xcp.c ****       case XCP_CMD_PROGRAM_CLEAR:
 1505              		.loc 1 271 9 view .LVU416
 1506 00ac D3E7     		b	.L102
 1507              	.LVL117:
 1508              	.L115:
 273:Core/Src/BLT/xcp.c ****         break;
 1509              		.loc 1 273 9 view .LVU417
 1510 00ae FFF7FEFF 		bl	XcpCmdProgramClear
 1511              	.LVL118:
 274:Core/Src/BLT/xcp.c ****       case XCP_CMD_PROGRAM_RESET:
 1512              		.loc 1 274 9 view .LVU418
 1513 00b2 D0E7     		b	.L102
 1514              	.LVL119:
 1515              	.L117:
 276:Core/Src/BLT/xcp.c ****         break;
 1516              		.loc 1 276 9 view .LVU419
 1517 00b4 FFF7FEFF 		bl	XcpCmdProgramReset
 1518              	.LVL120:
 277:Core/Src/BLT/xcp.c ****       case XCP_CMD_PROGRAM_PREPARE:
 1519              		.loc 1 277 9 view .LVU420
 1520 00b8 CDE7     		b	.L102
 1521              	.LVL121:
 1522              	.L118:
 279:Core/Src/BLT/xcp.c ****         break;
 1523              		.loc 1 279 9 view .LVU421
 1524 00ba FFF7FEFF 		bl	XcpCmdProgramPrepare
 1525              	.LVL122:
 280:Core/Src/BLT/xcp.c **** #endif
 1526              		.loc 1 280 9 view .LVU422
 1527 00be CAE7     		b	.L102
 1528              	.LVL123:
 1529              	.L104:
 299:Core/Src/BLT/xcp.c ****         break;
 1530              		.loc 1 299 9 view .LVU423
 1531 00c0 2020     		movs	r0, #32
 1532              	.LVL124:
 299:Core/Src/BLT/xcp.c ****         break;
 1533              		.loc 1 299 9 is_stmt 0 view .LVU424
 1534 00c2 FFF7FEFF 		bl	XcpSetCtoError
 1535              	.LVL125:
 300:Core/Src/BLT/xcp.c ****     }
 1536              		.loc 1 300 9 is_stmt 1 view .LVU425
 1537 00c6 C6E7     		b	.L102
 1538              	.L123:
 313:Core/Src/BLT/xcp.c ****   }
 1539              		.loc 1 313 5 view .LVU426
 1540 00c8 1020     		movs	r0, #16
 1541 00ca FFF7FEFF 		bl	XcpSetCtoError
 1542              	.LVL126:
 1543 00ce C7E7     		b	.L120
 1544              	.L124:
 320:Core/Src/BLT/xcp.c **** 
 1545              		.loc 1 320 5 view .LVU427
ARM GAS  /tmp/ccb89HYV.s 			page 59


 320:Core/Src/BLT/xcp.c **** 
 1546              		.loc 1 320 24 is_stmt 0 view .LVU428
 1547 00d0 1846     		mov	r0, r3
 1548 00d2 0123     		movs	r3, #1
 1549 00d4 80F84330 		strb	r3, [r0, #67]
 323:Core/Src/BLT/xcp.c ****   }
 1550              		.loc 1 323 5 is_stmt 1 view .LVU429
 1551 00d8 FFF7FEFF 		bl	XcpTransmitPacket
 1552              	.LVL127:
 1553 00dc C5E7     		b	.L100
 1554              	.L126:
 1555 00de 00BF     		.align	2
 1556              	.L125:
 1557 00e0 00000000 		.word	xcpInfo
 1558              		.cfi_endproc
 1559              	.LFE3:
 1561              		.section	.bss.xcpInfo,"aw",%nobits
 1562              		.align	2
 1565              	xcpInfo:
 1566 0000 00000000 		.space	76
 1566      00000000 
 1566      00000000 
 1566      00000000 
 1566      00000000 
 1567              		.section	.rodata.xcpStationId,"a"
 1568              		.align	2
 1571              	xcpStationId:
 1572 0000 4F70656E 		.ascii	"OpenBLT\000"
 1572      424C5400 
 1573              		.text
 1574              	.Letext0:
 1575              		.file 2 "Core/Inc/BLT/types.h"
 1576              		.file 3 "Core/Inc/BLT/nvm.h"
 1577              		.file 4 "Core/Inc/BLT/cpu.h"
 1578              		.file 5 "Core/Inc/BLT/cop.h"
 1579              		.file 6 "Core/Inc/BLT/com.h"
ARM GAS  /tmp/ccb89HYV.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 xcp.c
     /tmp/ccb89HYV.s:21     .text.XcpProtectResources:0000000000000000 $t
     /tmp/ccb89HYV.s:26     .text.XcpProtectResources:0000000000000000 XcpProtectResources
     /tmp/ccb89HYV.s:43     .text.XcpProtectResources:000000000000000c $d
     /tmp/ccb89HYV.s:1565   .bss.xcpInfo:0000000000000000 xcpInfo
     /tmp/ccb89HYV.s:48     .text.XcpSetCtoError:0000000000000000 $t
     /tmp/ccb89HYV.s:53     .text.XcpSetCtoError:0000000000000000 XcpSetCtoError
     /tmp/ccb89HYV.s:78     .text.XcpSetCtoError:0000000000000010 $d
     /tmp/ccb89HYV.s:83     .text.XcpGetOrderedLong:0000000000000000 $t
     /tmp/ccb89HYV.s:88     .text.XcpGetOrderedLong:0000000000000000 XcpGetOrderedLong
     /tmp/ccb89HYV.s:127    .text.XcpSetOrderedLong:0000000000000000 $t
     /tmp/ccb89HYV.s:132    .text.XcpSetOrderedLong:0000000000000000 XcpSetOrderedLong
     /tmp/ccb89HYV.s:165    .text.XcpCmdDisconnect:0000000000000000 $t
     /tmp/ccb89HYV.s:170    .text.XcpCmdDisconnect:0000000000000000 XcpCmdDisconnect
     /tmp/ccb89HYV.s:204    .text.XcpCmdDisconnect:000000000000001c $d
     /tmp/ccb89HYV.s:209    .text.XcpCmdGetStatus:0000000000000000 $t
     /tmp/ccb89HYV.s:214    .text.XcpCmdGetStatus:0000000000000000 XcpCmdGetStatus
     /tmp/ccb89HYV.s:255    .text.XcpCmdGetStatus:0000000000000020 $d
     /tmp/ccb89HYV.s:260    .text.XcpCmdSynch:0000000000000000 $t
     /tmp/ccb89HYV.s:265    .text.XcpCmdSynch:0000000000000000 XcpCmdSynch
     /tmp/ccb89HYV.s:290    .text.XcpCmdGetId:0000000000000000 $t
     /tmp/ccb89HYV.s:295    .text.XcpCmdGetId:0000000000000000 XcpCmdGetId
     /tmp/ccb89HYV.s:347    .text.XcpCmdGetId:0000000000000024 $d
     /tmp/ccb89HYV.s:1571   .rodata.xcpStationId:0000000000000000 xcpStationId
     /tmp/ccb89HYV.s:353    .text.XcpCmdSetMta:0000000000000000 $t
     /tmp/ccb89HYV.s:358    .text.XcpCmdSetMta:0000000000000000 XcpCmdSetMta
     /tmp/ccb89HYV.s:393    .text.XcpCmdSetMta:0000000000000018 $d
     /tmp/ccb89HYV.s:398    .text.XcpCmdProgramPrepare:0000000000000000 $t
     /tmp/ccb89HYV.s:403    .text.XcpCmdProgramPrepare:0000000000000000 XcpCmdProgramPrepare
     /tmp/ccb89HYV.s:428    .text.XcpCmdProgramStart:0000000000000000 $t
     /tmp/ccb89HYV.s:433    .text.XcpCmdProgramStart:0000000000000000 XcpCmdProgramStart
     /tmp/ccb89HYV.s:484    .text.XcpCmdProgramStart:0000000000000024 $d
     /tmp/ccb89HYV.s:489    .text.XcpCmdConnect:0000000000000000 $t
     /tmp/ccb89HYV.s:494    .text.XcpCmdConnect:0000000000000000 XcpCmdConnect
     /tmp/ccb89HYV.s:571    .text.XcpCmdConnect:0000000000000044 $d
     /tmp/ccb89HYV.s:576    .text.XcpCmdUpload:0000000000000000 $t
     /tmp/ccb89HYV.s:581    .text.XcpCmdUpload:0000000000000000 XcpCmdUpload
     /tmp/ccb89HYV.s:652    .text.XcpCmdUpload:0000000000000038 $d
     /tmp/ccb89HYV.s:657    .text.XcpCmdShortUpload:0000000000000000 $t
     /tmp/ccb89HYV.s:662    .text.XcpCmdShortUpload:0000000000000000 XcpCmdShortUpload
     /tmp/ccb89HYV.s:739    .text.XcpCmdShortUpload:0000000000000040 $d
     /tmp/ccb89HYV.s:744    .text.XcpComputeChecksum:0000000000000000 $t
     /tmp/ccb89HYV.s:749    .text.XcpComputeChecksum:0000000000000000 XcpComputeChecksum
     /tmp/ccb89HYV.s:813    .text.XcpCmdBuildCheckSum:0000000000000000 $t
     /tmp/ccb89HYV.s:818    .text.XcpCmdBuildCheckSum:0000000000000000 XcpCmdBuildCheckSum
     /tmp/ccb89HYV.s:890    .text.XcpCmdBuildCheckSum:0000000000000038 $d
     /tmp/ccb89HYV.s:895    .text.XcpCmdProgramMax:0000000000000000 $t
     /tmp/ccb89HYV.s:900    .text.XcpCmdProgramMax:0000000000000000 XcpCmdProgramMax
     /tmp/ccb89HYV.s:966    .text.XcpCmdProgramMax:000000000000003c $d
     /tmp/ccb89HYV.s:971    .text.XcpCmdProgram:0000000000000000 $t
     /tmp/ccb89HYV.s:976    .text.XcpCmdProgram:0000000000000000 XcpCmdProgram
     /tmp/ccb89HYV.s:1067   .text.XcpCmdProgram:0000000000000058 $d
     /tmp/ccb89HYV.s:1072   .text.XcpCmdProgramClear:0000000000000000 $t
     /tmp/ccb89HYV.s:1077   .text.XcpCmdProgramClear:0000000000000000 XcpCmdProgramClear
     /tmp/ccb89HYV.s:1138   .text.XcpCmdProgramClear:000000000000002c $d
     /tmp/ccb89HYV.s:1143   .text.XcpCmdProgramReset:0000000000000000 $t
ARM GAS  /tmp/ccb89HYV.s 			page 61


     /tmp/ccb89HYV.s:1148   .text.XcpCmdProgramReset:0000000000000000 XcpCmdProgramReset
     /tmp/ccb89HYV.s:1178   .text.XcpCmdProgramReset:0000000000000014 $d
     /tmp/ccb89HYV.s:1183   .text.XcpTransmitPacket:0000000000000000 $t
     /tmp/ccb89HYV.s:1188   .text.XcpTransmitPacket:0000000000000000 XcpTransmitPacket
     /tmp/ccb89HYV.s:1211   .text.XcpInit:0000000000000000 $t
     /tmp/ccb89HYV.s:1217   .text.XcpInit:0000000000000000 XcpInit
     /tmp/ccb89HYV.s:1249   .text.XcpInit:000000000000001c $d
     /tmp/ccb89HYV.s:1254   .text.XcpIsConnected:0000000000000000 $t
     /tmp/ccb89HYV.s:1260   .text.XcpIsConnected:0000000000000000 XcpIsConnected
     /tmp/ccb89HYV.s:1281   .text.XcpIsConnected:000000000000000c $d
     /tmp/ccb89HYV.s:1286   .text.XcpPacketTransmitted:0000000000000000 $t
     /tmp/ccb89HYV.s:1292   .text.XcpPacketTransmitted:0000000000000000 XcpPacketTransmitted
     /tmp/ccb89HYV.s:1309   .text.XcpPacketTransmitted:000000000000000c $d
     /tmp/ccb89HYV.s:1314   .text.XcpPacketReceived:0000000000000000 $t
     /tmp/ccb89HYV.s:1320   .text.XcpPacketReceived:0000000000000000 XcpPacketReceived
     /tmp/ccb89HYV.s:1352   .text.XcpPacketReceived:000000000000001c $d
     /tmp/ccb89HYV.s:1406   .text.XcpPacketReceived:0000000000000052 $t
     /tmp/ccb89HYV.s:1557   .text.XcpPacketReceived:00000000000000e0 $d
     /tmp/ccb89HYV.s:1562   .bss.xcpInfo:0000000000000000 $d
     /tmp/ccb89HYV.s:1568   .rodata.xcpStationId:0000000000000000 $d

UNDEFINED SYMBOLS
ComGetActiveInterfaceMaxRxLen
ComGetActiveInterfaceMaxTxLen
NvmInit
CpuMemCopy
CopService
NvmWrite
NvmDone
NvmErase
CpuStartUserProgram
ComTransmitPacket
