ARM GAS  /tmp/ccGuoZdI.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"asserts.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/BLT/asserts.c"
  20              		.section	.text.AssertFailure,"ax",%progbits
  21              		.align	1
  22              		.global	AssertFailure
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	AssertFailure:
  28              	.LFB0:
   1:Core/Src/BLT/asserts.c **** /************************************************************************************//**
   2:Core/Src/BLT/asserts.c **** * \file         Source/asserts.c
   3:Core/Src/BLT/asserts.c **** * \brief        Bootloader assertion module source file.
   4:Core/Src/BLT/asserts.c **** * \ingroup      Core
   5:Core/Src/BLT/asserts.c **** * \internal
   6:Core/Src/BLT/asserts.c **** *----------------------------------------------------------------------------------------
   7:Core/Src/BLT/asserts.c **** *                          C O P Y R I G H T
   8:Core/Src/BLT/asserts.c **** *----------------------------------------------------------------------------------------
   9:Core/Src/BLT/asserts.c **** *   Copyright (c) 2011  by Feaser    http://www.feaser.com    All rights reserved
  10:Core/Src/BLT/asserts.c **** *
  11:Core/Src/BLT/asserts.c **** *----------------------------------------------------------------------------------------
  12:Core/Src/BLT/asserts.c **** *                            L I C E N S E
  13:Core/Src/BLT/asserts.c **** *----------------------------------------------------------------------------------------
  14:Core/Src/BLT/asserts.c **** * This file is part of OpenBLT. OpenBLT is free software: you can redistribute it and/or
  15:Core/Src/BLT/asserts.c **** * modify it under the terms of the GNU General Public License as published by the Free
  16:Core/Src/BLT/asserts.c **** * Software Foundation, either version 3 of the License, or (at your option) any later
  17:Core/Src/BLT/asserts.c **** * version.
  18:Core/Src/BLT/asserts.c **** *
  19:Core/Src/BLT/asserts.c **** * OpenBLT is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  20:Core/Src/BLT/asserts.c **** * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
  21:Core/Src/BLT/asserts.c **** * PURPOSE. See the GNU General Public License for more details.
  22:Core/Src/BLT/asserts.c **** *
  23:Core/Src/BLT/asserts.c **** * You have received a copy of the GNU General Public License along with OpenBLT. It
  24:Core/Src/BLT/asserts.c **** * should be located in ".\Doc\license.html". If not, contact Feaser to obtain a copy.
  25:Core/Src/BLT/asserts.c **** *
  26:Core/Src/BLT/asserts.c **** * \endinternal
  27:Core/Src/BLT/asserts.c **** ****************************************************************************************/
  28:Core/Src/BLT/asserts.c **** 
  29:Core/Src/BLT/asserts.c **** /****************************************************************************************
  30:Core/Src/BLT/asserts.c **** * Include files
ARM GAS  /tmp/ccGuoZdI.s 			page 2


  31:Core/Src/BLT/asserts.c **** ****************************************************************************************/
  32:Core/Src/BLT/asserts.c **** #include "BLT/boot.h"                                /* bootloader generic header          */
  33:Core/Src/BLT/asserts.c **** 
  34:Core/Src/BLT/asserts.c **** 
  35:Core/Src/BLT/asserts.c **** #ifndef NDEBUG
  36:Core/Src/BLT/asserts.c **** /************************************************************************************//**
  37:Core/Src/BLT/asserts.c **** ** \brief     Called when a runtime assertion failed. It stores information about where
  38:Core/Src/BLT/asserts.c **** **            the assertion occurred and halts the software program.
  39:Core/Src/BLT/asserts.c **** ** \param     file   Name of the source file where the assertion occurred.
  40:Core/Src/BLT/asserts.c **** ** \param     line   Linenumber in the source file where the assertion occurred.
  41:Core/Src/BLT/asserts.c **** ** \return    none
  42:Core/Src/BLT/asserts.c **** **
  43:Core/Src/BLT/asserts.c **** ****************************************************************************************/
  44:Core/Src/BLT/asserts.c **** void AssertFailure(blt_char *file, blt_int32u line)
  45:Core/Src/BLT/asserts.c **** {
  29              		.loc 1 45 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35              		.loc 1 45 1 is_stmt 0 view .LVU1
  36 0000 08B5     		push	{r3, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  41              	.L2:
  46:Core/Src/BLT/asserts.c ****   /* hang the software so that it requires a hard reset */
  47:Core/Src/BLT/asserts.c ****   for (;;)
  42              		.loc 1 47 3 is_stmt 1 view .LVU2
  48:Core/Src/BLT/asserts.c ****   {
  49:Core/Src/BLT/asserts.c ****     /* keep servicing the watchdog so that this one does not cause a reset */
  50:Core/Src/BLT/asserts.c ****     CopService();
  43              		.loc 1 50 5 discriminator 1 view .LVU3
  44 0002 FFF7FEFF 		bl	CopService
  45              	.LVL2:
  47:Core/Src/BLT/asserts.c ****   {
  46              		.loc 1 47 3 view .LVU4
  47 0006 FCE7     		b	.L2
  48              		.cfi_endproc
  49              	.LFE0:
  51              		.text
  52              	.Letext0:
  53              		.file 2 "Core/Inc/BLT/types.h"
  54              		.file 3 "Core/Inc/BLT/cop.h"
ARM GAS  /tmp/ccGuoZdI.s 			page 3


DEFINED SYMBOLS
                            *ABS*:00000000 asserts.c
     /tmp/ccGuoZdI.s:21     .text.AssertFailure:00000000 $t
     /tmp/ccGuoZdI.s:27     .text.AssertFailure:00000000 AssertFailure

UNDEFINED SYMBOLS
CopService
